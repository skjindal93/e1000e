!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADVERTISED_10000baseKR_Full	kcompat.h	2642;"	d
ADVERTISED_10000baseKX4_Full	kcompat.h	2639;"	d
ADVERTISED_10000baseT_Full	kcompat.h	1054;"	d
ADVERTISED_10000baseT_Full	kcompat_ethtool.c	62;"	d	file:
ADVERTISED_10000baseT_Full	kcompat_ethtool.c	63;"	d	file:
ADVERTISED_1000baseKX_Full	kcompat.h	2636;"	d
ADVERTISED_2500baseX_Full	kcompat.h	2191;"	d
ADVERTISED_40000baseCR4_Full	kcompat.h	3568;"	d
ADVERTISED_40000baseKR4_Full	kcompat.h	3567;"	d
ADVERTISED_40000baseLR4_Full	kcompat.h	3570;"	d
ADVERTISED_40000baseSR4_Full	kcompat.h	3569;"	d
ADVERTISED_Asym_Pause	kcompat.h	1767;"	d
ADVERTISED_Pause	kcompat.h	1766;"	d
ADVERTISE_1000FULL	kcompat.h	1718;"	d
ADVERTISE_1000HALF	kcompat.h	1719;"	d
ADVERTISE_1000_FULL	defines.h	257;"	d
ADVERTISE_1000_HALF	defines.h	256;"	d
ADVERTISE_100FULL	kcompat.h	799;"	d
ADVERTISE_100HALF	kcompat.h	798;"	d
ADVERTISE_100_FULL	defines.h	255;"	d
ADVERTISE_100_HALF	defines.h	254;"	d
ADVERTISE_10FULL	kcompat.h	797;"	d
ADVERTISE_10HALF	kcompat.h	796;"	d
ADVERTISE_10_FULL	defines.h	253;"	d
ADVERTISE_10_HALF	defines.h	252;"	d
ADVERTISE_ALL	kcompat.h	800;"	d
ADVERTISE_CSMA	kcompat.h	795;"	d
ADVERTISE_PAUSE_ASYM	kcompat.h	1713;"	d
ADVERTISE_PAUSE_CAP	kcompat.h	1712;"	d
ALIGN	kcompat.h	1328;"	d
ALIGN	kcompat.h	1329;"	d
ANCIENT_PM	kcompat.h	2410;"	d
AN_RETRY_COUNT	82571.h	39;"	d
ARCH	Makefile	/^ARCH := $(shell uname -m | sed 's\/i.86\/i386\/')$/;"	m
ARRAY_SIZE	kcompat.h	1885;"	d
ARRAY_SIZE	kcompat.h	719;"	d
ARRAY_SIZE	kcompat.h	720;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	defines.h	270;"	d
AUTO_ALL_MODES	e1000.h	94;"	d
AUTO_READ_DONE_TIMEOUT	defines.h	515;"	d
AX_RELEASE_CODE	kcompat.h	680;"	d
AX_RELEASE_VERSION	kcompat.h	676;"	d
BITOP_WORD	kcompat.h	1344;"	d
BITS_TO_LONGS	kcompat.h	254;"	d
BMCR_ANENABLE	kcompat.h	786;"	d
BMCR_FULLDPLX	kcompat.h	785;"	d
BMCR_SPEED1000	kcompat.h	1553;"	d
BME1000_E_PHY_ID	defines.h	699;"	d
BME1000_E_PHY_ID_R2	defines.h	700;"	d
BME1000_PSCR_ENABLE_DOWNSHIFT	defines.h	761;"	d
BMSR_100FULL	kcompat.h	793;"	d
BMSR_100HALF	kcompat.h	792;"	d
BMSR_10FULL	kcompat.h	791;"	d
BMSR_10HALF	kcompat.h	790;"	d
BMSR_ANEGCAPABLE	kcompat.h	789;"	d
BMSR_ERCAP	kcompat.h	788;"	d
BMSR_ESTATEN	kcompat.h	1759;"	d
BM_CS_CTRL1	phy.h	160;"	d
BM_CS_STATUS	phy.h	163;"	d
BM_CS_STATUS_LINK_UP	phy.h	164;"	d
BM_CS_STATUS_RESOLVED	phy.h	165;"	d
BM_CS_STATUS_SPEED_1000	phy.h	167;"	d
BM_CS_STATUS_SPEED_MASK	phy.h	166;"	d
BM_MTA	ich8lan.h	133;"	d
BM_PHY_PAGE_SELECT	phy.h	103;"	d
BM_PHY_REG	phy.h	119;"	d
BM_PHY_REG_NUM	phy.h	125;"	d
BM_PHY_REG_PAGE	phy.h	123;"	d
BM_PORT_CTRL_PAGE	phy.h	108;"	d
BM_PORT_GEN_CFG	ich8lan.h	124;"	d
BM_RAR_CTRL	ich8lan.h	132;"	d
BM_RAR_H	ich8lan.h	131;"	d
BM_RAR_L	ich8lan.h	129;"	d
BM_RAR_M	ich8lan.h	130;"	d
BM_RCTL	ich8lan.h	125;"	d
BM_RCTL_BAM	ich8lan.h	139;"	d
BM_RCTL_MO_MASK	ich8lan.h	138;"	d
BM_RCTL_MO_SHIFT	ich8lan.h	137;"	d
BM_RCTL_MPE	ich8lan.h	136;"	d
BM_RCTL_PMCF	ich8lan.h	140;"	d
BM_RCTL_RFCE	ich8lan.h	141;"	d
BM_RCTL_UPE	ich8lan.h	135;"	d
BM_WUC	ich8lan.h	126;"	d
BM_WUC_ADDRESS_OPCODE	phy.h	110;"	d
BM_WUC_DATA_OPCODE	phy.h	111;"	d
BM_WUC_ENABLE_BIT	phy.h	114;"	d
BM_WUC_ENABLE_PAGE	phy.h	112;"	d
BM_WUC_ENABLE_REG	phy.h	113;"	d
BM_WUC_HOST_WU_BIT	phy.h	115;"	d
BM_WUC_ME_WU_BIT	phy.h	116;"	d
BM_WUC_PAGE	phy.h	109;"	d
BM_WUFC	ich8lan.h	127;"	d
BM_WUS	ich8lan.h	128;"	d
BRIDGE_MODE_VEB	kcompat.h	3750;"	d
BRIDGE_MODE_VEPA	kcompat.h	3753;"	d
BUILD_KERNEL	Makefile	/^BUILD_KERNEL=$(shell uname -r)$/;"	m
BURST_RADV	e1000.h	115;"	d
BURST_RDTR	e1000.h	114;"	d
CC	Makefile	/^  CC := gcc cc$/;"	m
CC	Makefile	/^  CC := kgcc gcc cc$/;"	m
CC	Makefile	/^CC := $(firstword $(CC))$/;"	m
CC	Makefile	/^CC := $(foreach cc, $(CC), $(test_cc))$/;"	m
CFILES	Makefile	/^CFILES = netdev.c ethtool.c param.c $(FAMILYC) \\$/;"	m
CHECKSUM_COMPLETE	kcompat.h	210;"	d
CHECKSUM_PARTIAL	kcompat.h	209;"	d
CONFIG_E1000E_MSIX	kcompat.h	66;"	d
CONFIG_E1000E_NAPI	kcompat.h	1040;"	d
CONFIG_E1000E_NAPI	kcompat.h	71;"	d
CONFIG_E1000E_NAPI	kcompat.h	74;"	d
CONFIG_E1000_DISABLE_PACKET_SPLIT	kcompat.h	1311;"	d
CONFIG_FCOE	kcompat.h	1965;"	d
CONFIG_FCOE_MODULE	kcompat.h	1966;"	d
CONFIG_FILE	Makefile	/^  CONFIG_FILE := $(firstword $(CSP))$/;"	m
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS	kcompat.h	285;"	d
CONFIG_IGB_DISABLE_PACKET_SPLIT	kcompat.h	1314;"	d
CONFIG_INET_LRO	kcompat.h	1962;"	d
CONFIG_INET_LRO_MODULE	kcompat.h	1963;"	d
CONFIG_NET_POLL_CONTROLLER	kcompat.h	107;"	d
CONFIG_NET_POLL_CONTROLLER	kcompat.h	172;"	d
CONFIG_NR_CPUS	kcompat.h	2542;"	d
CONFIG_PCI_MSI	kcompat.h	83;"	d
CONFIG_PM	kcompat.h	103;"	d
CONFIG_PM	kcompat.h	826;"	d
CONFIG_PM_SLEEP	kcompat.h	2216;"	d
CONFIG_XPS	kcompat.h	3251;"	d
COPPER_LINK_UP_LIMIT	defines.h	505;"	d
COPYBREAK_DEFAULT	param.c	44;"	d	file:
CSP	Makefile	/^CSP :=  $(KSRC)\/include\/generated\/autoconf.h \\$/;"	m
CSP	Makefile	/^CSP := $(foreach file, $(CSP), $(test_file))$/;"	m
CTL1000_AS_MASTER	kcompat.h	3351;"	d
CTL1000_ENABLE_MASTER	kcompat.h	3352;"	d
CV_SMB_CTRL	ich8lan.h	170;"	d
CV_SMB_CTRL_FORCE_SMBUS	ich8lan.h	171;"	d
DCA_PROVIDER_ADD	kcompat.h	275;"	d
DCA_PROVIDER_REMOVE	kcompat.h	276;"	d
DCB_CAP_DCBX_HOST	kcompat.h	3235;"	d
DCB_CAP_DCBX_LLD_MANAGED	kcompat.h	3238;"	d
DCB_CAP_DCBX_STATIC	kcompat.h	3247;"	d
DCB_CAP_DCBX_VER_CEE	kcompat.h	3241;"	d
DCB_CAP_DCBX_VER_IEEE	kcompat.h	3244;"	d
DECLARE_BITMAP	kcompat.h	256;"	d
DECLARE_PCI_UNMAP_ADDR	kcompat.h	1926;"	d
DECLARE_PCI_UNMAP_LEN	kcompat.h	1928;"	d
DEFAULT_80003ES2LAN_TIPG_IPGR2	defines.h	348;"	d
DEFAULT_82543_TIPG_IPGR1	defines.h	344;"	d
DEFAULT_82543_TIPG_IPGR2	defines.h	347;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	defines.h	340;"	d
DEFAULT_ITR	param.c	126;"	d	file:
DEFAULT_JUMBO	e1000.h	102;"	d
DEFAULT_MSG_ENABLE	netdev.c	67;"	d	file:
DEFAULT_RADV	e1000.h	113;"	d
DEFAULT_RDTR	e1000.h	112;"	d
DEFAULT_TADV	param.c	100;"	d	file:
DEFAULT_TCTL_EXT_GCEX_80003ES2LAN	80003es2lan.h	49;"	d
DEFAULT_TIDV	param.c	91;"	d	file:
DEFAULT_TIPG_IPGT_1000_80003ES2LAN	80003es2lan.h	51;"	d
DEFAULT_TIPG_IPGT_10_100_80003ES2LAN	80003es2lan.h	52;"	d
DEFINE_DMA_UNMAP_ADDR	kcompat.h	2767;"	d
DEFINE_DMA_UNMAP_ADDR	kcompat.h	2768;"	d
DEFINE_DMA_UNMAP_ADDR	kcompat.h	2977;"	d
DEFINE_DMA_UNMAP_LEN	kcompat.h	2769;"	d
DEFINE_DMA_UNMAP_LEN	kcompat.h	2770;"	d
DEFINE_DMA_UNMAP_LEN	kcompat.h	2978;"	d
DEFINE_MUTEX	kcompat.h	1824;"	d
DEFINE_MUTEX	kcompat.h	1825;"	d
DEFINE_PCI_DEVICE_TABLE	kcompat.h	2360;"	d
DEPVER	Makefile	/^DEPVER := $(shell \/sbin\/depmod -V 2>\/dev\/null | \\$/;"	m
DIV_ROUND_UP	kcompat.h	1949;"	d
DMA_32BIT_MASK	kcompat.h	141;"	d
DMA_32BIT_MASK	kcompat.h	964;"	d
DMA_32BIT_MASK	kcompat.h	965;"	d
DMA_64BIT_MASK	kcompat.h	137;"	d
DMA_64BIT_MASK	kcompat.h	966;"	d
DMA_64BIT_MASK	kcompat.h	967;"	d
DMA_BIDIRECTIONAL	kcompat.h	/^	DMA_BIDIRECTIONAL = 0,$/;"	e	enum:dma_data_direction
DMA_BIT_MASK	kcompat.h	2299;"	d
DMA_FROM_DEVICE	kcompat.h	/^	DMA_FROM_DEVICE = 2,$/;"	e	enum:dma_data_direction
DMA_NONE	kcompat.h	/^	DMA_NONE = 3,$/;"	e	enum:dma_data_direction
DMA_TO_DEVICE	kcompat.h	/^	DMA_TO_DEVICE = 1,$/;"	e	enum:dma_data_direction
DRIVER_NAME	Makefile	/^DRIVER_NAME = e1000e$/;"	m
DRV_EXTRAVERSION	netdev.c	58;"	d	file:
DRV_EXTRAVERSION	netdev.c	60;"	d	file:
DRV_VERSION	netdev.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	netdev.c	63;"	d	file:
DUMP_PREFIX_ADDRESS	kcompat.h	/^	DUMP_PREFIX_ADDRESS,$/;"	e	enum:__anon34
DUMP_PREFIX_NONE	kcompat.h	/^	DUMP_PREFIX_NONE,$/;"	e	enum:__anon34
DUMP_PREFIX_OFFSET	kcompat.h	/^	DUMP_PREFIX_OFFSET$/;"	e	enum:__anon34
DUPLEX_UNKNOWN	kcompat.h	3426;"	d
E1000E_INT_MODE_LEGACY	e1000.h	68;"	d
E1000E_INT_MODE_MSI	e1000.h	69;"	d
E1000E_INT_MODE_MSIX	e1000.h	70;"	d
E1000_AIT	regs.h	68;"	d
E1000_ALGNERRC	regs.h	139;"	d
E1000_ALL_100_SPEED	defines.h	266;"	d
E1000_ALL_10_SPEED	defines.h	267;"	d
E1000_ALL_HALF_DUPLEX	defines.h	268;"	d
E1000_ALL_NOT_GIG	defines.h	263;"	d
E1000_ALL_SPEED_DUPLEX	defines.h	260;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN0	hw.h	102;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN1	hw.h	103;"	d
E1000_BASE1000T_STATUS	82571.h	52;"	d
E1000_BLK_PHY_RESET	defines.h	496;"	d
E1000_BPRC	regs.h	165;"	d
E1000_BPTC	regs.h	193;"	d
E1000_CABLE_LENGTH_UNDEFINED	phy.h	205;"	d
E1000_CEXTERR	regs.h	151;"	d
E1000_CHECK_RESET_COUNT	e1000.h	110;"	d
E1000_COLC	regs.h	147;"	d
E1000_COLD_SHIFT	defines.h	337;"	d
E1000_COLLISION_DISTANCE	defines.h	336;"	d
E1000_COLLISION_THRESHOLD	defines.h	334;"	d
E1000_CONTEXT_DESC	e1000.h	510;"	d
E1000_CRCERRS	regs.h	138;"	d
E1000_CRC_OFFSET	regs.h	205;"	d
E1000_CTRL	regs.h	32;"	d
E1000_CTRL_ADVD3WUC	defines.h	221;"	d
E1000_CTRL_ASDE	defines.h	207;"	d
E1000_CTRL_EN_PHY_PWR_MGMT	defines.h	222;"	d
E1000_CTRL_EXT	regs.h	36;"	d
E1000_CTRL_EXT_DMA_DYN_CLK_EN	defines.h	66;"	d
E1000_CTRL_EXT_DRV_LOAD	defines.h	70;"	d
E1000_CTRL_EXT_EE_RST	defines.h	63;"	d
E1000_CTRL_EXT_EIAME	defines.h	69;"	d
E1000_CTRL_EXT_FORCE_SMBUS	defines.h	62;"	d
E1000_CTRL_EXT_IAME	defines.h	71;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	defines.h	67;"	d
E1000_CTRL_EXT_LINK_MODE_PCIE_SERDES	defines.h	68;"	d
E1000_CTRL_EXT_LPCD	defines.h	60;"	d
E1000_CTRL_EXT_LSECCK	defines.h	73;"	d
E1000_CTRL_EXT_PBA_CLR	defines.h	72;"	d
E1000_CTRL_EXT_PHYPDEN	defines.h	74;"	d
E1000_CTRL_EXT_RO_DIS	defines.h	65;"	d
E1000_CTRL_EXT_SDP3_DATA	defines.h	61;"	d
E1000_CTRL_EXT_SPD_BYPS	defines.h	64;"	d
E1000_CTRL_FD	defines.h	204;"	d
E1000_CTRL_FRCDPX	defines.h	215;"	d
E1000_CTRL_FRCSPD	defines.h	214;"	d
E1000_CTRL_GIO_MASTER_DISABLE	defines.h	205;"	d
E1000_CTRL_ILOS	defines.h	209;"	d
E1000_CTRL_LANPHYPC_OVERRIDE	defines.h	216;"	d
E1000_CTRL_LANPHYPC_VALUE	defines.h	217;"	d
E1000_CTRL_LRST	defines.h	206;"	d
E1000_CTRL_MEHE	defines.h	218;"	d
E1000_CTRL_PHY_RST	defines.h	228;"	d
E1000_CTRL_RFCE	defines.h	225;"	d
E1000_CTRL_RST	defines.h	224;"	d
E1000_CTRL_SLU	defines.h	208;"	d
E1000_CTRL_SPD_10	defines.h	211;"	d
E1000_CTRL_SPD_100	defines.h	212;"	d
E1000_CTRL_SPD_1000	defines.h	213;"	d
E1000_CTRL_SPD_SEL	defines.h	210;"	d
E1000_CTRL_SWDPIN0	defines.h	219;"	d
E1000_CTRL_SWDPIN1	defines.h	220;"	d
E1000_CTRL_SWDPIO0	defines.h	223;"	d
E1000_CTRL_TFCE	defines.h	226;"	d
E1000_CTRL_VME	defines.h	227;"	d
E1000_CT_SHIFT	defines.h	335;"	d
E1000_DC	regs.h	148;"	d
E1000_DEFAULT_RXD	e1000.h	81;"	d
E1000_DEFAULT_TXD	e1000.h	77;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_DPT	hw.h	56;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_SPT	hw.h	58;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_DPT	hw.h	57;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_SPT	hw.h	59;"	d
E1000_DEV_ID_82571EB_COPPER	hw.h	37;"	d
E1000_DEV_ID_82571EB_FIBER	hw.h	38;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER	hw.h	40;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER_LP	hw.h	43;"	d
E1000_DEV_ID_82571EB_QUAD_FIBER	hw.h	42;"	d
E1000_DEV_ID_82571EB_SERDES	hw.h	39;"	d
E1000_DEV_ID_82571EB_SERDES_DUAL	hw.h	44;"	d
E1000_DEV_ID_82571EB_SERDES_QUAD	hw.h	45;"	d
E1000_DEV_ID_82571PT_QUAD_COPPER	hw.h	41;"	d
E1000_DEV_ID_82572EI	hw.h	49;"	d
E1000_DEV_ID_82572EI_COPPER	hw.h	46;"	d
E1000_DEV_ID_82572EI_FIBER	hw.h	47;"	d
E1000_DEV_ID_82572EI_SERDES	hw.h	48;"	d
E1000_DEV_ID_82573E	hw.h	50;"	d
E1000_DEV_ID_82573E_IAMT	hw.h	51;"	d
E1000_DEV_ID_82573L	hw.h	52;"	d
E1000_DEV_ID_82574L	hw.h	53;"	d
E1000_DEV_ID_82574LA	hw.h	54;"	d
E1000_DEV_ID_82583V	hw.h	55;"	d
E1000_DEV_ID_ICH10_D_BM_LF	hw.h	81;"	d
E1000_DEV_ID_ICH10_D_BM_LM	hw.h	80;"	d
E1000_DEV_ID_ICH10_D_BM_V	hw.h	82;"	d
E1000_DEV_ID_ICH10_R_BM_LF	hw.h	78;"	d
E1000_DEV_ID_ICH10_R_BM_LM	hw.h	77;"	d
E1000_DEV_ID_ICH10_R_BM_V	hw.h	79;"	d
E1000_DEV_ID_ICH8_82567V_3	hw.h	60;"	d
E1000_DEV_ID_ICH8_IFE	hw.h	64;"	d
E1000_DEV_ID_ICH8_IFE_G	hw.h	66;"	d
E1000_DEV_ID_ICH8_IFE_GT	hw.h	65;"	d
E1000_DEV_ID_ICH8_IGP_AMT	hw.h	62;"	d
E1000_DEV_ID_ICH8_IGP_C	hw.h	63;"	d
E1000_DEV_ID_ICH8_IGP_M	hw.h	67;"	d
E1000_DEV_ID_ICH8_IGP_M_AMT	hw.h	61;"	d
E1000_DEV_ID_ICH9_BM	hw.h	69;"	d
E1000_DEV_ID_ICH9_IFE	hw.h	74;"	d
E1000_DEV_ID_ICH9_IFE_G	hw.h	76;"	d
E1000_DEV_ID_ICH9_IFE_GT	hw.h	75;"	d
E1000_DEV_ID_ICH9_IGP_AMT	hw.h	68;"	d
E1000_DEV_ID_ICH9_IGP_C	hw.h	73;"	d
E1000_DEV_ID_ICH9_IGP_M	hw.h	71;"	d
E1000_DEV_ID_ICH9_IGP_M_AMT	hw.h	70;"	d
E1000_DEV_ID_ICH9_IGP_M_V	hw.h	72;"	d
E1000_DEV_ID_PCH2_LV_LM	hw.h	87;"	d
E1000_DEV_ID_PCH2_LV_V	hw.h	88;"	d
E1000_DEV_ID_PCH_D_HV_DC	hw.h	86;"	d
E1000_DEV_ID_PCH_D_HV_DM	hw.h	85;"	d
E1000_DEV_ID_PCH_I218_LM2	hw.h	93;"	d
E1000_DEV_ID_PCH_I218_LM3	hw.h	95;"	d
E1000_DEV_ID_PCH_I218_V2	hw.h	94;"	d
E1000_DEV_ID_PCH_I218_V3	hw.h	96;"	d
E1000_DEV_ID_PCH_LPTLP_I218_LM	hw.h	91;"	d
E1000_DEV_ID_PCH_LPTLP_I218_V	hw.h	92;"	d
E1000_DEV_ID_PCH_LPT_I217_LM	hw.h	89;"	d
E1000_DEV_ID_PCH_LPT_I217_V	hw.h	90;"	d
E1000_DEV_ID_PCH_M_HV_LC	hw.h	84;"	d
E1000_DEV_ID_PCH_M_HV_LM	hw.h	83;"	d
E1000_ECOL	regs.h	144;"	d
E1000_EECD	regs.h	34;"	d
E1000_EECD_ADDR_BITS	defines.h	582;"	d
E1000_EECD_AUPDEN	defines.h	588;"	d
E1000_EECD_AUTO_RD	defines.h	584;"	d
E1000_EECD_CS	defines.h	574;"	d
E1000_EECD_DI	defines.h	575;"	d
E1000_EECD_DO	defines.h	576;"	d
E1000_EECD_FLUPD	defines.h	587;"	d
E1000_EECD_GNT	defines.h	578;"	d
E1000_EECD_PRES	defines.h	579;"	d
E1000_EECD_REQ	defines.h	577;"	d
E1000_EECD_SEC1VAL	defines.h	589;"	d
E1000_EECD_SEC1VAL_VALID_MASK	defines.h	590;"	d
E1000_EECD_SIZE	defines.h	580;"	d
E1000_EECD_SIZE_EX_MASK	defines.h	585;"	d
E1000_EECD_SIZE_EX_SHIFT	defines.h	586;"	d
E1000_EECD_SK	defines.h	573;"	d
E1000_EEE_RX_LPI_RCVD	ich8lan.h	260;"	d
E1000_EEE_TX_LPI_RCVD	ich8lan.h	261;"	d
E1000_EEMNGCTL	regs.h	77;"	d
E1000_EEPROM_APME	e1000.h	95;"	d
E1000_EERD	regs.h	35;"	d
E1000_EEWR	regs.h	78;"	d
E1000_EIAC_82574	82571.h	44;"	d
E1000_EIAC_MASK_82574	82571.h	45;"	d
E1000_EITR_82574	82571.h	42;"	d
E1000_ERR_CONFIG	defines.h	489;"	d
E1000_ERR_HOST_INTERFACE_COMMAND	defines.h	495;"	d
E1000_ERR_INVALID_ARGUMENT	defines.h	499;"	d
E1000_ERR_MAC_INIT	defines.h	491;"	d
E1000_ERR_MASTER_REQUESTS_PENDING	defines.h	494;"	d
E1000_ERR_NO_SPACE	defines.h	500;"	d
E1000_ERR_NVM	defines.h	487;"	d
E1000_ERR_NVM_PBA_SECTION	defines.h	501;"	d
E1000_ERR_PARAM	defines.h	490;"	d
E1000_ERR_PHY	defines.h	488;"	d
E1000_ERR_PHY_TYPE	defines.h	492;"	d
E1000_ERR_RESET	defines.h	493;"	d
E1000_ERR_SWFW_SYNC	defines.h	497;"	d
E1000_ERT	regs.h	80;"	d
E1000_EXTCNF_CTRL	regs.h	70;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_MASK	defines.h	361;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_SHIFT	defines.h	362;"	d
E1000_EXTCNF_CTRL_GATE_PHY_CFG	defines.h	358;"	d
E1000_EXTCNF_CTRL_LCD_WRITE_ENABLE	defines.h	355;"	d
E1000_EXTCNF_CTRL_MDIO_SW_OWNERSHIP	defines.h	354;"	d
E1000_EXTCNF_CTRL_OEM_WRITE_ENABLE	defines.h	356;"	d
E1000_EXTCNF_CTRL_SWFLAG	defines.h	357;"	d
E1000_EXTCNF_SIZE	regs.h	71;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_MASK	defines.h	359;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_SHIFT	defines.h	360;"	d
E1000_FACTPS	regs.h	230;"	d
E1000_FACTPS_MNGCG	manage.h	45;"	d
E1000_FCAH	regs.h	41;"	d
E1000_FCAL	regs.h	40;"	d
E1000_FCRTH	regs.h	82;"	d
E1000_FCRTH_RTH	defines.h	518;"	d
E1000_FCRTL	regs.h	81;"	d
E1000_FCRTL_RTL	defines.h	519;"	d
E1000_FCRTL_XONE	defines.h	520;"	d
E1000_FCRTV_PCH	ich8lan.h	164;"	d
E1000_FCRUC	regs.h	157;"	d
E1000_FCT	regs.h	48;"	d
E1000_FCTTV	regs.h	61;"	d
E1000_FC_PAUSE_TIME	e1000.h	88;"	d
E1000_FEXT	regs.h	42;"	d
E1000_FEXTNVM	regs.h	43;"	d
E1000_FEXTNVM3	regs.h	44;"	d
E1000_FEXTNVM3_PHY_CFG_COUNTER_50MSEC	ich8lan.h	96;"	d
E1000_FEXTNVM3_PHY_CFG_COUNTER_MASK	ich8lan.h	95;"	d
E1000_FEXTNVM4	regs.h	45;"	d
E1000_FEXTNVM4_BEACON_DURATION_16USEC	ich8lan.h	100;"	d
E1000_FEXTNVM4_BEACON_DURATION_8USEC	ich8lan.h	99;"	d
E1000_FEXTNVM4_BEACON_DURATION_MASK	ich8lan.h	98;"	d
E1000_FEXTNVM6	regs.h	46;"	d
E1000_FEXTNVM6_ENABLE_K1_ENTRY_CONDITION	ich8lan.h	103;"	d
E1000_FEXTNVM6_REQ_PLL_CLK	ich8lan.h	102;"	d
E1000_FEXTNVM7	regs.h	47;"	d
E1000_FEXTNVM7_DISABLE_SMB_PERST	ich8lan.h	105;"	d
E1000_FEXTNVM_SW_CONFIG	ich8lan.h	92;"	d
E1000_FEXTNVM_SW_CONFIG_ICH8M	ich8lan.h	93;"	d
E1000_FEXT_PHY_CABLE_DISCONNECTED	ich8lan.h	90;"	d
E1000_FFLT	regs.h	220;"	d
E1000_FFLT_DBG	regs.h	235;"	d
E1000_FLA	regs.h	37;"	d
E1000_FLASH_UPDATES	defines.h	598;"	d
E1000_FLOP	regs.h	79;"	d
E1000_FUNC_1	hw.h	100;"	d
E1000_FWSM	regs.h	232;"	d
E1000_FWSM_MODE_MASK	manage.h	47;"	d
E1000_FWSM_MODE_SHIFT	manage.h	48;"	d
E1000_FWSM_ULP_CFG_DONE	ich8lan.h	67;"	d
E1000_FWSM_WLOCK_MAC_MASK	ich8lan.h	65;"	d
E1000_FWSM_WLOCK_MAC_SHIFT	ich8lan.h	66;"	d
E1000_GCR	regs.h	228;"	d
E1000_GCR2	regs.h	229;"	d
E1000_GCR_L1_ACT_WITHOUT_L0S_RX	82571.h	38;"	d
E1000_GCR_RXDSCR_NO_SNOOP	defines.h	560;"	d
E1000_GCR_RXDSCW_NO_SNOOP	defines.h	559;"	d
E1000_GCR_RXD_NO_SNOOP	defines.h	558;"	d
E1000_GCR_TXDSCR_NO_SNOOP	defines.h	563;"	d
E1000_GCR_TXDSCW_NO_SNOOP	defines.h	562;"	d
E1000_GCR_TXD_NO_SNOOP	defines.h	561;"	d
E1000_GEN_POLL_TIMEOUT	defines.h	801;"	d
E1000_GET_DESC	e1000.h	508;"	d
E1000_GLOBAL_STATS_LEN	ethtool.c	160;"	d	file:
E1000_GORCH	regs.h	169;"	d
E1000_GORCL	regs.h	168;"	d
E1000_GOTCH	regs.h	171;"	d
E1000_GOTCL	regs.h	170;"	d
E1000_GPRC	regs.h	164;"	d
E1000_GPTC	regs.h	167;"	d
E1000_H2ME	ich8lan.h	73;"	d
E1000_H2ME_ENFORCE_SETTINGS	ich8lan.h	75;"	d
E1000_H2ME_ULP	ich8lan.h	74;"	d
E1000_HICR	regs.h	236;"	d
E1000_HICR_C	manage.h	64;"	d
E1000_HICR_EN	manage.h	62;"	d
E1000_HICR_FW_RESET	manage.h	67;"	d
E1000_HICR_FW_RESET_ENABLE	manage.h	66;"	d
E1000_HICR_SV	manage.h	65;"	d
E1000_HI_MAX_DATA_LENGTH	hw.h	441;"	d
E1000_HI_MAX_MNG_DATA_LENGTH	hw.h	456;"	d
E1000_HOST_IF	regs.h	221;"	d
E1000_IAC	regs.h	196;"	d
E1000_IAM	regs.h	55;"	d
E1000_IAMT_SIGNATURE	manage.h	70;"	d
E1000_ICH8_LAN_INIT_TIMEOUT	ich8lan.h	87;"	d
E1000_ICH8_SHADOW_RAM_WORDS	hw.h	667;"	d
E1000_ICH_FWSM_FW_VALID	ich8lan.h	59;"	d
E1000_ICH_FWSM_PCIM2PCI	ich8lan.h	60;"	d
E1000_ICH_FWSM_PCIM2PCI_COUNT	ich8lan.h	61;"	d
E1000_ICH_FWSM_RSPCIPHY	ich8lan.h	57;"	d
E1000_ICH_MNG_IAMT_MODE	ich8lan.h	63;"	d
E1000_ICH_NVM_SIG_MASK	ich8lan.h	83;"	d
E1000_ICH_NVM_SIG_VALUE	ich8lan.h	85;"	d
E1000_ICH_NVM_SIG_WORD	ich8lan.h	82;"	d
E1000_ICH_NVM_VALID_SIG_MASK	ich8lan.h	84;"	d
E1000_ICH_RAR_ENTRIES	ich8lan.h	109;"	d
E1000_ICR	regs.h	50;"	d
E1000_ICRXATC	regs.h	198;"	d
E1000_ICRXDMTC	regs.h	203;"	d
E1000_ICRXOC	regs.h	204;"	d
E1000_ICRXPTC	regs.h	197;"	d
E1000_ICR_ECCER	defines.h	407;"	d
E1000_ICR_INT_ASSERTED	defines.h	409;"	d
E1000_ICR_LSC	defines.h	403;"	d
E1000_ICR_OTHER	defines.h	414;"	d
E1000_ICR_RXDMT0	defines.h	405;"	d
E1000_ICR_RXQ0	defines.h	410;"	d
E1000_ICR_RXQ1	defines.h	411;"	d
E1000_ICR_RXSEQ	defines.h	404;"	d
E1000_ICR_RXT0	defines.h	406;"	d
E1000_ICR_TXDW	defines.h	402;"	d
E1000_ICR_TXQ0	defines.h	412;"	d
E1000_ICR_TXQ1	defines.h	413;"	d
E1000_ICS	regs.h	52;"	d
E1000_ICS_LSC	defines.h	452;"	d
E1000_ICS_RXDMT0	defines.h	454;"	d
E1000_ICS_RXSEQ	defines.h	453;"	d
E1000_ICTXATC	regs.h	200;"	d
E1000_ICTXPTC	regs.h	199;"	d
E1000_ICTXQEC	regs.h	201;"	d
E1000_ICTXQMTC	regs.h	202;"	d
E1000_IDLE_ERROR_COUNT_MASK	82571.h	53;"	d
E1000_ID_INTERVAL	ethtool.c	2145;"	d	file:
E1000_IMC	regs.h	54;"	d
E1000_IMS	regs.h	53;"	d
E1000_IMS_ECCER	defines.h	444;"	d
E1000_IMS_LSC	defines.h	440;"	d
E1000_IMS_OTHER	defines.h	449;"	d
E1000_IMS_RXDMT0	defines.h	442;"	d
E1000_IMS_RXQ0	defines.h	445;"	d
E1000_IMS_RXQ1	defines.h	446;"	d
E1000_IMS_RXSEQ	defines.h	441;"	d
E1000_IMS_RXT0	defines.h	443;"	d
E1000_IMS_TXDW	defines.h	439;"	d
E1000_IMS_TXQ0	defines.h	447;"	d
E1000_IMS_TXQ1	defines.h	448;"	d
E1000_ITR	regs.h	51;"	d
E1000_IVAR	regs.h	56;"	d
E1000_IVAR_INT_ALLOC_VALID	82571.h	47;"	d
E1000_KABGTXD	regs.h	124;"	d
E1000_KABGTXD_BGSQLBIAS	defines.h	369;"	d
E1000_KMRNCTRLSTA	regs.h	223;"	d
E1000_KMRNCTRLSTA_CTRL_OFFSET	phy.h	210;"	d
E1000_KMRNCTRLSTA_DIAG_NELPBK	phy.h	215;"	d
E1000_KMRNCTRLSTA_DIAG_OFFSET	phy.h	211;"	d
E1000_KMRNCTRLSTA_FIFO_CTRL_RX_BYPASS	80003es2lan.h	37;"	d
E1000_KMRNCTRLSTA_FIFO_CTRL_TX_BYPASS	80003es2lan.h	38;"	d
E1000_KMRNCTRLSTA_HD_CTRL	phy.h	218;"	d
E1000_KMRNCTRLSTA_HD_CTRL_1000_DEFAULT	80003es2lan.h	42;"	d
E1000_KMRNCTRLSTA_HD_CTRL_10_100_DEFAULT	80003es2lan.h	41;"	d
E1000_KMRNCTRLSTA_IBIST_DISABLE	phy.h	214;"	d
E1000_KMRNCTRLSTA_INBAND_PARAM	phy.h	213;"	d
E1000_KMRNCTRLSTA_INB_CTRL_DIS_PADDING	80003es2lan.h	39;"	d
E1000_KMRNCTRLSTA_K1_CONFIG	phy.h	216;"	d
E1000_KMRNCTRLSTA_K1_ENABLE	phy.h	217;"	d
E1000_KMRNCTRLSTA_OFFSET	phy.h	207;"	d
E1000_KMRNCTRLSTA_OFFSET_FIFO_CTRL	80003es2lan.h	32;"	d
E1000_KMRNCTRLSTA_OFFSET_HD_CTRL	80003es2lan.h	34;"	d
E1000_KMRNCTRLSTA_OFFSET_INB_CTRL	80003es2lan.h	33;"	d
E1000_KMRNCTRLSTA_OFFSET_MAC2PHY_OPMODE	80003es2lan.h	35;"	d
E1000_KMRNCTRLSTA_OFFSET_SHIFT	phy.h	208;"	d
E1000_KMRNCTRLSTA_OPMODE_E_IDLE	80003es2lan.h	43;"	d
E1000_KMRNCTRLSTA_OPMODE_INBAND_MDIO	80003es2lan.h	46;"	d
E1000_KMRNCTRLSTA_OPMODE_MASK	80003es2lan.h	45;"	d
E1000_KMRNCTRLSTA_REN	phy.h	209;"	d
E1000_KMRNCTRLSTA_TIMEOUTS	phy.h	212;"	d
E1000_LATECOL	regs.h	146;"	d
E1000_LEDCTL	regs.h	69;"	d
E1000_LEDCTL_LED0_BLINK	defines.h	280;"	d
E1000_LEDCTL_LED0_IVRT	defines.h	279;"	d
E1000_LEDCTL_LED0_MODE_MASK	defines.h	277;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	defines.h	278;"	d
E1000_LEDCTL_MODE_LED_OFF	defines.h	284;"	d
E1000_LEDCTL_MODE_LED_ON	defines.h	283;"	d
E1000_LEDCTL_MODE_LINK_UP	defines.h	282;"	d
E1000_LED_ON	ethtool.c	2148;"	d	file:
E1000_LPIC	regs.h	59;"	d
E1000_LPIC_LPIET_SHIFT	defines.h	372;"	d
E1000_LTRV	ich8lan.h	277;"	d
E1000_LTRV_NOSNOOP_SHIFT	ich8lan.h	281;"	d
E1000_LTRV_REQ_SHIFT	ich8lan.h	280;"	d
E1000_LTRV_SCALE_FACTOR	ich8lan.h	279;"	d
E1000_LTRV_SCALE_MAX	ich8lan.h	278;"	d
E1000_LTRV_SEND	ich8lan.h	282;"	d
E1000_MANC	regs.h	219;"	d
E1000_MANC2H	regs.h	224;"	d
E1000_MANC2H_PORT_623	defines.h	135;"	d
E1000_MANC2H_PORT_664	defines.h	136;"	d
E1000_MANC_ARP_EN	defines.h	127;"	d
E1000_MANC_ASF_EN	defines.h	126;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	defines.h	129;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	defines.h	131;"	d
E1000_MANC_EN_MNG2HOST	defines.h	133;"	d
E1000_MANC_RCV_TCO_EN	defines.h	128;"	d
E1000_MANC_SMBUS_EN	defines.h	125;"	d
E1000_MAX_INTR	e1000.h	73;"	d
E1000_MAX_ITR_USECS	e1000.h	86;"	d
E1000_MAX_NIC	param.c	38;"	d	file:
E1000_MAX_PHY_ADDR	phy.h	94;"	d
E1000_MAX_RXD	e1000.h	82;"	d
E1000_MAX_TXD	e1000.h	78;"	d
E1000_MCC	regs.h	145;"	d
E1000_MDEF	regs.h	226;"	d
E1000_MDEF_PORT_623	defines.h	137;"	d
E1000_MDEF_PORT_664	defines.h	138;"	d
E1000_MDIC	regs.h	38;"	d
E1000_MDIC_ERROR	defines.h	798;"	d
E1000_MDIC_OP_READ	defines.h	796;"	d
E1000_MDIC_OP_WRITE	defines.h	795;"	d
E1000_MDIC_PHY_SHIFT	defines.h	794;"	d
E1000_MDIC_READY	defines.h	797;"	d
E1000_MDIC_REG_MASK	defines.h	792;"	d
E1000_MDIC_REG_SHIFT	defines.h	793;"	d
E1000_MGTPDC	regs.h	178;"	d
E1000_MGTPRC	regs.h	177;"	d
E1000_MGTPTC	regs.h	179;"	d
E1000_MIN_ITR_USECS	e1000.h	85;"	d
E1000_MIN_RXD	e1000.h	83;"	d
E1000_MIN_TXD	e1000.h	79;"	d
E1000_MNG_DHCP_COMMAND_TIMEOUT	manage.h	53;"	d
E1000_MNG_DHCP_COOKIE_LENGTH	manage.h	51;"	d
E1000_MNG_DHCP_COOKIE_OFFSET	manage.h	52;"	d
E1000_MNG_DHCP_COOKIE_STATUS_PARSING	manage.h	55;"	d
E1000_MNG_DHCP_COOKIE_STATUS_VLAN	manage.h	56;"	d
E1000_MNG_DHCP_TX_PAYLOAD_CMD	manage.h	54;"	d
E1000_MNG_IAMT_MODE	manage.h	50;"	d
E1000_MNG_VLAN_NONE	e1000.h	97;"	d
E1000_MPC	regs.h	142;"	d
E1000_MPRC	regs.h	166;"	d
E1000_MPTC	regs.h	192;"	d
E1000_MRQC	regs.h	239;"	d
E1000_MRQC_RSS_FIELD_IPV4	defines.h	117;"	d
E1000_MRQC_RSS_FIELD_IPV4_TCP	defines.h	116;"	d
E1000_MRQC_RSS_FIELD_IPV6	defines.h	119;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP	defines.h	120;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP_EX	defines.h	118;"	d
E1000_MRQC_RSS_FIELD_MASK	defines.h	115;"	d
E1000_MTA	regs.h	213;"	d
E1000_NETDEV_STAT	ethtool.c	63;"	d	file:
E1000_NETDEV_STAT	ethtool.c	69;"	d	file:
E1000_NETDEV_STAT	ethtool.c	75;"	d	file:
E1000_NOT_IMPLEMENTED	defines.h	498;"	d
E1000_NVM_CFG_DONE_PORT_0	defines.h	615;"	d
E1000_NVM_CFG_DONE_PORT_1	defines.h	616;"	d
E1000_NVM_GRANT_ATTEMPTS	defines.h	583;"	d
E1000_NVM_INIT_CTRL2_MNGM	82571.h	50;"	d
E1000_NVM_K1_CONFIG	ich8lan.h	166;"	d
E1000_NVM_K1_ENABLE	ich8lan.h	167;"	d
E1000_NVM_POLL_READ	defines.h	597;"	d
E1000_NVM_POLL_WRITE	defines.h	596;"	d
E1000_NVM_RW_ADDR_SHIFT	defines.h	595;"	d
E1000_NVM_RW_REG_DATA	defines.h	592;"	d
E1000_NVM_RW_REG_DONE	defines.h	593;"	d
E1000_NVM_RW_REG_START	defines.h	594;"	d
E1000_PARAM	param.c	65;"	d	file:
E1000_PARAM	param.c	71;"	d	file:
E1000_PARAM	param.c	78;"	d	file:
E1000_PARAM_INIT	param.c	54;"	d	file:
E1000_PBA	regs.h	74;"	d
E1000_PBANUM_LENGTH	defines.h	630;"	d
E1000_PBA_16K	defines.h	376;"	d
E1000_PBA_8K	defines.h	375;"	d
E1000_PBA_ECC	regs.h	64;"	d
E1000_PBA_ECC_CORR_EN	defines.h	419;"	d
E1000_PBA_ECC_COUNTER_MASK	defines.h	417;"	d
E1000_PBA_ECC_COUNTER_SHIFT	defines.h	418;"	d
E1000_PBA_ECC_INT_EN	defines.h	421;"	d
E1000_PBA_ECC_STAT_CLR	defines.h	420;"	d
E1000_PBA_RXA_MASK	defines.h	378;"	d
E1000_PBECCSTS	regs.h	76;"	d
E1000_PBECCSTS_CORR_ERR_CNT_MASK	defines.h	383;"	d
E1000_PBECCSTS_ECC_ENABLE	defines.h	386;"	d
E1000_PBECCSTS_UNCORR_ERR_CNT_MASK	defines.h	384;"	d
E1000_PBECCSTS_UNCORR_ERR_CNT_SHIFT	defines.h	385;"	d
E1000_PBS	regs.h	75;"	d
E1000_PBS_16K	defines.h	380;"	d
E1000_PCH2_RAR_ENTRIES	ich8lan.h	110;"	d
E1000_PCH_LPT_RAR_ENTRIES	ich8lan.h	111;"	d
E1000_PCH_RAICC	ich8lan.h	274;"	d
E1000_PCI_LTR_CAP_LPT	ich8lan.h	285;"	d
E1000_PCI_REVISION_ID_REG	ich8lan.h	287;"	d
E1000_PCS_ANADV	regs.h	209;"	d
E1000_PCS_LCTL	regs.h	207;"	d
E1000_PCS_LCTL_FORCE_FCTRL	defines.h	230;"	d
E1000_PCS_LPAB	regs.h	210;"	d
E1000_PCS_LSTAT	regs.h	208;"	d
E1000_PCS_LSTS_AN_COMPLETE	defines.h	232;"	d
E1000_PHY_CTRL	regs.h	72;"	d
E1000_PHY_CTRL_D0A_LPLU	defines.h	364;"	d
E1000_PHY_CTRL_GBE_DISABLE	defines.h	367;"	d
E1000_PHY_CTRL_NOND0A_GBE_DISABLE	defines.h	366;"	d
E1000_PHY_CTRL_NOND0A_LPLU	defines.h	365;"	d
E1000_PHY_LED0_IVRT	defines.h	274;"	d
E1000_PHY_LED0_MASK	defines.h	275;"	d
E1000_PHY_LED0_MODE_MASK	defines.h	273;"	d
E1000_POEMB	regs.h	73;"	d
E1000_PRC1023	regs.h	162;"	d
E1000_PRC127	regs.h	159;"	d
E1000_PRC1522	regs.h	163;"	d
E1000_PRC255	regs.h	160;"	d
E1000_PRC511	regs.h	161;"	d
E1000_PRC64	regs.h	158;"	d
E1000_PSRCTL	regs.h	83;"	d
E1000_PSRCTL_BSIZE0_MASK	defines.h	187;"	d
E1000_PSRCTL_BSIZE0_SHIFT	defines.h	192;"	d
E1000_PSRCTL_BSIZE1_MASK	defines.h	188;"	d
E1000_PSRCTL_BSIZE1_SHIFT	defines.h	193;"	d
E1000_PSRCTL_BSIZE2_MASK	defines.h	189;"	d
E1000_PSRCTL_BSIZE2_SHIFT	defines.h	194;"	d
E1000_PSRCTL_BSIZE3_MASK	defines.h	190;"	d
E1000_PSRCTL_BSIZE3_SHIFT	defines.h	195;"	d
E1000_PTC1023	regs.h	190;"	d
E1000_PTC127	regs.h	187;"	d
E1000_PTC1522	regs.h	191;"	d
E1000_PTC255	regs.h	188;"	d
E1000_PTC511	regs.h	189;"	d
E1000_PTC64	regs.h	186;"	d
E1000_RA	regs.h	214;"	d
E1000_RADV	regs.h	91;"	d
E1000_RAH	regs.h	127;"	d
E1000_RAH_AV	defines.h	482;"	d
E1000_RAH_MAC_ADDR_LEN	defines.h	484;"	d
E1000_RAL	regs.h	125;"	d
E1000_RAL_MAC_ADDR_LEN	defines.h	483;"	d
E1000_RAR_ENTRIES	defines.h	481;"	d
E1000_RCTL	regs.h	60;"	d
E1000_RCTL_BAM	defines.h	153;"	d
E1000_RCTL_BSEX	defines.h	168;"	d
E1000_RCTL_CFI	defines.h	165;"	d
E1000_RCTL_CFIEN	defines.h	164;"	d
E1000_RCTL_DPF	defines.h	166;"	d
E1000_RCTL_DTYP_PS	defines.h	149;"	d
E1000_RCTL_EN	defines.h	141;"	d
E1000_RCTL_LBM_MAC	defines.h	147;"	d
E1000_RCTL_LBM_NO	defines.h	146;"	d
E1000_RCTL_LBM_TCVR	defines.h	148;"	d
E1000_RCTL_LPE	defines.h	145;"	d
E1000_RCTL_MO_3	defines.h	152;"	d
E1000_RCTL_MO_SHIFT	defines.h	151;"	d
E1000_RCTL_MPE	defines.h	144;"	d
E1000_RCTL_PMCF	defines.h	167;"	d
E1000_RCTL_RDMTS_HALF	defines.h	150;"	d
E1000_RCTL_SBP	defines.h	142;"	d
E1000_RCTL_SECRC	defines.h	169;"	d
E1000_RCTL_SZ_1024	defines.h	156;"	d
E1000_RCTL_SZ_16384	defines.h	160;"	d
E1000_RCTL_SZ_2048	defines.h	155;"	d
E1000_RCTL_SZ_256	defines.h	158;"	d
E1000_RCTL_SZ_4096	defines.h	162;"	d
E1000_RCTL_SZ_512	defines.h	157;"	d
E1000_RCTL_SZ_8192	defines.h	161;"	d
E1000_RCTL_UPE	defines.h	143;"	d
E1000_RCTL_VFE	defines.h	163;"	d
E1000_RDBAH	regs.h	101;"	d
E1000_RDBAL	regs.h	99;"	d
E1000_RDFH	regs.h	84;"	d
E1000_RDFHS	regs.h	86;"	d
E1000_RDFPC	regs.h	88;"	d
E1000_RDFT	regs.h	85;"	d
E1000_RDFTS	regs.h	87;"	d
E1000_RDH	regs.h	105;"	d
E1000_RDLEN	regs.h	103;"	d
E1000_RDT	regs.h	107;"	d
E1000_RDTR	regs.h	90;"	d
E1000_RDTR_FPD	e1000.h	136;"	d
E1000_READ_REG_ARRAY	e1000.h	691;"	d
E1000_RECEIVE_ERROR_COUNTER	82571.h	54;"	d
E1000_RECEIVE_ERROR_MAX	82571.h	55;"	d
E1000_REGS_LEN	ethtool.c	603;"	d	file:
E1000_RETA	regs.h	240;"	d
E1000_REVISION_4	hw.h	98;"	d
E1000_RFC	regs.h	174;"	d
E1000_RFCTL	regs.h	212;"	d
E1000_RFCTL_ACK_DIS	defines.h	328;"	d
E1000_RFCTL_EXTEN	defines.h	329;"	d
E1000_RFCTL_IPV6_EX_DIS	defines.h	330;"	d
E1000_RFCTL_NEW_IPV6_EXT_DIS	defines.h	331;"	d
E1000_RFCTL_NFSR_DIS	defines.h	327;"	d
E1000_RFCTL_NFSW_DIS	defines.h	326;"	d
E1000_RJC	regs.h	176;"	d
E1000_RLEC	regs.h	152;"	d
E1000_RNBC	regs.h	172;"	d
E1000_ROC	regs.h	175;"	d
E1000_RSSRK	regs.h	241;"	d
E1000_RUC	regs.h	173;"	d
E1000_RXCSUM	regs.h	211;"	d
E1000_RXCSUM_IPPCSE	defines.h	322;"	d
E1000_RXCSUM_PCSD	defines.h	323;"	d
E1000_RXCSUM_TUOFL	defines.h	321;"	d
E1000_RXCW	regs.h	63;"	d
E1000_RXCW_C	defines.h	532;"	d
E1000_RXCW_CW	defines.h	530;"	d
E1000_RXCW_IV	defines.h	531;"	d
E1000_RXCW_SYNCH	defines.h	533;"	d
E1000_RXDCTL	regs.h	109;"	d
E1000_RXDCTL_DMA_BURST_ENABLE	e1000.h	129;"	d
E1000_RXDEXT_ERR_FRAME_ERR_MASK	defines.h	108;"	d
E1000_RXDEXT_STATERR_CE	defines.h	93;"	d
E1000_RXDEXT_STATERR_CXE	defines.h	96;"	d
E1000_RXDEXT_STATERR_RXE	defines.h	97;"	d
E1000_RXDEXT_STATERR_SE	defines.h	94;"	d
E1000_RXDEXT_STATERR_SEQ	defines.h	95;"	d
E1000_RXDEXT_STATERR_TST	defines.h	92;"	d
E1000_RXDPS_HDRSTAT_HDRSP	defines.h	122;"	d
E1000_RXD_ERR_CE	defines.h	83;"	d
E1000_RXD_ERR_CXE	defines.h	86;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	defines.h	100;"	d
E1000_RXD_ERR_IPE	defines.h	88;"	d
E1000_RXD_ERR_RXE	defines.h	89;"	d
E1000_RXD_ERR_SE	defines.h	84;"	d
E1000_RXD_ERR_SEQ	defines.h	85;"	d
E1000_RXD_ERR_TCPE	defines.h	87;"	d
E1000_RXD_SPC_VLAN_MASK	defines.h	90;"	d
E1000_RXD_STAT_DD	defines.h	77;"	d
E1000_RXD_STAT_EOP	defines.h	78;"	d
E1000_RXD_STAT_IXSM	defines.h	79;"	d
E1000_RXD_STAT_TCPCS	defines.h	82;"	d
E1000_RXD_STAT_UDPCS	defines.h	81;"	d
E1000_RXD_STAT_VP	defines.h	80;"	d
E1000_RXERRC	regs.h	141;"	d
E1000_RXMTRL	regs.h	251;"	d
E1000_RXMTRL_PTP_V1_DELAY_REQ_MESSAGE	defines.h	549;"	d
E1000_RXMTRL_PTP_V1_SYNC_MESSAGE	defines.h	548;"	d
E1000_RXMTRL_PTP_V2_DELAY_REQ_MESSAGE	defines.h	552;"	d
E1000_RXMTRL_PTP_V2_SYNC_MESSAGE	defines.h	551;"	d
E1000_RXSTMPH	regs.h	245;"	d
E1000_RXSTMPL	regs.h	244;"	d
E1000_RXUDP	regs.h	252;"	d
E1000_RX_BUFFER_WRITE	e1000.h	92;"	d
E1000_RX_DESC_EXT	e1000.h	506;"	d
E1000_RX_DESC_PS	e1000.h	504;"	d
E1000_SCC	regs.h	143;"	d
E1000_SCTL	regs.h	39;"	d
E1000_SCTL_DISABLE_SERDES_LOOPBACK	defines.h	317;"	d
E1000_SCTL_ENABLE_SERDES_LOOPBACK	defines.h	318;"	d
E1000_SEC	regs.h	150;"	d
E1000_SHRAH	regs.h	130;"	d
E1000_SHRAH_PCH_LPT	ich8lan.h	71;"	d
E1000_SHRAL	regs.h	129;"	d
E1000_SHRAL_PCH_LPT	ich8lan.h	70;"	d
E1000_STAT	ethtool.c	57;"	d	file:
E1000_STATS	ethtool.c	/^enum { NETDEV_STATS, E1000_STATS };$/;"	e	enum:__anon4	file:
E1000_STATS_LEN	ethtool.c	161;"	d	file:
E1000_STATUS	regs.h	33;"	d
E1000_STATUS_FD	defines.h	235;"	d
E1000_STATUS_FUNC_1	defines.h	239;"	d
E1000_STATUS_FUNC_MASK	defines.h	237;"	d
E1000_STATUS_FUNC_SHIFT	defines.h	238;"	d
E1000_STATUS_GIO_MASTER_ENABLE	defines.h	247;"	d
E1000_STATUS_LAN_INIT_DONE	defines.h	245;"	d
E1000_STATUS_LU	defines.h	236;"	d
E1000_STATUS_PHYRA	defines.h	246;"	d
E1000_STATUS_SPEED_10	defines.h	242;"	d
E1000_STATUS_SPEED_100	defines.h	243;"	d
E1000_STATUS_SPEED_1000	defines.h	244;"	d
E1000_STATUS_SPEED_MASK	defines.h	241;"	d
E1000_STATUS_TXOFF	defines.h	240;"	d
E1000_STM_OPCODE	nvm.h	45;"	d
E1000_STRAP	ich8lan.h	193;"	d
E1000_STRAP_SMBUS_ADDRESS_MASK	ich8lan.h	194;"	d
E1000_STRAP_SMBUS_ADDRESS_SHIFT	ich8lan.h	195;"	d
E1000_STRAP_SMT_FREQ_MASK	ich8lan.h	196;"	d
E1000_STRAP_SMT_FREQ_SHIFT	ich8lan.h	197;"	d
E1000_SVCR	regs.h	57;"	d
E1000_SVT	regs.h	58;"	d
E1000_SWFW_CSR_SM	defines.h	201;"	d
E1000_SWFW_EEP_SM	defines.h	198;"	d
E1000_SWFW_PHY0_SM	defines.h	199;"	d
E1000_SWFW_PHY1_SM	defines.h	200;"	d
E1000_SWSM	regs.h	231;"	d
E1000_SWSM2	regs.h	234;"	d
E1000_SWSM2_LOCK	defines.h	399;"	d
E1000_SWSM_DRV_LOAD	defines.h	397;"	d
E1000_SWSM_SMBI	defines.h	395;"	d
E1000_SWSM_SWESMBI	defines.h	396;"	d
E1000_SW_FW_SYNC	regs.h	227;"	d
E1000_SYMERRS	regs.h	140;"	d
E1000_SYSTIMH	regs.h	249;"	d
E1000_SYSTIML	regs.h	248;"	d
E1000_SYSTIM_OVERFLOW_PERIOD	e1000.h	448;"	d
E1000_TADV	regs.h	137;"	d
E1000_TARC	regs.h	123;"	d
E1000_TCTL	regs.h	65;"	d
E1000_TCTL_COLD	defines.h	312;"	d
E1000_TCTL_CT	defines.h	311;"	d
E1000_TCTL_EN	defines.h	309;"	d
E1000_TCTL_EXT	regs.h	66;"	d
E1000_TCTL_EXT_GCEX_MASK	80003es2lan.h	48;"	d
E1000_TCTL_MULR	defines.h	314;"	d
E1000_TCTL_PSP	defines.h	310;"	d
E1000_TCTL_RTLC	defines.h	313;"	d
E1000_TDBAH	regs.h	113;"	d
E1000_TDBAL	regs.h	111;"	d
E1000_TDFH	regs.h	131;"	d
E1000_TDFHS	regs.h	133;"	d
E1000_TDFPC	regs.h	135;"	d
E1000_TDFT	regs.h	132;"	d
E1000_TDFTS	regs.h	134;"	d
E1000_TDH	regs.h	117;"	d
E1000_TDLEN	regs.h	115;"	d
E1000_TDT	regs.h	119;"	d
E1000_TEST_LEN	ethtool.c	168;"	d	file:
E1000_TIDV	regs.h	136;"	d
E1000_TIDV_FPD	e1000.h	135;"	d
E1000_TIMINCA	regs.h	250;"	d
E1000_TIMINCA_INCPERIOD_SHIFT	defines.h	554;"	d
E1000_TIMINCA_INCVALUE_MASK	defines.h	555;"	d
E1000_TIPG	regs.h	67;"	d
E1000_TIPG_IPGR1_SHIFT	defines.h	345;"	d
E1000_TIPG_IPGR2_SHIFT	defines.h	349;"	d
E1000_TIPG_IPGT_MASK	defines.h	342;"	d
E1000_TNCRS	regs.h	149;"	d
E1000_TORH	regs.h	181;"	d
E1000_TORL	regs.h	180;"	d
E1000_TOTH	regs.h	183;"	d
E1000_TOTL	regs.h	182;"	d
E1000_TPR	regs.h	184;"	d
E1000_TPT	regs.h	185;"	d
E1000_TSCTC	regs.h	194;"	d
E1000_TSCTFC	regs.h	195;"	d
E1000_TSYNCRXCTL	regs.h	242;"	d
E1000_TSYNCRXCTL_ENABLED	defines.h	545;"	d
E1000_TSYNCRXCTL_SYSCFI	defines.h	546;"	d
E1000_TSYNCRXCTL_TYPE_ALL	defines.h	543;"	d
E1000_TSYNCRXCTL_TYPE_EVENT_V2	defines.h	544;"	d
E1000_TSYNCRXCTL_TYPE_L2_L4_V2	defines.h	542;"	d
E1000_TSYNCRXCTL_TYPE_L2_V2	defines.h	540;"	d
E1000_TSYNCRXCTL_TYPE_L4_V1	defines.h	541;"	d
E1000_TSYNCRXCTL_TYPE_MASK	defines.h	539;"	d
E1000_TSYNCRXCTL_VALID	defines.h	538;"	d
E1000_TSYNCTXCTL	regs.h	243;"	d
E1000_TSYNCTXCTL_ENABLED	defines.h	536;"	d
E1000_TSYNCTXCTL_VALID	defines.h	535;"	d
E1000_TXCW	regs.h	62;"	d
E1000_TXCW_ANE	defines.h	527;"	d
E1000_TXCW_ASM_DIR	defines.h	525;"	d
E1000_TXCW_FD	defines.h	523;"	d
E1000_TXCW_PAUSE	defines.h	524;"	d
E1000_TXCW_PAUSE_MASK	defines.h	526;"	d
E1000_TXDCTL	regs.h	121;"	d
E1000_TXDCTL_COUNT_DESC	defines.h	464;"	d
E1000_TXDCTL_DMA_BURST_ENABLE	e1000.h	122;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	defines.h	461;"	d
E1000_TXDCTL_GRAN	defines.h	460;"	d
E1000_TXDCTL_HTHRESH	defines.h	458;"	d
E1000_TXDCTL_MAX_TX_DESC_PREFETCH	defines.h	462;"	d
E1000_TXDCTL_PTHRESH	defines.h	457;"	d
E1000_TXDCTL_WTHRESH	defines.h	459;"	d
E1000_TXD_CMD_DEXT	defines.h	295;"	d
E1000_TXD_CMD_EOP	defines.h	290;"	d
E1000_TXD_CMD_IC	defines.h	292;"	d
E1000_TXD_CMD_IDE	defines.h	297;"	d
E1000_TXD_CMD_IFCS	defines.h	291;"	d
E1000_TXD_CMD_IP	defines.h	303;"	d
E1000_TXD_CMD_RPS	defines.h	294;"	d
E1000_TXD_CMD_RS	defines.h	293;"	d
E1000_TXD_CMD_TCP	defines.h	302;"	d
E1000_TXD_CMD_TSE	defines.h	304;"	d
E1000_TXD_CMD_VLE	defines.h	296;"	d
E1000_TXD_DTYP_D	defines.h	287;"	d
E1000_TXD_EXTCMD_TSTAMP	defines.h	306;"	d
E1000_TXD_POPTS_IXSM	defines.h	288;"	d
E1000_TXD_POPTS_TXSM	defines.h	289;"	d
E1000_TXD_STAT_DD	defines.h	298;"	d
E1000_TXD_STAT_EC	defines.h	299;"	d
E1000_TXD_STAT_LC	defines.h	300;"	d
E1000_TXD_STAT_TC	defines.h	305;"	d
E1000_TXD_STAT_TU	defines.h	301;"	d
E1000_TXSTMPH	regs.h	247;"	d
E1000_TXSTMPL	regs.h	246;"	d
E1000_TX_DESC	e1000.h	509;"	d
E1000_TX_FLAGS_CSUM	netdev.c	5640;"	d	file:
E1000_TX_FLAGS_HWTSTAMP	netdev.c	5645;"	d	file:
E1000_TX_FLAGS_IPV4	netdev.c	5643;"	d	file:
E1000_TX_FLAGS_NO_FCS	netdev.c	5644;"	d	file:
E1000_TX_FLAGS_TSO	netdev.c	5642;"	d	file:
E1000_TX_FLAGS_VLAN	netdev.c	5641;"	d	file:
E1000_TX_FLAGS_VLAN_MASK	netdev.c	5646;"	d	file:
E1000_TX_FLAGS_VLAN_SHIFT	netdev.c	5647;"	d	file:
E1000_VET	regs.h	49;"	d
E1000_VFTA	regs.h	215;"	d
E1000_VFTA_ENTRY_BIT_SHIFT_MASK	manage.h	60;"	d
E1000_VFTA_ENTRY_MASK	manage.h	59;"	d
E1000_VFTA_ENTRY_SHIFT	manage.h	58;"	d
E1000_VLAN_FILTER_TBL_SIZE	defines.h	472;"	d
E1000_WRITE_REG_ARRAY	e1000.h	688;"	d
E1000_WUC	regs.h	216;"	d
E1000_WUC_APME	defines.h	38;"	d
E1000_WUC_APMPME	defines.h	41;"	d
E1000_WUC_PHY_WAKE	defines.h	42;"	d
E1000_WUC_PME_EN	defines.h	39;"	d
E1000_WUC_PME_STATUS	defines.h	40;"	d
E1000_WUFC	regs.h	217;"	d
E1000_WUFC_ARP	defines.h	50;"	d
E1000_WUFC_BC	defines.h	49;"	d
E1000_WUFC_EX	defines.h	47;"	d
E1000_WUFC_LNKC	defines.h	45;"	d
E1000_WUFC_MAG	defines.h	46;"	d
E1000_WUFC_MC	defines.h	48;"	d
E1000_WUS	regs.h	218;"	d
E1000_WUS_BC	defines.h	57;"	d
E1000_WUS_EX	defines.h	55;"	d
E1000_WUS_LNKC	defines.h	53;"	d
E1000_WUS_MAG	defines.h	54;"	d
E1000_WUS_MC	defines.h	56;"	d
E1000_XOFFRXC	regs.h	155;"	d
E1000_XOFFTXC	regs.h	156;"	d
E1000_XONRXC	regs.h	153;"	d
E1000_XONTXC	regs.h	154;"	d
ESTATUS_1000_TFULL	kcompat.h	1761;"	d
ESTATUS_1000_THALF	kcompat.h	1762;"	d
ETHTOOL_BUSINFO_LEN	kcompat.h	669;"	d
ETHTOOL_GCOALESCE	kcompat.h	472;"	d
ETHTOOL_GEEPROM	kcompat.h	409;"	d
ETHTOOL_GEEPROM	kcompat.h	466;"	d
ETHTOOL_GLINK	kcompat.h	426;"	d
ETHTOOL_GLINK	kcompat.h	463;"	d
ETHTOOL_GMSGLVL	kcompat.h	454;"	d
ETHTOOL_GPAUSEPARAM	kcompat.h	604;"	d
ETHTOOL_GREGS	kcompat.h	410;"	d
ETHTOOL_GREGS	kcompat.h	442;"	d
ETHTOOL_GRINGPARAM	kcompat.h	575;"	d
ETHTOOL_GRXCSUM	kcompat.h	630;"	d
ETHTOOL_GSG	kcompat.h	642;"	d
ETHTOOL_GSTATS	kcompat.h	351;"	d
ETHTOOL_GSTATS	kcompat.h	659;"	d
ETHTOOL_GSTRINGS	kcompat.h	380;"	d
ETHTOOL_GSTRINGS	kcompat.h	653;"	d
ETHTOOL_GTSO	kcompat.h	662;"	d
ETHTOOL_GTXCSUM	kcompat.h	636;"	d
ETHTOOL_GWOL	kcompat.h	430;"	d
ETHTOOL_NWAY_RST	kcompat.h	460;"	d
ETHTOOL_OPS_COMPAT	kcompat.h	1101;"	d
ETHTOOL_OPS_COMPAT	kcompat_ethtool.c	781;"	d	file:
ETHTOOL_PHYS_ID	kcompat.h	376;"	d
ETHTOOL_PHYS_ID	kcompat.h	656;"	d
ETHTOOL_RXNTUPLE_ACTION_CLEAR	kcompat.h	3147;"	d
ETHTOOL_SCOALESCE	kcompat.h	572;"	d
ETHTOOL_SEEPROM	kcompat.h	469;"	d
ETHTOOL_SMSGLVL	kcompat.h	457;"	d
ETHTOOL_SPAUSEPARAM	kcompat.h	627;"	d
ETHTOOL_SRINGPARAM	kcompat.h	601;"	d
ETHTOOL_SRXCSUM	kcompat.h	633;"	d
ETHTOOL_SRXNTUPLE	kcompat.h	3460;"	d
ETHTOOL_SSG	kcompat.h	646;"	d
ETHTOOL_STSO	kcompat.h	665;"	d
ETHTOOL_STXCSUM	kcompat.h	639;"	d
ETHTOOL_SWOL	kcompat.h	431;"	d
ETHTOOL_TEST	kcompat.h	394;"	d
ETHTOOL_TEST	kcompat.h	650;"	d
ETH_FCS_LEN	kcompat.h	2158;"	d
ETH_FLAG_LRO	kcompat.h	2227;"	d
ETH_FLAG_NTUPLE	kcompat.h	2832;"	d
ETH_FLAG_RXHASH	kcompat.h	3052;"	d
ETH_FLAG_RXVLAN	kcompat.h	3156;"	d
ETH_FLAG_TXVLAN	kcompat.h	3153;"	d
ETH_GSTRING_LEN	kcompat.h	347;"	d
ETH_P_1588	kcompat.h	2603;"	d
ETH_P_8021Q	kcompat.h	129;"	d
ETH_P_FIP	kcompat.h	2604;"	d
ETH_SS_STATS	kcompat.h	/^	ETH_SS_STATS,$/;"	e	enum:ethtool_stringset
ETH_SS_TEST	kcompat.h	/^	ETH_SS_TEST = 0,$/;"	e	enum:ethtool_stringset
ETH_TEST_FL_FAILED	kcompat.h	/^	ETH_TEST_FL_FAILED = (1 << 1),$/;"	e	enum:ethtool_test_flags
ETH_TEST_FL_OFFLINE	kcompat.h	/^	ETH_TEST_FL_OFFLINE = (1 << 0),$/;"	e	enum:ethtool_test_flags
ETH_TYPE_TRANS_SETS_DEV	kcompat.h	2198;"	d
EXPANSION_ENABLENPAGE	kcompat.h	803;"	d
FALSE	kcompat.h	116;"	d
FALSE	kcompat.h	118;"	d
FAMILYC	Makefile	/^FAMILYC = 82571.c ich8lan.c 80003es2lan.c$/;"	m
FAMILYH	Makefile	/^FAMILYH = 82571.h ich8lan.h 80003es2lan.h$/;"	m
FIBER_LINK_UP_LIMIT	defines.h	504;"	d
FIELD_SIZEOF	kcompat.h	1889;"	d
FLAG2_CHECK_PHY_HANG	e1000.h	498;"	d
FLAG2_CHECK_RX_HWTSTAMP	e1000.h	502;"	d
FLAG2_CRC_STRIPPING	e1000.h	489;"	d
FLAG2_DFLT_CRC_STRIPPING	e1000.h	501;"	d
FLAG2_DISABLE_AIM	e1000.h	497;"	d
FLAG2_DISABLE_ASPM_L0S	e1000.h	496;"	d
FLAG2_DISABLE_ASPM_L1	e1000.h	492;"	d
FLAG2_DMA_BURST	e1000.h	495;"	d
FLAG2_HAS_EEE	e1000.h	494;"	d
FLAG2_HAS_PHY_STATS	e1000.h	493;"	d
FLAG2_HAS_PHY_WAKEUP	e1000.h	490;"	d
FLAG2_IS_DISCARDING	e1000.h	491;"	d
FLAG2_NO_DISABLE_RX	e1000.h	499;"	d
FLAG2_PCIM2PCI_ARBITER_WA	e1000.h	500;"	d
FLAG_APME_CHECK_PORT_B	e1000.h	469;"	d
FLAG_APME_IN_CTRL3	e1000.h	468;"	d
FLAG_APME_IN_WUC	e1000.h	467;"	d
FLAG_DISABLE_FC_PAUSE_TIME	e1000.h	470;"	d
FLAG_HAS_AMT	e1000.h	452;"	d
FLAG_HAS_CTRLEXT_ON_LOAD	e1000.h	457;"	d
FLAG_HAS_FLASH	e1000.h	453;"	d
FLAG_HAS_HW_TIMESTAMP	e1000.h	466;"	d
FLAG_HAS_HW_VLAN_FILTER	e1000.h	454;"	d
FLAG_HAS_JUMBO_FRAMES	e1000.h	459;"	d
FLAG_HAS_MSIX	e1000.h	462;"	d
FLAG_HAS_SMART_POWER_DOWN	e1000.h	463;"	d
FLAG_HAS_SWSM_ON_LOAD	e1000.h	458;"	d
FLAG_HAS_WOL	e1000.h	455;"	d
FLAG_IS_ICH	e1000.h	461;"	d
FLAG_IS_QUAD_PORT	e1000.h	465;"	d
FLAG_IS_QUAD_PORT_A	e1000.h	464;"	d
FLAG_LSC_GIG_SPEED_DROP	e1000.h	477;"	d
FLAG_MNG_PT_ENABLED	e1000.h	472;"	d
FLAG_MSI_ENABLED	e1000.h	479;"	d
FLAG_MSI_TEST_FAILED	e1000.h	487;"	d
FLAG_NO_WAKE_UCAST	e1000.h	471;"	d
FLAG_RESET_OVERWRITES_LAA	e1000.h	473;"	d
FLAG_RESTART_NOW	e1000.h	486;"	d
FLAG_RX_CSUM_ENABLED	e1000.h	481;"	d
FLAG_RX_NEEDS_RESTART	e1000.h	476;"	d
FLAG_SMART_POWER_DOWN	e1000.h	478;"	d
FLAG_TARC_SET_BIT_ZERO	e1000.h	475;"	d
FLAG_TARC_SPEED_MODE_BIT	e1000.h	474;"	d
FLAG_TSO_FORCE	e1000.h	485;"	d
FLASH_GFPREG_BASE_MASK	ich8lan.h	49;"	d
FLASH_SECTOR_ADDR_SHIFT	ich8lan.h	50;"	d
FLOW_CONTROL_ADDRESS_HIGH	defines.h	468;"	d
FLOW_CONTROL_ADDRESS_LOW	defines.h	467;"	d
FLOW_CONTROL_TYPE	defines.h	469;"	d
FLOW_EXT	kcompat.h	3296;"	d
FULL_DUPLEX	defines.h	250;"	d
GG82563_CABLE_LENGTH_TABLE_SIZE	80003es2lan.c	43;"	d	file:
GG82563_DSPD_CABLE_LENGTH	80003es2lan.h	80;"	d
GG82563_E_PHY_ID	defines.h	694;"	d
GG82563_ICR_DIS_PADDING	80003es2lan.h	93;"	d
GG82563_KMCR_PASS_FALSE_CARRIER	80003es2lan.h	83;"	d
GG82563_MAX_KMRN_RETRY	80003es2lan.h	86;"	d
GG82563_MIN_ALT_REG	defines.h	770;"	d
GG82563_MSCR_ASSERT_CRS_ON_TX	80003es2lan.h	71;"	d
GG82563_MSCR_TX_CLK_1000MBPS_25	80003es2lan.h	69;"	d
GG82563_MSCR_TX_CLK_100MBPS_25	80003es2lan.h	68;"	d
GG82563_MSCR_TX_CLK_10MBPS_2_5	80003es2lan.h	67;"	d
GG82563_MSCR_TX_CLK_MASK	80003es2lan.h	66;"	d
GG82563_PAGE_SHIFT	defines.h	767;"	d
GG82563_PHY_DSP_DISTANCE	defines.h	781;"	d
GG82563_PHY_INBAND_CTRL	defines.h	789;"	d
GG82563_PHY_KMRN_MODE_CTRL	defines.h	785;"	d
GG82563_PHY_MAC_SPEC_CTRL	defines.h	779;"	d
GG82563_PHY_PAGE_SELECT	defines.h	774;"	d
GG82563_PHY_PAGE_SELECT_ALT	defines.h	776;"	d
GG82563_PHY_PWR_MGMT_CTRL	defines.h	786;"	d
GG82563_PHY_SPEC_CTRL	defines.h	773;"	d
GG82563_PHY_SPEC_CTRL_2	defines.h	775;"	d
GG82563_PMCR_ENABLE_ELECTRICAL_IDLE	80003es2lan.h	90;"	d
GG82563_PSCR2_REVERSE_AUTO_NEG	80003es2lan.h	62;"	d
GG82563_PSCR_CROSSOVER_MODE_AUTO	80003es2lan.h	59;"	d
GG82563_PSCR_CROSSOVER_MODE_MASK	80003es2lan.h	56;"	d
GG82563_PSCR_CROSSOVER_MODE_MDI	80003es2lan.h	57;"	d
GG82563_PSCR_CROSSOVER_MODE_MDIX	80003es2lan.h	58;"	d
GG82563_PSCR_POLARITY_REVERSAL_DISABLE	80003es2lan.h	55;"	d
GG82563_REG	defines.h	768;"	d
HALF_DUPLEX	defines.h	249;"	d
HAVE_8021P_SUPPORT	kcompat.h	3124;"	d
HAVE_8021P_SUPPORT	kcompat.h	3130;"	d
HAVE_ASPM_QUIRKS	kcompat.h	2598;"	d
HAVE_BRIDGE_ATTRIBS	kcompat.h	3748;"	d
HAVE_BRIDGE_FILTER	kcompat.h	3780;"	d
HAVE_CONFIG_HOTPLUG	kcompat.h	3711;"	d
HAVE_CONST_STRUCT_PCI_ERROR_HANDLERS	kcompat.h	3699;"	d
HAVE_DCBNL_IEEE	kcompat.h	3280;"	d
HAVE_DCBNL_IEEE_DELAPP	kcompat.h	3356;"	d
HAVE_DCBNL_OPS_GETAPP	kcompat.h	2725;"	d
HAVE_DEVICE_NUMA_NODE	kcompat.h	2089;"	d
HAVE_EARLY_VMALLOC_NODE	kcompat.h	2062;"	d
HAVE_ENCAP_CSUM_OFFLOAD	kcompat.h	3729;"	d
HAVE_ENCAP_TSO_OFFLOAD	kcompat.h	3803;"	d
HAVE_ETHTOOL_GET_PERM_ADDR	kcompat.h	2220;"	d
HAVE_ETHTOOL_GET_RXNFC_VOID_RULE_LOCS	kcompat.h	3363;"	d
HAVE_ETHTOOL_GET_SSET_COUNT	kcompat.h	2318;"	d
HAVE_ETHTOOL_GET_TS_INFO	kcompat.h	2811;"	d
HAVE_ETHTOOL_GET_TS_INFO	kcompat.h	3528;"	d
HAVE_ETHTOOL_SET_PHYS_ID	kcompat.h	2810;"	d
HAVE_ETHTOOL_SET_PHYS_ID	kcompat.h	3333;"	d
HAVE_FDB_OPS	kcompat.h	3527;"	d
HAVE_I2C_SUPPORT	kcompat.h	1398;"	d
HAVE_IGB_DEBUG_FS	kcompat.h	2499;"	d
HAVE_IGB_DEBUG_FS	kcompat.h	2505;"	d
HAVE_INCLUDE_LINUX_MDIO_H	kcompat.h	2656;"	d
HAVE_INT_NDO_VLAN_RX_ADD_VID	kcompat.h	3458;"	d
HAVE_IRQ_AFFINITY_HINT	kcompat.h	3055;"	d
HAVE_IRQ_AFFINITY_HINT	kcompat.h	3059;"	d
HAVE_IXGBE_DEBUG_FS	kcompat.h	2498;"	d
HAVE_IXGBE_DEBUG_FS	kcompat.h	2504;"	d
HAVE_MQPRIO	kcompat.h	3273;"	d
HAVE_NDO_GET_STATS64	kcompat.h	3131;"	d
HAVE_NDO_SET_FEATURES	kcompat.h	3284;"	d
HAVE_NETDEV_HW_ADDR	kcompat.h	2650;"	d
HAVE_NETDEV_NAPI_LIST	kcompat.h	2319;"	d
HAVE_NETDEV_OPS_FCOE_DDP_TARGET	kcompat.h	3269;"	d
HAVE_NETDEV_OPS_FCOE_ENABLE	kcompat.h	2720;"	d
HAVE_NETDEV_OPS_FCOE_GETWWN	kcompat.h	2749;"	d
HAVE_NETDEV_OPS_FCOE_GETWWN	kcompat.h	2817;"	d
HAVE_NETDEV_SELECT_QUEUE	kcompat.h	2502;"	d
HAVE_NETDEV_STATS_IN_NETDEV	kcompat.h	2199;"	d
HAVE_NETDEV_STORAGE_ADDRESS	kcompat.h	2647;"	d
HAVE_NETDEV_VLAN_FEATURES	kcompat.h	2384;"	d
HAVE_NETIF_MSG	kcompat.h	904;"	d
HAVE_NET_DEVICE_OPS	kcompat.h	2560;"	d
HAVE_PCIE_TYPE	kcompat.h	2730;"	d
HAVE_PCI_DEV_FLAGS_ASSIGNED	kcompat.h	3430;"	d
HAVE_PCI_DEV_FLAGS_ASSIGNED	kcompat.h	3435;"	d
HAVE_PCI_ERS	kcompat.h	1836;"	d
HAVE_PCI_ERS	kcompat.h	1838;"	d
HAVE_PCI_ERS	kcompat.h	1839;"	d
HAVE_PFC_MODE_ENABLE	kcompat.h	2563;"	d
HAVE_PM_QOS_REQUEST_ACTIVE	kcompat.h	3129;"	d
HAVE_PM_QOS_REQUEST_LIST	kcompat.h	3058;"	d
HAVE_PTP_1588_CLOCK	kcompat.h	3517;"	d
HAVE_RHEL6_ETHTOOL_OPS_EXT_STRUCT	kcompat.h	2809;"	d
HAVE_SCTP	kcompat.h	1093;"	d
HAVE_SETUP_TC	kcompat.h	3276;"	d
HAVE_SET_RX_MODE	kcompat.h	3020;"	d
HAVE_SRIOV_CONFIGURE	kcompat.h	3745;"	d
HAVE_SYSTEM_SLEEP_PM_OPS	kcompat.h	2966;"	d
HAVE_SYSTEM_SLEEP_PM_OPS	kcompat.h	3018;"	d
HAVE_TRANS_START_IN_QUEUE	kcompat.h	2653;"	d
HAVE_TX_MQ	kcompat.h	2501;"	d
HAVE_VF_SPOOFCHK_CONFIGURE	kcompat.h	3436;"	d
HAVE_VLAN_RX_REGISTER	kcompat.h	3213;"	d
HFILES	Makefile	/^HFILES = e1000.h hw.h regs.h defines.h \\$/;"	m
HLIST_HEAD	kcompat.h	1264;"	d
HLIST_HEAD_INIT	kcompat.h	1263;"	d
HV_COLC_LOWER	ich8lan.h	158;"	d
HV_COLC_UPPER	ich8lan.h	157;"	d
HV_DC_LOWER	ich8lan.h	160;"	d
HV_DC_UPPER	ich8lan.h	159;"	d
HV_ECOL_LOWER	ich8lan.h	152;"	d
HV_ECOL_UPPER	ich8lan.h	151;"	d
HV_INTC_FC_PAGE_START	phy.h	130;"	d
HV_KMRN_FIFO_CTRLSTA	ich8lan.h	210;"	d
HV_KMRN_FIFO_CTRLSTA_PREAMBLE_MASK	ich8lan.h	211;"	d
HV_KMRN_FIFO_CTRLSTA_PREAMBLE_SHIFT	ich8lan.h	212;"	d
HV_KMRN_MDIO_SLOW	ich8lan.h	207;"	d
HV_KMRN_MODE_CTRL	ich8lan.h	206;"	d
HV_LATECOL_LOWER	ich8lan.h	156;"	d
HV_LATECOL_UPPER	ich8lan.h	155;"	d
HV_LED_CONFIG	ich8lan.h	143;"	d
HV_MCC_LOWER	ich8lan.h	154;"	d
HV_MCC_UPPER	ich8lan.h	153;"	d
HV_MUX_DATA_CTRL	ich8lan.h	144;"	d
HV_MUX_DATA_CTRL_FORCE_SPEED	ich8lan.h	146;"	d
HV_MUX_DATA_CTRL_GEN_TO_MAC	ich8lan.h	145;"	d
HV_M_STATUS	phy.h	170;"	d
HV_M_STATUS_AUTONEG_COMPLETE	phy.h	171;"	d
HV_M_STATUS_LINK_UP	phy.h	174;"	d
HV_M_STATUS_SPEED_1000	phy.h	173;"	d
HV_M_STATUS_SPEED_MASK	phy.h	172;"	d
HV_OEM_BITS	ich8lan.h	200;"	d
HV_OEM_BITS_GBE_DIS	ich8lan.h	202;"	d
HV_OEM_BITS_LPLU	ich8lan.h	201;"	d
HV_OEM_BITS_RESTART_AN	ich8lan.h	203;"	d
HV_PM_CTRL	ich8lan.h	215;"	d
HV_PM_CTRL_K1_ENABLE	ich8lan.h	217;"	d
HV_PM_CTRL_PLL_STOP_IN_K1_GIGA	ich8lan.h	216;"	d
HV_SCC_LOWER	ich8lan.h	150;"	d
HV_SCC_UPPER	ich8lan.h	149;"	d
HV_SMB_ADDR	ich8lan.h	184;"	d
HV_SMB_ADDR_FREQ_HIGH_SHIFT	ich8lan.h	190;"	d
HV_SMB_ADDR_FREQ_LOW_SHIFT	ich8lan.h	189;"	d
HV_SMB_ADDR_FREQ_MASK	ich8lan.h	188;"	d
HV_SMB_ADDR_MASK	ich8lan.h	185;"	d
HV_SMB_ADDR_PEC_EN	ich8lan.h	186;"	d
HV_SMB_ADDR_VALID	ich8lan.h	187;"	d
HV_STATS_PAGE	ich8lan.h	147;"	d
HV_TNCRS_LOWER	ich8lan.h	162;"	d
HV_TNCRS_UPPER	ich8lan.h	161;"	d
I217_CGFREG	ich8lan.h	268;"	d
I217_CGFREG_ENABLE_MTA_RESET	ich8lan.h	269;"	d
I217_EEE_ADVERTISEMENT	ich8lan.h	257;"	d
I217_EEE_CAPABILITY	ich8lan.h	256;"	d
I217_EEE_LP_ABILITY	ich8lan.h	258;"	d
I217_EEE_PCS_STATUS	ich8lan.h	255;"	d
I217_E_PHY_ID	defines.h	704;"	d
I217_INBAND_CTRL	ich8lan.h	222;"	d
I217_INBAND_CTRL_LINK_STAT_TX_TIMEOUT_MASK	ich8lan.h	223;"	d
I217_INBAND_CTRL_LINK_STAT_TX_TIMEOUT_SHIFT	ich8lan.h	224;"	d
I217_LPI_GPIO_CTRL	ich8lan.h	227;"	d
I217_LPI_GPIO_CTRL_AUTO_EN_LPI	ich8lan.h	228;"	d
I217_MEMPWR	ich8lan.h	270;"	d
I217_MEMPWR_DISABLE_SMB_RELEASE	ich8lan.h	271;"	d
I217_PROXY_CTRL	ich8lan.h	264;"	d
I217_PROXY_CTRL_AUTO_DISABLE	ich8lan.h	265;"	d
I217_SxCTRL	ich8lan.h	266;"	d
I217_SxCTRL_ENABLE_LPI_RESET	ich8lan.h	267;"	d
I218_ULP_CONFIG1	ich8lan.h	174;"	d
I218_ULP_CONFIG1_DISABLE_SMB_PERST	ich8lan.h	181;"	d
I218_ULP_CONFIG1_INBAND_EXIT	ich8lan.h	178;"	d
I218_ULP_CONFIG1_IND	ich8lan.h	176;"	d
I218_ULP_CONFIG1_RESET_TO_SMBUS	ich8lan.h	180;"	d
I218_ULP_CONFIG1_START	ich8lan.h	175;"	d
I218_ULP_CONFIG1_STICKY_ULP	ich8lan.h	177;"	d
I218_ULP_CONFIG1_WOL_HOST	ich8lan.h	179;"	d
I82577_ADDR_REG	phy.h	132;"	d
I82577_CFG_ASSERT_CRS_ON_TX	phy.h	134;"	d
I82577_CFG_ENABLE_DOWNSHIFT	phy.h	135;"	d
I82577_CFG_REG	phy.h	133;"	d
I82577_CTRL_REG	phy.h	136;"	d
I82577_DSTATUS_CABLE_LENGTH	phy.h	156;"	d
I82577_DSTATUS_CABLE_LENGTH_SHIFT	phy.h	157;"	d
I82577_E_PHY_ID	defines.h	701;"	d
I82577_MSE_THRESHOLD	ich8lan.h	246;"	d
I82577_PHY_CTRL2_AUTO_MDI_MDIX	phy.h	152;"	d
I82577_PHY_CTRL2_MANUAL_MDIX	phy.h	151;"	d
I82577_PHY_CTRL2_MDIX_CFG_MASK	phy.h	153;"	d
I82577_PHY_CTRL_2	phy.h	139;"	d
I82577_PHY_DIAG_STATUS	phy.h	142;"	d
I82577_PHY_LBK_CTRL	phy.h	140;"	d
I82577_PHY_STATUS2_MDIX	phy.h	146;"	d
I82577_PHY_STATUS2_REV_POLARITY	phy.h	145;"	d
I82577_PHY_STATUS2_SPEED_1000MBPS	phy.h	148;"	d
I82577_PHY_STATUS2_SPEED_MASK	phy.h	147;"	d
I82577_PHY_STATUS_2	phy.h	141;"	d
I82578_ADDR_REG	phy.h	131;"	d
I82578_EPSCR_DOWNSHIFT_COUNTER_MASK	defines.h	758;"	d
I82578_EPSCR_DOWNSHIFT_ENABLE	defines.h	757;"	d
I82578_E_PHY_ID	defines.h	702;"	d
I82579_DFT_CTRL	ich8lan.h	238;"	d
I82579_DFT_CTRL_GATE_PHY_RESET	ich8lan.h	239;"	d
I82579_EEE_1000_SUPPORTED	ich8lan.h	254;"	d
I82579_EEE_100_SUPPORTED	ich8lan.h	253;"	d
I82579_EEE_ADVERTISEMENT	ich8lan.h	251;"	d
I82579_EEE_CAPABILITY	ich8lan.h	250;"	d
I82579_EEE_LP_ABILITY	ich8lan.h	252;"	d
I82579_EEE_PCS_STATUS	ich8lan.h	249;"	d
I82579_EMI_ADDR	ich8lan.h	242;"	d
I82579_EMI_DATA	ich8lan.h	243;"	d
I82579_E_PHY_ID	defines.h	703;"	d
I82579_LPI_CTRL	ich8lan.h	231;"	d
I82579_LPI_CTRL_1000_ENABLE	ich8lan.h	233;"	d
I82579_LPI_CTRL_100_ENABLE	ich8lan.h	232;"	d
I82579_LPI_CTRL_ENABLE_MASK	ich8lan.h	234;"	d
I82579_LPI_CTRL_FORCE_PLL_LOCK_COUNT	ich8lan.h	235;"	d
I82579_LPI_UPDATE_TIMER	ich8lan.h	244;"	d
I82579_MSE_LINK_DOWN	ich8lan.h	247;"	d
I82579_MSE_THRESHOLD	ich8lan.h	245;"	d
I82579_RX_CONFIG	ich8lan.h	248;"	d
ICH_CYCLE_ERASE	ich8lan.h	47;"	d
ICH_CYCLE_READ	ich8lan.h	45;"	d
ICH_CYCLE_WRITE	ich8lan.h	46;"	d
ICH_FLASH_CYCLE_REPEAT_COUNT	ich8lan.h	43;"	d
ICH_FLASH_ERASE_COMMAND_TIMEOUT	ich8lan.h	41;"	d
ICH_FLASH_FADDR	ich8lan.h	35;"	d
ICH_FLASH_FDATA0	ich8lan.h	36;"	d
ICH_FLASH_GFPREG	ich8lan.h	32;"	d
ICH_FLASH_HSFCTL	ich8lan.h	34;"	d
ICH_FLASH_HSFSTS	ich8lan.h	33;"	d
ICH_FLASH_LINEAR_ADDR_MASK	ich8lan.h	42;"	d
ICH_FLASH_READ_COMMAND_TIMEOUT	ich8lan.h	39;"	d
ICH_FLASH_SEG_SIZE_256	ich8lan.h	52;"	d
ICH_FLASH_SEG_SIZE_4K	ich8lan.h	53;"	d
ICH_FLASH_SEG_SIZE_64K	ich8lan.h	55;"	d
ICH_FLASH_SEG_SIZE_8K	ich8lan.h	54;"	d
ICH_FLASH_WRITE_COMMAND_TIMEOUT	ich8lan.h	40;"	d
ID_LED_DEF1_DEF2	defines.h	659;"	d
ID_LED_DEF1_OFF2	defines.h	661;"	d
ID_LED_DEF1_ON2	defines.h	660;"	d
ID_LED_DEFAULT	defines.h	655;"	d
ID_LED_DEFAULT_82573	82571.h	33;"	d
ID_LED_DEFAULT_ICH8LAN	ich8lan.h	77;"	d
ID_LED_OFF1_DEF2	defines.h	665;"	d
ID_LED_OFF1_OFF2	defines.h	667;"	d
ID_LED_OFF1_ON2	defines.h	666;"	d
ID_LED_ON1_DEF2	defines.h	662;"	d
ID_LED_ON1_OFF2	defines.h	664;"	d
ID_LED_ON1_ON2	defines.h	663;"	d
ID_LED_RESERVED_0000	defines.h	653;"	d
ID_LED_RESERVED_F746	82571.h	32;"	d
ID_LED_RESERVED_FFFF	defines.h	654;"	d
IEEE_8021QAZ_MAX_TCS	kcompat.h	3232;"	d
IFE_C_E_PHY_ID	defines.h	698;"	d
IFE_E_PHY_ID	defines.h	696;"	d
IFE_PESC_POLARITY_REVERSED	phy.h	226;"	d
IFE_PHY_EXTENDED_STATUS_CONTROL	phy.h	220;"	d
IFE_PHY_MDIX_CONTROL	phy.h	223;"	d
IFE_PHY_SPECIAL_CONTROL	phy.h	221;"	d
IFE_PHY_SPECIAL_CONTROL_LED	phy.h	222;"	d
IFE_PLUS_E_PHY_ID	defines.h	697;"	d
IFE_PMC_AUTO_MDIX	phy.h	240;"	d
IFE_PMC_FORCE_MDIX	phy.h	239;"	d
IFE_PMC_MDIX_STATUS	phy.h	238;"	d
IFE_PSCL_PROBE_LEDS_OFF	phy.h	234;"	d
IFE_PSCL_PROBE_LEDS_ON	phy.h	235;"	d
IFE_PSCL_PROBE_MODE	phy.h	233;"	d
IFE_PSC_AUTO_POLARITY_DISABLE	phy.h	229;"	d
IFE_PSC_FORCE_POLARITY	phy.h	230;"	d
IFS_MAX	defines.h	388;"	d
IFS_MIN	defines.h	389;"	d
IFS_RATIO	defines.h	390;"	d
IFS_STEP	defines.h	391;"	d
IGP01E1000_I_PHY_ID	defines.h	692;"	d
IGP01E1000_PHY_LINK_HEALTH	phy.h	100;"	d
IGP01E1000_PHY_PAGE_SELECT	phy.h	102;"	d
IGP01E1000_PHY_PCS_INIT_REG	phy.h	176;"	d
IGP01E1000_PHY_POLARITY_MASK	phy.h	177;"	d
IGP01E1000_PHY_PORT_CONFIG	phy.h	97;"	d
IGP01E1000_PHY_PORT_CTRL	phy.h	99;"	d
IGP01E1000_PHY_PORT_STATUS	phy.h	98;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	phy.h	188;"	d
IGP01E1000_PSCFR_SMART_SPEED	phy.h	182;"	d
IGP01E1000_PSCR_AUTO_MDIX	phy.h	179;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	phy.h	180;"	d
IGP01E1000_PSSR_MDIX	phy.h	191;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	phy.h	190;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	phy.h	193;"	d
IGP01E1000_PSSR_SPEED_MASK	phy.h	192;"	d
IGP02E1000_AGC_LENGTH_MASK	phy.h	202;"	d
IGP02E1000_AGC_LENGTH_SHIFT	phy.h	201;"	d
IGP02E1000_AGC_RANGE	phy.h	203;"	d
IGP02E1000_CABLE_LENGTH_TABLE_SIZE	phy.c	58;"	d	file:
IGP02E1000_PHY_AGC_A	phy.h	196;"	d
IGP02E1000_PHY_AGC_B	phy.h	197;"	d
IGP02E1000_PHY_AGC_C	phy.h	198;"	d
IGP02E1000_PHY_AGC_D	phy.h	199;"	d
IGP02E1000_PHY_CHANNEL_NUM	phy.h	195;"	d
IGP02E1000_PHY_POWER_MGMT	phy.h	101;"	d
IGP02E1000_PM_D0_LPLU	phy.h	185;"	d
IGP02E1000_PM_D3_LPLU	phy.h	186;"	d
IGP02E1000_PM_SPD	phy.h	184;"	d
IGP03E1000_E_PHY_ID	defines.h	695;"	d
IGP3_KMRN_DIAG	ich8lan.h	116;"	d
IGP3_KMRN_DIAG_PCS_LOCK_LOSS	ich8lan.h	119;"	d
IGP3_VR_CTRL	ich8lan.h	117;"	d
IGP3_VR_CTRL_DEV_POWERDOWN_MODE_MASK	ich8lan.h	120;"	d
IGP3_VR_CTRL_MODE_SHUTDOWN	ich8lan.h	121;"	d
IGP_ACTIVITY_LED_ENABLE	defines.h	670;"	d
IGP_ACTIVITY_LED_MASK	defines.h	669;"	d
IGP_LED3_MODE	defines.h	671;"	d
IGP_PAGE_SHIFT	phy.h	104;"	d
IMS_ENABLE_MASK	defines.h	431;"	d
INCPERIOD_25MHz	e1000.h	437;"	d
INCPERIOD_96MHz	e1000.h	433;"	d
INCPERIOD_SHIFT_96MHz	e1000.h	432;"	d
INCVALUE_25MHz	e1000.h	435;"	d
INCVALUE_96MHz	e1000.h	430;"	d
INCVALUE_SHIFT_25MHz	e1000.h	436;"	d
INCVALUE_SHIFT_96MHz	e1000.h	431;"	d
INIT_HLIST_HEAD	kcompat.h	1265;"	d
INIT_HLIST_NODE	kcompat.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_TQUEUE	kcompat.h	763;"	d
INIT_WORK	kcompat.h	1288;"	d
INIT_WORK	kcompat.h	1289;"	d
INIT_WORK	kcompat.h	2035;"	d
INIT_WORK	kcompat.h	2036;"	d
INSTDIR	Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/$(DRIVER_NAME)$/;"	m
INSTDIR	Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/ethernet\/intel\/$(DRIVER_NAME)$/;"	m
IPPROTO_SCTP	kcompat.h	205;"	d
IPV4_FLOW	kcompat.h	2739;"	d
IPV6_FLOW	kcompat.h	2742;"	d
IRQF_PROBE_SHARED	kcompat.h	1874;"	d
IRQF_PROBE_SHARED	kcompat.h	1876;"	d
IRQF_SHARED	kcompat.h	1881;"	d
IRQ_HANDLED	kcompat.h	1868;"	d
IRQ_NONE	kcompat.h	1869;"	d
IS_ALIGNED	kcompat.h	291;"	d
IS_ENABLED	kcompat.h	295;"	d
IS_ENABLED	kcompat.h	309;"	d
KC_USEC_PER_SEC	kcompat.h	1667;"	d
KERNEL_VERSION	kcompat.h	35;"	d
KERN_CONT	kcompat.h	2311;"	d
KMRNCTRLSTA_OPMODE	ethtool.c	1675;"	d	file:
KMRNCTRLSTA_OPMODE_1GB_FD_GMII	ethtool.c	1676;"	d	file:
KOBJ	Makefile	/^  KOBJ :=  $(KSRC)$/;"	m
KOBJ	Makefile	/^  KOBJ :=  \/lib\/modules\/$(BUILD_KERNEL)\/build$/;"	m
KOBJ	Makefile	/^  KOBJ=\/lib\/modules\/$(KVER)\/build$/;"	m
KSP	Makefile	/^KSP :=  \/lib\/modules\/$(BUILD_KERNEL)\/build \\$/;"	m
KSP	Makefile	/^KSP := $(foreach dir, $(KSP), $(test_dir))$/;"	m
KSRC	Makefile	/^  KSRC := $(firstword $(KSP))$/;"	m
KVER	Makefile	/^KVER := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VERSION_FILE) | grep UTS_RELEASE | \\$/;"	m
KVER_CODE	Makefile	/^KVER_CODE := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(VSP) 2>\/dev\/null |\\$/;"	m
LINK_TIMEOUT	e1000.h	105;"	d
LPA_1000LOCALRXOK	kcompat.h	1721;"	d
LPA_1000REMRXOK	kcompat.h	1722;"	d
LPA_PAUSE_ASYM	kcompat.h	1716;"	d
LPA_PAUSE_CAP	kcompat.h	1715;"	d
M88E1000_CABLE_LENGTH_TABLE_SIZE	phy.c	43;"	d	file:
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	defines.h	745;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	defines.h	744;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	defines.h	750;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	defines.h	749;"	d
M88E1000_EPSCR_TX_CLK_25	defines.h	751;"	d
M88E1000_EXT_PHY_SPEC_CTRL	defines.h	709;"	d
M88E1000_E_PHY_ID	defines.h	689;"	d
M88E1000_I_PHY_ID	defines.h	690;"	d
M88E1000_PHY_GEN_CONTROL	defines.h	712;"	d
M88E1000_PHY_PAGE_SELECT	defines.h	711;"	d
M88E1000_PHY_SPEC_CTRL	defines.h	707;"	d
M88E1000_PHY_SPEC_STATUS	defines.h	708;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	defines.h	723;"	d
M88E1000_PSCR_AUTO_X_1000T	defines.h	720;"	d
M88E1000_PSCR_AUTO_X_MODE	defines.h	722;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	defines.h	718;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	defines.h	717;"	d
M88E1000_PSCR_POLARITY_REVERSAL	defines.h	715;"	d
M88E1000_PSSR_1000MBS	defines.h	737;"	d
M88E1000_PSSR_CABLE_LENGTH	defines.h	735;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	defines.h	739;"	d
M88E1000_PSSR_DOWNSHIFT	defines.h	727;"	d
M88E1000_PSSR_MDIX	defines.h	728;"	d
M88E1000_PSSR_REV_POLARITY	defines.h	726;"	d
M88E1000_PSSR_SPEED	defines.h	736;"	d
M88E1011_I_PHY_ID	defines.h	691;"	d
M88E1111_I_PHY_ID	defines.h	693;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X	defines.h	755;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK	defines.h	754;"	d
MANDIR	Makefile	/^  MANDIR := $(firstword $(MANDIR))$/;"	m
MANDIR	Makefile	/^  MANDIR := $(foreach dir, $(MANDIR), $(test_dir))$/;"	m
MANDIR	Makefile	/^  MANDIR := \/usr\/man$/;"	m
MANDIR	Makefile	/^  MANDIR := \/usr\/share\/man \/usr\/man$/;"	m
MANFILE	Makefile	/^MANFILE = $(TARGET:.ko=.$(MANSECTION))$/;"	m
MANFILE	Makefile	/^MANFILE = $(TARGET:.o=.$(MANSECTION))$/;"	m
MANPATH	Makefile	/^  MANPATH := $(shell (manpath 2>\/dev\/null || echo $MANPATH) | sed 's\/:\/ \/g')$/;"	m
MANSECTION	Makefile	/^MANSECTION = 7$/;"	m
MASTER_DISABLE_TIMEOUT	defines.h	509;"	d
MAX_INTMODE	param.c	145;"	d	file:
MAX_ITR	param.c	127;"	d	file:
MAX_JUMBO_FRAME_SIZE	defines.h	351;"	d
MAX_MTA_REG	hw.h	568;"	d
MAX_NUMNODES	kcompat.h	1336;"	d
MAX_NUMNODES	kcompat.h	1338;"	d
MAX_PHY_MULTI_PAGE_REG	defines.h	683;"	d
MAX_PHY_REG_ADDRESS	defines.h	682;"	d
MAX_PS_BUFFERS	hw.h	243;"	d
MAX_RXABSDELAY	param.c	118;"	d	file:
MAX_RXDELAY	param.c	110;"	d	file:
MAX_TXABSDELAY	param.c	101;"	d	file:
MAX_TXDELAY	param.c	92;"	d	file:
MDIO_EEE_1000KX	kcompat.h	3545;"	d
MDIO_EEE_1000T	kcompat.h	3539;"	d
MDIO_EEE_100TX	kcompat.h	3536;"	d
MDIO_EEE_10GKR	kcompat.h	3551;"	d
MDIO_EEE_10GKX4	kcompat.h	3548;"	d
MDIO_EEE_10GT	kcompat.h	3542;"	d
MDIO_OWNERSHIP_TIMEOUT	defines.h	513;"	d
MDIO_PHY_ID_DEVAD	kcompat.h	2619;"	d
MDIO_PHY_ID_PRTAD	kcompat.h	2616;"	d
MII_ADVERTISE	kcompat.h	781;"	d
MII_BMCR	kcompat.h	777;"	d
MII_BMSR	kcompat.h	778;"	d
MII_CTRL1000	kcompat.h	1709;"	d
MII_ESTATUS	kcompat.h	1757;"	d
MII_EXPANSION	kcompat.h	783;"	d
MII_LPA	kcompat.h	782;"	d
MII_PHYSID1	kcompat.h	779;"	d
MII_PHYSID2	kcompat.h	780;"	d
MII_RESV1	kcompat.h	218;"	d
MII_STAT1000	kcompat.h	1710;"	d
MINIMUM_DHCP_PACKET_SIZE	netdev.c	5967;"	d	file:
MIN_INTMODE	param.c	146;"	d	file:
MIN_ITR	param.c	128;"	d	file:
MIN_NUM_XMITS	defines.h	392;"	d
MIN_RXABSDELAY	param.c	119;"	d	file:
MIN_RXDELAY	param.c	111;"	d	file:
MIN_TXABSDELAY	param.c	102;"	d	file:
MIN_TXDELAY	param.c	93;"	d	file:
MODULE_INFO	kcompat.h	1309;"	d
MODULE_LICENSE	kcompat.h	845;"	d
MODULE_VERSION	kcompat.h	1416;"	d
MSEC_PER_SEC	kcompat.h	1515;"	d
NAPI	kcompat.h	1039;"	d
NAPI	kcompat.h	60;"	d
NAPI	kcompat.h	62;"	d
NETDEV_CLASS_DEV	kcompat.h	2095;"	d
NETDEV_STATS	ethtool.c	/^enum { NETDEV_STATS, E1000_STATS };$/;"	e	enum:__anon4	file:
NETDEV_TX_BUSY	kcompat.h	1610;"	d
NETDEV_TX_LOCKED	kcompat.h	1613;"	d
NETDEV_TX_OK	kcompat.h	1607;"	d
NETIF_F_FCOE_MTU	kcompat.h	2666;"	d
NETIF_F_LLTX	kcompat.h	1657;"	d
NETIF_F_LRO	kcompat.h	197;"	d
NETIF_F_MULTI_QUEUE	kcompat.h	2478;"	d
NETIF_F_NTUPLE	kcompat.h	201;"	d
NETIF_F_RXALL	kcompat.h	3470;"	d
NETIF_F_RXCSUM	kcompat.h	3258;"	d
NETIF_F_RXFCS	kcompat.h	3467;"	d
NETIF_F_SCTP_CSUM	kcompat.h	193;"	d
NETIF_MSG_DRV	kcompat.h	/^	NETIF_MSG_DRV = 0x0001,$/;"	e	enum:__anon33
NETIF_MSG_HW	kcompat.h	/^	NETIF_MSG_HW = 0x2000,$/;"	e	enum:__anon33
NETIF_MSG_HW	kcompat.h	997;"	d
NETIF_MSG_IFDOWN	kcompat.h	/^	NETIF_MSG_IFDOWN = 0x0010,$/;"	e	enum:__anon33
NETIF_MSG_IFUP	kcompat.h	/^	NETIF_MSG_IFUP = 0x0020,$/;"	e	enum:__anon33
NETIF_MSG_INTR	kcompat.h	/^	NETIF_MSG_INTR = 0x0200,$/;"	e	enum:__anon33
NETIF_MSG_LINK	kcompat.h	/^	NETIF_MSG_LINK = 0x0004,$/;"	e	enum:__anon33
NETIF_MSG_PKTDATA	kcompat.h	/^	NETIF_MSG_PKTDATA = 0x1000,$/;"	e	enum:__anon33
NETIF_MSG_PROBE	kcompat.h	/^	NETIF_MSG_PROBE = 0x0002,$/;"	e	enum:__anon33
NETIF_MSG_RX_ERR	kcompat.h	/^	NETIF_MSG_RX_ERR = 0x0040,$/;"	e	enum:__anon33
NETIF_MSG_RX_STATUS	kcompat.h	/^	NETIF_MSG_RX_STATUS = 0x0800,$/;"	e	enum:__anon33
NETIF_MSG_TIMER	kcompat.h	/^	NETIF_MSG_TIMER = 0x0008,$/;"	e	enum:__anon33
NETIF_MSG_TX_DONE	kcompat.h	/^	NETIF_MSG_TX_DONE = 0x0400,$/;"	e	enum:__anon33
NETIF_MSG_TX_ERR	kcompat.h	/^	NETIF_MSG_TX_ERR = 0x0080,$/;"	e	enum:__anon33
NETIF_MSG_TX_QUEUED	kcompat.h	/^	NETIF_MSG_TX_QUEUED = 0x0100,$/;"	e	enum:__anon33
NETIF_MSG_WOL	kcompat.h	/^	NETIF_MSG_WOL = 0x4000,$/;"	e	enum:__anon33
NETIF_MSG_WOL	kcompat.h	998;"	d
NET_IP_ALIGN	kcompat.h	1664;"	d
NET_IP_ALIGN	kcompat.h	3071;"	d
NET_IP_ALIGN	kcompat.h	3073;"	d
NET_SKB_PAD	kcompat.h	1859;"	d
NET_SKB_PAD	kcompat.h	3077;"	d
NET_SKB_PAD	kcompat.h	3081;"	d
NET_SKB_PAD	kcompat.h	3083;"	d
NEWER_PM	kcompat.h	2414;"	d
NSEC_PER_SEC	kcompat.h	1395;"	d
NUMTCS_RETURNS_U8	kcompat.h	3474;"	d
NVM_A8_OPCODE_SPI	defines.h	645;"	d
NVM_ALT_MAC_ADDR_PTR	defines.h	612;"	d
NVM_CFG	defines.h	611;"	d
NVM_CHECKSUM_REG	defines.h	613;"	d
NVM_COMPAT	defines.h	601;"	d
NVM_COMPAT_LOM	defines.h	627;"	d
NVM_COMPAT_VALID_CSUM	defines.h	604;"	d
NVM_FUTURE_INIT_WORD1	defines.h	603;"	d
NVM_FUTURE_INIT_WORD1_VALID_CSUM	defines.h	605;"	d
NVM_ID_LED_SETTINGS	defines.h	602;"	d
NVM_INIT_3GIO_3	defines.h	609;"	d
NVM_INIT_CONTROL2_REG	defines.h	607;"	d
NVM_INIT_CONTROL3_PORT_A	defines.h	610;"	d
NVM_INIT_CONTROL3_PORT_B	defines.h	608;"	d
NVM_MAX_RETRY_SPI	defines.h	642;"	d
NVM_PBA_OFFSET_0	defines.h	636;"	d
NVM_PBA_OFFSET_1	defines.h	637;"	d
NVM_PBA_PTR_GUARD	defines.h	638;"	d
NVM_RDSR_OPCODE_SPI	defines.h	647;"	d
NVM_READ_OPCODE_SPI	defines.h	643;"	d
NVM_STATUS_RDY_SPI	defines.h	650;"	d
NVM_SUM	defines.h	633;"	d
NVM_WORD0F_ASM_DIR	defines.h	621;"	d
NVM_WORD0F_PAUSE	defines.h	620;"	d
NVM_WORD0F_PAUSE_MASK	defines.h	619;"	d
NVM_WORD1A_ASPM_MASK	defines.h	624;"	d
NVM_WORD_SIZE_BASE_SHIFT	defines.h	639;"	d
NVM_WREN_OPCODE_SPI	defines.h	646;"	d
NVM_WRITE_OPCODE_SPI	defines.h	644;"	d
OPTION_DISABLED	param.c	41;"	d	file:
OPTION_ENABLED	param.c	42;"	d	file:
OPTION_UNSET	param.c	40;"	d	file:
PAGE_USE_COUNT	netdev.c	3360;"	d	file:
PCIE_CONFIG_SPACE_LEN	kcompat.h	1992;"	d
PCIE_ICH8_SNOOP_ALL	ich8lan.h	107;"	d
PCIE_LINK_STATE_L0S	kcompat.h	149;"	d
PCIE_LINK_STATE_L1	kcompat.h	152;"	d
PCIE_LINK_STATUS	defines.h	675;"	d
PCIE_LINK_STATUS	kcompat.h	1994;"	d
PCIE_LINK_WIDTH_MASK	defines.h	678;"	d
PCIE_LINK_WIDTH_SHIFT	defines.h	679;"	d
PCIE_NO_SNOOP_ALL	defines.h	565;"	d
PCI_CAP_ID_EXP	kcompat.h	145;"	d
PCI_CONFIG_SPACE_LEN	kcompat.h	1993;"	d
PCI_D0	kcompat.h	1647;"	d
PCI_D1	kcompat.h	1648;"	d
PCI_D2	kcompat.h	1649;"	d
PCI_D3cold	kcompat.h	1651;"	d
PCI_D3hot	kcompat.h	1650;"	d
PCI_DEVICE	kcompat.h	231;"	d
PCI_DRAM_OFFSET	kcompat.c	403;"	d	file:
PCI_EXP_DEVCAP	kcompat.h	1498;"	d
PCI_EXP_DEVCAP2	kcompat.h	2528;"	d
PCI_EXP_DEVCTL	kcompat.h	1485;"	d
PCI_EXP_DEVCTL2	kcompat.h	2529;"	d
PCI_EXP_DEVCTL_CERE	kcompat.h	1488;"	d
PCI_EXP_DEVSTA	kcompat.h	1499;"	d
PCI_EXP_FLAGS	kcompat.h	1490;"	d
PCI_EXP_FLAGS_SLOT	kcompat.h	1497;"	d
PCI_EXP_FLAGS_TYPE	kcompat.h	1492;"	d
PCI_EXP_FLAGS_VERS	kcompat.h	1491;"	d
PCI_EXP_LNKCAP	kcompat.h	1693;"	d
PCI_EXP_LNKCAP2	kcompat.h	3533;"	d
PCI_EXP_LNKCAP_ASPMS	kcompat.h	2386;"	d
PCI_EXP_LNKCTL	kcompat.h	1655;"	d
PCI_EXP_LNKCTL2	kcompat.h	2595;"	d
PCI_EXP_LNKCTL_ASPMC	kcompat.h	2556;"	d
PCI_EXP_LNKCTL_ASPM_L0S	kcompat.h	3706;"	d
PCI_EXP_LNKCTL_ASPM_L1	kcompat.h	3709;"	d
PCI_EXP_LNKSTA	kcompat.h	1694;"	d
PCI_EXP_LNKSTA2	kcompat.h	3685;"	d
PCI_EXP_RTCAP	kcompat.h	1699;"	d
PCI_EXP_RTCTL	kcompat.h	1698;"	d
PCI_EXP_RTSTA	kcompat.h	1700;"	d
PCI_EXP_SLTCAP	kcompat.h	1695;"	d
PCI_EXP_SLTCTL	kcompat.h	1696;"	d
PCI_EXP_SLTSTA	kcompat.h	1697;"	d
PCI_EXP_SLTSTA_PDS	kcompat.h	2548;"	d
PCI_EXP_TYPE_DOWNSTREAM	kcompat.h	1496;"	d
PCI_EXP_TYPE_ENDPOINT	kcompat.h	1493;"	d
PCI_EXP_TYPE_LEG_END	kcompat.h	1494;"	d
PCI_EXP_TYPE_RC_EC	kcompat.h	3447;"	d
PCI_EXP_TYPE_RC_EC	kcompat.h	3448;"	d
PCI_EXP_TYPE_ROOT_PORT	kcompat.h	1495;"	d
PCI_HEADER_TYPE_MULTIFUNC	defines.h	677;"	d
PCI_HEADER_TYPE_REGISTER	defines.h	674;"	d
PCI_LTR_SCALE_MASK	kcompat.h	3326;"	d
PCI_LTR_SCALE_SHIFT	kcompat.h	3329;"	d
PCI_LTR_VALUE_MASK	kcompat.h	3323;"	d
PCI_VDEVICE	kcompat.h	2047;"	d
PCI_VENDOR_ID_INTEL	kcompat.h	2053;"	d
PHY_AUTO_NEG_LIMIT	defines.h	506;"	d
PHY_CFG_TIMEOUT	defines.h	511;"	d
PHY_FORCE_LIMIT	defines.h	507;"	d
PHY_PAGE_SHIFT	ich8lan.h	113;"	d
PHY_REG	ich8lan.h	114;"	d
PHY_REG_MASK	phy.h	105;"	d
PHY_REVISION_MASK	defines.h	681;"	d
PHY_UPPER_SHIFT	phy.h	118;"	d
PMSG_SUSPEND	kcompat.h	111;"	d
PMSG_SUSPEND	kcompat.h	1654;"	d
PM_QOS_CPU_DMA_LATENCY	kcompat.h	2333;"	d
PM_QOS_DEFAULT_VALUE	kcompat.h	2337;"	d
PM_QOS_DEFAULT_VALUE	kcompat.h	2345;"	d
PORT_DA	kcompat.h	2757;"	d
PORT_NONE	kcompat.h	2760;"	d
PORT_OTHER	kcompat.h	2613;"	d
PS_PAGE_BUFFERS	e1000.h	100;"	d
PS_PAGE_BUFFERS	hw.h	246;"	d
PTR_ALIGN	kcompat.h	2212;"	d
REG_PATTERN_TEST	ethtool.c	989;"	d	file:
REG_PATTERN_TEST_ARRAY	ethtool.c	984;"	d	file:
REG_SET_AND_CHECK	ethtool.c	992;"	d	file:
REQ_RX_DESCRIPTOR_MULTIPLE	defines.h	34;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	defines.h	33;"	d
RHC	Makefile	/^RHC := $(KSRC)\/include\/linux\/rhconfig.h$/;"	m
RHEL_RELEASE_CODE	kcompat.h	684;"	d
RHEL_RELEASE_CODE	kcompat.h	686;"	d
RHEL_RELEASE_CODE	kcompat.h	688;"	d
RHEL_RELEASE_CODE	kcompat.h	693;"	d
RHEL_RELEASE_VERSION	kcompat.h	673;"	d
SET_ETHTOOL_OPS	kcompat_ethtool.c	109;"	d	file:
SET_ETHTOOL_OPS	kcompat_ethtool.c	110;"	d	file:
SET_MODULE_OWNER	kcompat.h	2204;"	d
SET_MODULE_OWNER	kcompat.h	2205;"	d
SET_NETDEV_DEV	kcompat.h	164;"	d
SKBTX_HW_TSTAMP	kcompat.h	3202;"	d
SKBTX_IN_PROGRESS	kcompat.h	3203;"	d
SKB_SHARED_TX_IS_UNION	kcompat.h	3204;"	d
SLE_VERSION	kcompat.h	698;"	d
SLE_VERSION_CODE	kcompat.h	703;"	d
SLE_VERSION_CODE	kcompat.h	706;"	d
SLE_VERSION_CODE	kcompat.h	710;"	d
SLE_VERSION_CODE	kcompat.h	714;"	d
SMP	Makefile	/^  SMP := 0$/;"	m
SMP	Makefile	/^SMP := $(shell $(CC) $(EXTRA_CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
SOPASS_MAX	kcompat.h	432;"	d
SPEED_10000	kcompat_ethtool.c	64;"	d	file:
SPEED_MODE_BIT	netdev.c	3326;"	d	file:
SPEED_UNKNOWN	kcompat.h	3423;"	d
SUPPORTED_10000baseKR_Full	kcompat.h	2632;"	d
SUPPORTED_10000baseKX4_Full	kcompat.h	2629;"	d
SUPPORTED_10000baseT_Full	kcompat.h	1051;"	d
SUPPORTED_10000baseT_Full	kcompat_ethtool.c	60;"	d	file:
SUPPORTED_10000baseT_Full	kcompat_ethtool.c	61;"	d	file:
SUPPORTED_1000baseKX_Full	kcompat.h	2626;"	d
SUPPORTED_2500baseX_Full	kcompat.h	2194;"	d
SUPPORTED_40000baseCR4_Full	kcompat.h	3564;"	d
SUPPORTED_40000baseKR4_Full	kcompat.h	3563;"	d
SUPPORTED_40000baseLR4_Full	kcompat.h	3566;"	d
SUPPORTED_40000baseSR4_Full	kcompat.h	3565;"	d
SUPPORTED_Asym_Pause	kcompat.h	1765;"	d
SUPPORTED_Pause	kcompat.h	1764;"	d
SW_FLAG_TIMEOUT	ich8lan.h	219;"	d
TARGET	Makefile	/^TARGET = $(DRIVER_NAME).ko$/;"	m
TARGET	Makefile	/^TARGET = $(DRIVER_NAME).o$/;"	m
TRUE	kcompat.h	115;"	d
TRUE	kcompat.h	117;"	d
TX_WAKE_THRESHOLD	netdev.c	1317;"	d	file:
USE_CONST_DEV_UC_CHAR	kcompat.h	3695;"	d
USE_CONST_DEV_UC_CHAR	kcompat.h	3700;"	d
USE_DEFAULT_FDB_DEL_DUMP	kcompat.h	3781;"	d
USE_LEGACY_PM_SUPPORT	kcompat.h	3338;"	d
USE_REBOOT_NOTIFIER	kcompat.h	1706;"	d
VERSION_FILE	Makefile	/^  VERSION_FILE := $(firstword $(VSP))$/;"	m
VLAN_ETH_FRAME_LEN	kcompat.h	268;"	d
VLAN_ETH_HLEN	kcompat.h	264;"	d
VLAN_HLEN	kcompat.h	260;"	d
VLAN_N_VID	kcompat.h	3150;"	d
VLAN_PRIO_SHIFT	kcompat.h	331;"	d
VSP	Makefile	/^VSP :=  $(KOBJ)\/include\/generated\/utsrelease.h \\$/;"	m
VSP	Makefile	/^VSP := $(foreach file, $(VSP), $(test_file))$/;"	m
WAKE_ARP	kcompat.h	1584;"	d
WAKE_BCAST	kcompat.h	1583;"	d
WAKE_MAGIC	kcompat.h	1585;"	d
WAKE_MAGICSECURE	kcompat.h	1586;"	d
WAKE_MCAST	kcompat.h	1582;"	d
WAKE_PHY	kcompat.h	1580;"	d
WAKE_UCAST	kcompat.h	1581;"	d
WARN	kcompat.h	2491;"	d
WARN_ON	kcompat.h	227;"	d
_Bool	kcompat.h	121;"	d
_Bool	kcompat.h	124;"	d
_E1000E_80003ES2LAN_H_	80003es2lan.h	30;"	d
_E1000E_82571_H_	82571.h	30;"	d
_E1000E_DEFINES_H_	defines.h	30;"	d
_E1000E_HW_H_	hw.h	30;"	d
_E1000E_ICH8LAN_H_	ich8lan.h	30;"	d
_E1000E_MAC_H_	mac.h	30;"	d
_E1000E_MANAGE_H_	manage.h	30;"	d
_E1000E_NVM_H_	nvm.h	30;"	d
_E1000E_PHY_H_	phy.h	30;"	d
_E1000E_REGS_H_	regs.h	30;"	d
_E1000_H_	e1000.h	32;"	d
_KCOMPAT_H_	kcompat.h	30;"	d
__ALIGN_MASK	kcompat.h	1952;"	d
__ARG_PLACEHOLDER_1	kcompat.h	296;"	d
__ARG_PLACEHOLDER_1	kcompat.h	303;"	d
__E1000_ACCESS_SHARED_RESOURCE	e1000.h	/^	__E1000_ACCESS_SHARED_RESOURCE,$/;"	e	enum:e1000_state_t
__E1000_DOWN	e1000.h	/^	__E1000_DOWN$/;"	e	enum:e1000_state_t
__E1000_OBFF_DISABLED	e1000.h	/^	__E1000_OBFF_DISABLED,$/;"	e	enum:e1000_state_t
__E1000_RESETTING	e1000.h	/^	__E1000_RESETTING,$/;"	e	enum:e1000_state_t
__E1000_SHUTDOWN	e1000.h	/^	__E1000_SHUTDOWN,$/;"	e	enum:e1000_state_t
__E1000_TESTING	e1000.h	/^	__E1000_TESTING,$/;"	e	enum:e1000_state_t
__GFP_COLD	kcompat.h	335;"	d
__GFP_COMP	kcompat.h	339;"	d
__WARN_printf	kcompat.h	2487;"	d
____cacheline_aligned_in_smp	e1000.h	/^			  int work_to_do) ____cacheline_aligned_in_smp;$/;"	m	struct:e1000_adapter
____cacheline_aligned_in_smp	e1000.h	/^	bool (*clean_rx) (struct e1000_ring *ring) ____cacheline_aligned_in_smp;$/;"	m	struct:e1000_adapter
____cacheline_aligned_in_smp	e1000.h	/^	struct e1000_ring *tx_ring ____cacheline_aligned_in_smp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::tx_ring
____cacheline_aligned_in_smp	kcompat.h	883;"	d
____cacheline_aligned_in_smp	kcompat.h	885;"	d
____cacheline_internodealigned_in_smp	kcompat.h	1831;"	d
____cacheline_internodealigned_in_smp	kcompat.h	1833;"	d
___config_enabled	kcompat.h	300;"	d
___config_enabled	kcompat.h	307;"	d
__aligned	kcompat.h	2110;"	d
__always_unused	kcompat.h	2794;"	d
__be16	kcompat.h	1565;"	d
__be32	kcompat.h	1568;"	d
__be64	kcompat.h	1571;"	d
__bitwise	kcompat.h	1618;"	d
__config_enabled	kcompat.h	299;"	d
__config_enabled	kcompat.h	306;"	d
__devexit	kcompat.h	3737;"	d
__devexit_p	kcompat.h	3741;"	d
__devexit_p	kcompat.h	990;"	d
__devinit	kcompat.h	3728;"	d
__devinitdata	kcompat.h	3733;"	d
__e1000_access_emi_reg_locked	ich8lan.c	/^static s32 __e1000_access_emi_reg_locked(struct e1000_hw *hw, u16 address,$/;"	f	file:
__e1000_maybe_stop_tx	netdev.c	/^static int __e1000_maybe_stop_tx(struct e1000_ring *tx_ring, int size)$/;"	f	file:
__e1000_read_kmrn_reg	phy.c	/^static s32 __e1000_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_read_phy_reg_hv	phy.c	/^static s32 __e1000_read_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_resume	netdev.c	/^static int __e1000_resume(struct pci_dev *pdev)$/;"	f	file:
__e1000_shutdown	netdev.c	/^static int __e1000_shutdown(struct pci_dev *pdev, bool runtime)$/;"	f	file:
__e1000_write_kmrn_reg	phy.c	/^static s32 __e1000_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000_write_phy_reg_hv	phy.c	/^static s32 __e1000_write_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000e_disable_aspm	netdev.c	/^static void __e1000e_disable_aspm(struct pci_dev *pdev, u16 state)$/;"	f	file:
__e1000e_read_phy_reg_igp	phy.c	/^static s32 __e1000e_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000e_write_phy_reg_igp	phy.c	/^static s32 __e1000e_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__er16flash	ich8lan.c	/^static inline u16 __er16flash(struct e1000_hw *hw, unsigned long reg)$/;"	f	file:
__er32	e1000.h	/^static inline u32 __er32(struct e1000_hw *hw, unsigned long reg)$/;"	f
__er32flash	ich8lan.c	/^static inline u32 __er32flash(struct e1000_hw *hw, unsigned long reg)$/;"	f	file:
__ew16flash	ich8lan.c	/^static inline void __ew16flash(struct e1000_hw *hw, unsigned long reg, u16 val)$/;"	f	file:
__ew32	e1000.h	/^static inline void __ew32(struct e1000_hw *hw, unsigned long reg, u32 val)$/;"	f
__ew32_prepare	e1000.h	/^static inline s32 __ew32_prepare(struct e1000_hw *hw)$/;"	f
__ew32flash	ich8lan.c	/^static inline void __ew32flash(struct e1000_hw *hw, unsigned long reg, u32 val)$/;"	f	file:
__force	kcompat.h	1478;"	d
__hlist_del	kcompat.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__iomem	kcompat.h	1509;"	d
__kc__vlan_hwaccel_put_tag	kcompat.h	/^static inline struct sk_buff *__kc__vlan_hwaccel_put_tag(struct sk_buff *skb,$/;"	f
__kc_adapter_clean	kcompat.c	/^int __kc_adapter_clean(struct net_device *netdev, int *budget)$/;"	f
__kc_netif_set_real_num_rx_queues	kcompat.h	/^static inline int __kc_netif_set_real_num_rx_queues(struct net_device *dev,$/;"	f
__kc_pci_set_master	kcompat.c	/^static void __kc_pci_set_master(struct pci_dev *pdev, bool enable)$/;"	f	file:
__kc_pcie_cap_has_devctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_devctl(const struct pci_dev __always_unused$/;"	f	file:
__kc_pcie_cap_has_lnkctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_lnkctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_has_rtctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_rtctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_has_sltctl	kcompat.c	/^static inline bool __kc_pcie_cap_has_sltctl(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_cap_version	kcompat.c	/^static inline int __kc_pcie_cap_version(struct pci_dev *dev)$/;"	f	file:
__kc_pcie_capability_clear_and_set_word	kcompat.c	/^int __kc_pcie_capability_clear_and_set_word(struct pci_dev *dev, int pos,$/;"	f
__kc_pcie_capability_read_word	kcompat.c	/^int __kc_pcie_capability_read_word(struct pci_dev *dev, int pos, u16 *val)$/;"	f
__kc_pcie_capability_reg_implemented	kcompat.c	/^static bool __kc_pcie_capability_reg_implemented(struct pci_dev *dev, int pos)$/;"	f	file:
__kc_pcie_capability_write_word	kcompat.c	/^int __kc_pcie_capability_write_word(struct pci_dev *dev, int pos, u16 val)$/;"	f
__kc_skb_frag_unref	kcompat.h	/^static inline void __kc_skb_frag_unref(skb_frag_t * frag)$/;"	f
__kc_skb_queue_head_init	kcompat.h	/^static inline void __kc_skb_queue_head_init(struct sk_buff_head *list)$/;"	f
__kc_vlan_get_protocol	kcompat.h	/^static inline __be16 __kc_vlan_get_protocol(const struct sk_buff *skb)$/;"	f
__kc_warn_slowpath	kcompat.c	/^void __kc_warn_slowpath(const char *file, int line, const char *fmt, ...)$/;"	f
__le16	hw.h	210;"	d
__le16	kcompat.h	1556;"	d
__le32	hw.h	213;"	d
__le32	kcompat.h	1559;"	d
__le64	hw.h	216;"	d
__le64	kcompat.h	1562;"	d
__maybe_unused	kcompat.h	2797;"	d
__napi_schedule	kcompat.h	2272;"	d
__netdev_alloc_skb_ip_align	kcompat.h	3344;"	d
__netif_subqueue_stopped	kcompat.h	2297;"	d
__percpu	kcompat.h	2754;"	d
__read_mostly	kcompat.h	214;"	d
__skb_frag_unref	kcompat.h	3415;"	d
__skb_queue_head_init	kcompat.h	2525;"	d
__sum16	kcompat.h	/^typedef __u16 __bitwise __sum16;$/;"	t
__user	kcompat.h	1106;"	d
__vlan_hwaccel_put_tag	kcompat.h	3798;"	d
__wsum	kcompat.h	/^typedef __u32 __bitwise __wsum;$/;"	t
_config_enabled	kcompat.h	298;"	d
_config_enabled	kcompat.h	305;"	d
_kc_LARGE	kcompat.c	52;"	d	file:
_kc_LEFT	kcompat.c	50;"	d	file:
_kc_PLUS	kcompat.c	48;"	d	file:
_kc_SIGN	kcompat.c	47;"	d	file:
_kc_SPACE	kcompat.c	49;"	d	file:
_kc_SPECIAL	kcompat.c	51;"	d	file:
_kc_ZEROPAD	kcompat.c	46;"	d	file:
_kc__div64_32	kcompat.c	/^uint32_t __attribute__ ((weak)) _kc__div64_32(uint64_t * n, uint32_t base)$/;"	f
_kc_alloc_etherdev	kcompat.c	/^struct net_device *_kc_alloc_etherdev(int sizeof_priv)$/;"	f
_kc_bitmap_zero	kcompat.h	/^static inline void _kc_bitmap_zero(unsigned long *dst, int nbits)$/;"	f
_kc_compare_ether_addr	kcompat.h	/^static inline unsigned _kc_compare_ether_addr(const u8 *addr1, const u8 *addr2)$/;"	f
_kc_ether_crc_le	kcompat.h	/^static inline unsigned _kc_ether_crc_le(int length, unsigned char *data)$/;"	f
_kc_ethtool_cmd_speed	kcompat.h	/^static inline __u32 _kc_ethtool_cmd_speed(struct ethtool_cmd *ep)$/;"	f
_kc_ethtool_cmd_speed_set	kcompat.h	/^static inline void _kc_ethtool_cmd_speed_set(struct ethtool_cmd *ep,$/;"	f
_kc_ethtool_coalesce	kcompat.h	/^struct _kc_ethtool_coalesce {$/;"	s
_kc_ethtool_flow_ext	kcompat.h	/^struct _kc_ethtool_flow_ext {$/;"	s
_kc_ethtool_flow_union	kcompat.h	/^union _kc_ethtool_flow_union {$/;"	u
_kc_ethtool_op_get_flags	kcompat.c	/^u32 _kc_ethtool_op_get_flags(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_link	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_link(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_sg	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_sg(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tso	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_tso(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tx_csum	kcompat_ethtool.c	/^u32 _kc_ethtool_op_get_tx_csum(struct net_device *dev)$/;"	f
_kc_ethtool_op_set_flags	kcompat.c	/^int _kc_ethtool_op_set_flags(struct net_device *dev, u32 data, u32 supported)$/;"	f
_kc_ethtool_op_set_sg	kcompat_ethtool.c	/^int _kc_ethtool_op_set_sg(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_op_set_tso	kcompat_ethtool.c	/^int _kc_ethtool_op_set_tso(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_op_set_tx_csum	kcompat_ethtool.c	/^int _kc_ethtool_op_set_tx_csum(struct net_device *dev, u32 data)$/;"	f
_kc_ethtool_ops	kcompat_ethtool.c	/^struct _kc_ethtool_ops {$/;"	s	file:
_kc_ethtool_pauseparam	kcompat.h	/^struct _kc_ethtool_pauseparam {$/;"	s
_kc_ethtool_regs	kcompat.h	/^struct _kc_ethtool_regs {$/;"	s
_kc_ethtool_ringparam	kcompat.h	/^struct _kc_ethtool_ringparam {$/;"	s
_kc_ethtool_rx_flow_spec	kcompat.h	/^struct _kc_ethtool_rx_flow_spec {$/;"	s
_kc_flags_dup_features	kcompat.c	/^static const u32 _kc_flags_dup_features =$/;"	v	file:
_kc_free_netdev	kcompat.c	/^void _kc_free_netdev(struct net_device *netdev)$/;"	f
_kc_generic_mii_ioctl	kcompat_ethtool.c	/^int _kc_generic_mii_ioctl(struct mii_if_info *mii_if,$/;"	f
_kc_hex_dump_to_buffer	kcompat.c	/^static void _kc_hex_dump_to_buffer(const void *buf, size_t len, int rowsize,$/;"	f	file:
_kc_if_mii	kcompat.h	/^static inline struct mii_ioctl_data *_kc_if_mii(struct ifreq *rq)$/;"	f
_kc_is_multicast_ether_addr	kcompat.h	/^static inline int _kc_is_multicast_ether_addr(const u8 *addr)$/;"	f
_kc_is_valid_ether_addr	kcompat.c	/^int _kc_is_valid_ether_addr(u8 *addr)$/;"	f
_kc_is_zero_ether_addr	kcompat.h	/^static inline int _kc_is_zero_ether_addr(const u8 *addr)$/;"	f
_kc_jiffies_to_msecs	kcompat.h	/^static inline unsigned int _kc_jiffies_to_msecs(const unsigned long j)$/;"	f
_kc_jiffies_to_usecs	kcompat.h	/^static inline unsigned int _kc_jiffies_to_usecs(const unsigned long j)$/;"	f
_kc_kmap_atomic	kcompat.h	/^static inline void *_kc_kmap_atomic(struct page *page)$/;"	f
_kc_kmemdup	kcompat.c	/^void *_kc_kmemdup(const void *src, size_t len, unsigned gfp)$/;"	f
_kc_kstrdup	kcompat.c	/^char *_kc_kstrdup(const char *s, unsigned int gfp)$/;"	f
_kc_kunmap_atomic	kcompat.h	/^static inline void _kc_kunmap_atomic(void *addr)$/;"	f
_kc_kzalloc	kcompat.c	/^void *_kc_kzalloc(size_t size, int flags)$/;"	f
_kc_mii_check_link	kcompat_ethtool.c	/^void _kc_mii_check_link(struct mii_if_info *mii)$/;"	f
_kc_mii_ethtool_gset	kcompat_ethtool.c	/^int _kc_mii_ethtool_gset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_ethtool_sset	kcompat_ethtool.c	/^int _kc_mii_ethtool_sset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_if_info	kcompat_ethtool.c	/^struct _kc_mii_if_info {$/;"	s	file:
_kc_mii_link_ok	kcompat_ethtool.c	/^int _kc_mii_link_ok(struct mii_if_info *mii)$/;"	f
_kc_mii_nway_restart	kcompat_ethtool.c	/^int _kc_mii_nway_restart(struct mii_if_info *mii)$/;"	f
_kc_msecs_to_jiffies	kcompat.h	/^static inline unsigned long _kc_msecs_to_jiffies(const unsigned int m)$/;"	f
_kc_msleep_interruptible	kcompat.h	/^static inline unsigned long _kc_msleep_interruptible(unsigned int msecs)$/;"	f
_kc_net_dev_ext	kcompat_ethtool.c	/^struct _kc_net_dev_ext {$/;"	s	file:
_kc_netdev_alloc_skb_ip_align	kcompat.h	/^static inline struct sk_buff *_kc_netdev_alloc_skb_ip_align(struct net_device$/;"	f
_kc_netdev_name	kcompat.h	/^static inline const char *_kc_netdev_name(const struct net_device *dev)$/;"	f
_kc_netdev_to_pdev	kcompat.c	/^struct pci_dev *_kc_netdev_to_pdev(struct net_device *netdev)$/;"	f
_kc_netif_msg_init	kcompat.h	/^static inline u32 _kc_netif_msg_init(int debug_value,$/;"	f
_kc_netif_poll_disable	kcompat.h	/^static inline void _kc_netif_poll_disable(struct net_device *netdev)$/;"	f
_kc_netif_poll_enable	kcompat.h	/^static inline void _kc_netif_poll_enable(struct net_device *netdev)$/;"	f
_kc_netif_tx_disable	kcompat.h	/^static inline void _kc_netif_tx_disable(struct net_device *dev)$/;"	f
_kc_netif_tx_start_all_queues	kcompat.c	/^void _kc_netif_tx_start_all_queues(struct net_device *netdev)$/;"	f
_kc_netif_tx_stop_all_queues	kcompat.c	/^void _kc_netif_tx_stop_all_queues(struct net_device *netdev)$/;"	f
_kc_netif_tx_wake_all_queues	kcompat.c	/^void _kc_netif_tx_wake_all_queues(struct net_device *netdev)$/;"	f
_kc_pci_clear_master	kcompat.c	/^void _kc_pci_clear_master(struct pci_dev *dev)$/;"	f
_kc_pci_dev_ext	kcompat_ethtool.c	/^struct _kc_pci_dev_ext {$/;"	s	file:
_kc_pci_disable_link_state	kcompat.c	/^void _kc_pci_disable_link_state(struct pci_dev *pdev, int state)$/;"	f
_kc_pci_dma_mapping_error	kcompat.h	/^static inline int _kc_pci_dma_mapping_error(dma_addr_t dma_addr)$/;"	f
_kc_pci_enable_wake	kcompat.c	/^int _kc_pci_enable_wake(struct pci_dev *pdev, u32 state, int enable)$/;"	f
_kc_pci_map_page	kcompat.c	/^_kc_pci_map_page(struct pci_dev *dev, struct page *page, unsigned long offset,$/;"	f
_kc_pci_num_vf	kcompat.c	/^int _kc_pci_num_vf(struct pci_dev *dev)$/;"	f
_kc_pci_prepare_to_sleep	kcompat.c	/^int _kc_pci_prepare_to_sleep(struct pci_dev *dev)$/;"	f
_kc_pci_release_regions	kcompat.c	/^void _kc_pci_release_regions(struct pci_dev *dev)$/;"	f
_kc_pci_request_regions	kcompat.c	/^int _kc_pci_request_regions(struct pci_dev *dev, char *res_name)$/;"	f
_kc_pci_restore_state	kcompat.c	/^void _kc_pci_restore_state(struct pci_dev *pdev)$/;"	f
_kc_pci_save_state	kcompat.c	/^int _kc_pci_save_state(struct pci_dev *pdev)$/;"	f
_kc_pci_set_dma_mask	kcompat.c	/^int _kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask)$/;"	f
_kc_pci_set_power_state	kcompat.c	/^int _kc_pci_set_power_state(struct pci_dev *dev, int state)$/;"	f
_kc_pci_unmap_page	kcompat.c	/^_kc_pci_unmap_page(struct pci_dev *dev, u64 dma_addr, size_t size,$/;"	f
_kc_pci_wake_from_d3	kcompat.c	/^int _kc_pci_wake_from_d3(struct pci_dev *dev, bool enable)$/;"	f
_kc_pm_runtime_get_sync	kcompat.h	/^static inline int _kc_pm_runtime_get_sync()$/;"	f
_kc_pm_runtime_get_sync	kcompat.h	/^static inline int _kc_pm_runtime_get_sync(struct device *dev)$/;"	f
_kc_pm_runtime_suspended	kcompat.h	/^static inline bool _kc_pm_runtime_suspended()$/;"	f
_kc_pm_runtime_suspended	kcompat.h	/^static inline bool _kc_pm_runtime_suspended(struct device *dev)$/;"	f
_kc_print_hex_dump	kcompat.c	/^void _kc_print_hex_dump(const char *level,$/;"	f
_kc_random_ether_addr	kcompat.h	/^static inline void _kc_random_ether_addr(u8 *addr)$/;"	f
_kc_request_irq	kcompat.h	/^static inline irqreturn_t _kc_request_irq(unsigned int irq,$/;"	f
_kc_scnprintf	kcompat.c	/^int _kc_scnprintf(char *buf, size_t size, const char *fmt, ...)$/;"	f
_kc_skb_add_rx_frag	kcompat.c	/^void _kc_skb_add_rx_frag(struct sk_buff *skb, int i, struct page *page,$/;"	f
_kc_skb_checksum_none_assert	kcompat.h	/^static inline void _kc_skb_checksum_none_assert(struct sk_buff *skb)$/;"	f
_kc_skb_checksum_start_offset	kcompat.h	/^static inline int _kc_skb_checksum_start_offset(const struct sk_buff *skb)$/;"	f
_kc_skb_fill_page_desc	kcompat.c	/^void _kc_skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page,$/;"	f
_kc_skb_frag_address	kcompat.h	/^static inline void *_kc_skb_frag_address(const skb_frag_t * frag)$/;"	f
_kc_skb_frag_dma_map	kcompat.h	/^static inline dma_addr_t _kc_skb_frag_dma_map(struct device *dev,$/;"	f
_kc_skb_frag_page	kcompat.h	/^static inline struct page *_kc_skb_frag_page(const skb_frag_t * frag)$/;"	f
_kc_skb_frag_size	kcompat.h	/^static inline unsigned int _kc_skb_frag_size(const skb_frag_t * frag)$/;"	f
_kc_skb_frag_size_sub	kcompat.h	/^static inline void _kc_skb_frag_size_sub(skb_frag_t * frag, int delta)$/;"	f
_kc_skb_header_pointer	kcompat.h	/^static inline void *_kc_skb_header_pointer(const struct sk_buff *skb,$/;"	f
_kc_skb_is_gso	kcompat.h	/^static inline int _kc_skb_is_gso(const struct sk_buff *skb)$/;"	f
_kc_skb_is_gso_v6	kcompat.h	/^static inline int _kc_skb_is_gso_v6(const struct sk_buff *skb)$/;"	f
_kc_skb_pad	kcompat.c	/^int _kc_skb_pad(struct sk_buff *skb, int pad)$/;"	f
_kc_skb_padto	kcompat.h	/^static inline int _kc_skb_padto(struct sk_buff *skb, unsigned int len)$/;"	f
_kc_snprintf	kcompat.c	/^int _kc_snprintf(char *buf, size_t size, const char *fmt, ...)$/;"	f
_kc_strlcpy	kcompat.c	/^size_t _kc_strlcpy(char *dest, const char *src, size_t size)$/;"	f
_kc_synchronize_irq	kcompat.h	/^static inline void _kc_synchronize_irq(unsigned int a)$/;"	f
_kc_usecs_to_jiffies	kcompat.h	/^static inline unsigned long _kc_usecs_to_jiffies(const unsigned int m)$/;"	f
_kc_vlan_ethhdr	kcompat.h	/^struct _kc_vlan_ethhdr {$/;"	s
_kc_vlan_hdr	kcompat.h	/^struct _kc_vlan_hdr {$/;"	s
_kc_vsnprintf	kcompat.c	/^int _kc_vsnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
_kc_vzalloc	kcompat.h	/^static inline void *_kc_vzalloc(unsigned long size)$/;"	f
_kc_vzalloc_node	kcompat.h	/^static inline void *_kc_vzalloc_node(unsigned long size, int node)$/;"	f
_udp_hdr	kcompat.h	/^static inline struct udphdr *_udp_hdr(const struct sk_buff *skb)$/;"	f
acquire	hw.h	/^	s32(*acquire) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
acquire	hw.h	/^	s32(*acquire) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
active_vlans	e1000.h	/^	unsigned long active_vlans[BITS_TO_LONGS(VLAN_N_VID)];$/;"	m	struct:e1000_adapter
adapter	e1000.h	/^	struct e1000_adapter *adapter;	\/* back pointer to adapter *\/$/;"	m	struct:e1000_ring	typeref:struct:e1000_ring::e1000_adapter
adapter	hw.h	/^	struct e1000_adapter *adapter;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_adapter
adapter_struct	kcompat.h	65;"	d
adaptive_ifs	hw.h	/^	bool adaptive_ifs;$/;"	m	struct:e1000_mac_info
addr	hw.h	/^	u32 addr;$/;"	m	struct:e1000_phy_info
addr	hw.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:e1000_mac_info
address_bits	hw.h	/^	u16 address_bits;$/;"	m	struct:e1000_nvm_info
advertise	e1000.h	/^	u16 advertise;		\/* auto-negotiation advertisement *\/$/;"	m	struct:e1000_phy_regs
advertising	kcompat_ethtool.c	/^	int advertising;$/;"	m	struct:_kc_mii_if_info	file:
algnerrc	hw.h	/^	u64 algnerrc;$/;"	m	struct:e1000_hw_stats
alloc_etherdev	kcompat.h	750;"	d
alloc_etherdev_mq	kcompat.h	2153;"	d
alloc_rx_buf	e1000.h	/^	void (*alloc_rx_buf) (struct e1000_ring *ring, int cleaned_count,$/;"	m	struct:e1000_adapter
alloc_rx_buff_failed	e1000.h	/^	u32 alloc_rx_buff_failed;$/;"	m	struct:e1000_adapter
arc_subsystem_valid	hw.h	/^	bool arc_subsystem_valid;$/;"	m	struct:e1000_mac_info
arg	param.c	/^	} arg;$/;"	m	struct:e1000_option	typeref:union:e1000_option::__anon36	file:
autoneg	hw.h	/^	bool autoneg;$/;"	m	struct:e1000_mac_info
autoneg	kcompat.h	/^	u32 autoneg;$/;"	m	struct:_kc_ethtool_pauseparam
autoneg_advertised	hw.h	/^	u16 autoneg_advertised;$/;"	m	struct:e1000_phy_info
autoneg_failed	hw.h	/^	bool autoneg_failed;$/;"	m	struct:e1000_mac_info
autoneg_mask	hw.h	/^	u16 autoneg_mask;$/;"	m	struct:e1000_phy_info
autoneg_wait_to_complete	hw.h	/^	bool autoneg_wait_to_complete;$/;"	m	struct:e1000_phy_info
bd_number	e1000.h	/^	u32 bd_number;$/;"	m	struct:e1000_adapter
berasesz	ich8lan.c	/^		u16 berasesz:2;	\/* bit 4:3 Sector Erase Size *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
bitmap_zero	kcompat.h	1444;"	d
bitmap_zero	kcompat.h	1445;"	d
blink_led	hw.h	/^	s32(*blink_led) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
blink_timer	e1000.h	/^	struct timer_list blink_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
bmcr	e1000.h	/^	u16 bmcr;		\/* basic mode control register    *\/$/;"	m	struct:e1000_phy_regs
bmsr	e1000.h	/^	u16 bmsr;		\/* basic mode status register     *\/$/;"	m	struct:e1000_phy_regs
board_80003es2lan	e1000.h	/^	board_80003es2lan,$/;"	e	enum:e1000_boards
board_82571	e1000.h	/^	board_82571,$/;"	e	enum:e1000_boards
board_82572	e1000.h	/^	board_82572,$/;"	e	enum:e1000_boards
board_82573	e1000.h	/^	board_82573,$/;"	e	enum:e1000_boards
board_82574	e1000.h	/^	board_82574,$/;"	e	enum:e1000_boards
board_82583	e1000.h	/^	board_82583,$/;"	e	enum:e1000_boards
board_ich10lan	e1000.h	/^	board_ich10lan,$/;"	e	enum:e1000_boards
board_ich8lan	e1000.h	/^	board_ich8lan,$/;"	e	enum:e1000_boards
board_ich9lan	e1000.h	/^	board_ich9lan,$/;"	e	enum:e1000_boards
board_pch2lan	e1000.h	/^	board_pch2lan,$/;"	e	enum:e1000_boards
board_pch_lpt	e1000.h	/^	board_pch_lpt,$/;"	e	enum:e1000_boards
board_pchlan	e1000.h	/^	board_pchlan,$/;"	e	enum:e1000_boards
bool	kcompat.h	2023;"	d
bprc	hw.h	/^	u64 bprc;$/;"	m	struct:e1000_hw_stats
bptc	hw.h	/^	u64 bptc;$/;"	m	struct:e1000_hw_stats
buffer_addr	hw.h	/^		__le64 buffer_addr;$/;"	m	struct:e1000_rx_desc_extended::__anon5
buffer_addr	hw.h	/^		__le64 buffer_addr[MAX_PS_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon11
buffer_addr	hw.h	/^	__le64 buffer_addr;	\/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	hw.h	/^	__le64 buffer_addr;	\/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_info	e1000.h	/^	struct e1000_buffer *buffer_info;$/;"	m	struct:e1000_ring	typeref:struct:e1000_ring::e1000_buffer
bulk_latency	e1000.h	/^	bulk_latency = 2,$/;"	e	enum:latency_range
bus	hw.h	/^	struct e1000_bus_info bus;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_bus_info
bus_info	kcompat.h	/^	char bus_info[32];$/;"	m	struct:k_ethtool_drvinfo
bytecount	e1000.h	/^			unsigned int bytecount;$/;"	m	struct:e1000_buffer::__anon1::__anon2
cable_length	hw.h	/^	u16 cable_length;$/;"	m	struct:e1000_phy_info
cable_polarity	hw.h	/^	enum e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_rev_polarity
cancel_work_sync	kcompat.h	1294;"	d
cancel_work_sync	kcompat.h	2160;"	d
carrier	kcompat_ethtool.c	/^	unsigned int carrier;$/;"	m	struct:_kc_net_dev_ext	file:
cc	e1000.h	/^	struct cyclecounter cc;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::cyclecounter
cexterr	hw.h	/^	u64 cexterr;$/;"	m	struct:e1000_hw_stats
cfg_on_link_up	hw.h	/^	s32(*cfg_on_link_up) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_for_link	hw.h	/^	 s32(*check_for_link) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_mng_mode	hw.h	/^	bool (*check_mng_mode) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_polarity	hw.h	/^	s32(*check_polarity) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_reset_block	hw.h	/^	s32(*check_reset_block) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
checksum	hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_command_header
checksum	hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_mng_command_header
checksum	hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_mng_dhcp_cookie
clamp_t	kcompat.h	2370;"	d
cleanup_led	hw.h	/^	 s32(*cleanup_led) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_hw_cntrs	hw.h	/^	void (*clear_hw_cntrs) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_vfta	hw.h	/^	void (*clear_vfta) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
cmd	hw.h	/^			u8 cmd;	\/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon18::__anon19
cmd	hw.h	/^			u8 cmd;$/;"	m	struct:e1000_data_desc::__anon28::__anon29
cmd	kcompat.h	/^	u32 cmd;		\/* ETHTOOL_GSTRINGS *\/$/;"	m	struct:ethtool_gstrings
cmd	kcompat.h	/^	u32 cmd;		\/* ETHTOOL_{G,S}COALESCE *\/$/;"	m	struct:_kc_ethtool_coalesce
cmd	kcompat.h	/^	u32 cmd;		\/* ETHTOOL_{G,S}PAUSEPARAM *\/$/;"	m	struct:_kc_ethtool_pauseparam
cmd	kcompat.h	/^	u32 cmd;		\/* ETHTOOL_{G,S}RINGPARAM *\/$/;"	m	struct:_kc_ethtool_ringparam
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:_kc_ethtool_regs
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_eeprom
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_stats
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_test
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_value
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:ethtool_wolinfo
cmd	kcompat.h	/^	u32 cmd;$/;"	m	struct:k_ethtool_drvinfo
cmd_and_length	hw.h	/^	__le32 cmd_and_length;$/;"	m	struct:e1000_context_desc
colc	hw.h	/^	u64 colc;$/;"	m	struct:e1000_hw_stats
colc_old	e1000.h	/^	u64 colc_old;$/;"	m	struct:e1000_adapter
collision_delta	hw.h	/^	u32 collision_delta;$/;"	m	struct:e1000_mac_info
command_data	hw.h	/^	u8 command_data[E1000_HI_MAX_DATA_LENGTH];$/;"	m	struct:e1000_host_command_info
command_data	hw.h	/^	u8 command_data[E1000_HI_MAX_MNG_DATA_LENGTH];$/;"	m	struct:e1000_host_mng_command_info
command_header	hw.h	/^	struct e1000_host_command_header command_header;$/;"	m	struct:e1000_host_command_info	typeref:struct:e1000_host_command_info::e1000_host_command_header
command_header	hw.h	/^	struct e1000_host_mng_command_header command_header;$/;"	m	struct:e1000_host_mng_command_info	typeref:struct:e1000_host_mng_command_info::e1000_host_mng_command_header
command_id	hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_command_header
command_id	hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_mng_command_header
command_length	hw.h	/^	u16 command_length;$/;"	m	struct:e1000_host_mng_command_header
command_length	hw.h	/^	u8 command_length;$/;"	m	struct:e1000_host_command_header
command_options	hw.h	/^	u8 command_options;$/;"	m	struct:e1000_host_command_header
commit	hw.h	/^	s32(*commit) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
compare_ether_addr	kcompat.h	1818;"	d
compare_ether_addr	kcompat.h	1819;"	d
config_collision_dist	hw.h	/^	void (*config_collision_dist) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
config_enabled	kcompat.h	297;"	d
config_enabled	kcompat.h	304;"	d
config_space	e1000.h	/^	u32 *config_space;$/;"	m	struct:e1000_adapter
container_of	kcompat.h	1290;"	d
container_of	kcompat.h	1291;"	d
copybreak	param.c	/^unsigned int copybreak = COPYBREAK_DEFAULT;$/;"	v
corr_errors	e1000.h	/^	unsigned int corr_errors;	\/* correctable ECC errors *\/$/;"	m	struct:e1000_adapter
count	e1000.h	/^	unsigned int count;		\/* number of desc. in ring *\/$/;"	m	struct:e1000_ring
cpu_online	kcompat.h	245;"	d
cpu_relax	kcompat.h	973;"	d
cpu_to_be16	kcompat.h	2170;"	d
cpu_to_be16	kcompat.h	2172;"	d
crcerrs	hw.h	/^	u64 crcerrs;$/;"	m	struct:e1000_hw_stats
cso	hw.h	/^			u8 cso;	\/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon18::__anon19
css	hw.h	/^			u8 css;	\/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon20::__anon21
csum	hw.h	/^					__le16 csum;	\/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon7::__anon8::__anon9
csum	hw.h	/^					__le16 csum;	\/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon13::__anon14::__anon15
csum_ip	hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_extended::__anon6::__anon7::__anon8	typeref:struct:e1000_rx_desc_extended::__anon6::__anon7::__anon8::__anon9
csum_ip	hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_packet_split::__anon12::__anon13::__anon14	typeref:struct:e1000_rx_desc_packet_split::__anon12::__anon13::__anon14::__anon15
csum_offset	kcompat.h	2060;"	d
csum_unfold	kcompat.h	/^static inline __wsum csum_unfold(__sum16 n)$/;"	f
ctrl1000	e1000.h	/^	u16 ctrl1000;		\/* 1000BASE-T control register    *\/$/;"	m	struct:e1000_phy_regs
current_ifs_val	hw.h	/^	u16 current_ifs_val;$/;"	m	struct:e1000_mac_info
current_mode	hw.h	/^	enum e1000_fc_mode current_mode;	\/* FC mode in effect *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
dael	ich8lan.c	/^		u16 dael:1;	\/* bit 2 Direct Access error Log *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
data	hw.h	/^		__le32 data;$/;"	m	union:e1000_context_desc::__anon26
data	hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon28
data	hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon30
data	hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon18
data	hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon20
data	kcompat.h	/^	__be32 data[2];$/;"	m	struct:_kc_ethtool_flow_ext
data	kcompat.h	/^	u32 data;$/;"	m	struct:ethtool_value
data	kcompat.h	/^	u64 data[0];$/;"	m	struct:ethtool_stats
data	kcompat.h	/^	u64 data[0];$/;"	m	struct:ethtool_test
data	kcompat.h	/^	u8 data[0];$/;"	m	struct:_kc_ethtool_regs
data	kcompat.h	/^	u8 data[0];$/;"	m	struct:ethtool_eeprom
data	kcompat.h	/^	u8 data[0];$/;"	m	struct:ethtool_gstrings
dc	hw.h	/^	u64 dc;$/;"	m	struct:e1000_hw_stats
dca3_get_tag	kcompat.h	280;"	d
dca_add_requester	kcompat.h	273;"	d
dca_get_tag	kcompat.h	272;"	d
dca_remove_requester	kcompat.h	274;"	d
dcb_ieee_delapp	kcompat.h	3347;"	d
dcb_ieee_getapp_mask	kcompat.h	3348;"	d
dcb_ieee_setapp	kcompat.h	3346;"	d
debug	netdev.c	/^static int debug = -1;$/;"	v	file:
def	param.c	/^	int def;$/;"	m	struct:e1000_option	file:
delay_usec	hw.h	/^	u16 delay_usec;$/;"	m	struct:e1000_nvm_info
desc	e1000.h	/^	void *desc;			\/* pointer to ring memory  *\/$/;"	m	struct:e1000_ring
detect_tx_hung	e1000.h	/^	bool detect_tx_hung;$/;"	m	struct:e1000_adapter
dev	kcompat.h	/^	struct net_device *dev;$/;"	m	struct:napi_struct	typeref:struct:napi_struct::net_device
dev	kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_mii_if_info	typeref:struct:_kc_mii_if_info::net_device	file:
dev	kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_net_dev_ext	typeref:struct:_kc_net_dev_ext::net_device	file:
dev	kcompat_ethtool.c	/^	struct pci_dev *dev;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_dev	file:
dev_dbg	kcompat.h	1189;"	d
dev_err	kcompat.h	1181;"	d
dev_get_by_name	kcompat.h	2295;"	d
dev_get_by_name	kcompat.h	2296;"	d
dev_info	kcompat.h	1183;"	d
dev_notice	kcompat.h	1187;"	d
dev_notice	kcompat.h	1851;"	d
dev_put	kcompat.h	1319;"	d
dev_put	kcompat.h	1320;"	d
dev_spec	hw.h	/^	} dev_spec;$/;"	m	struct:e1000_hw	typeref:union:e1000_hw::__anon32
dev_to_node	kcompat.h	2063;"	d
dev_warn	kcompat.h	1185;"	d
device	kcompat.h	/^struct device {$/;"	s
device_can_wakeup	kcompat.h	1802;"	d
device_can_wakeup	kcompat.h	1842;"	d
device_can_wakeup	kcompat.h	1844;"	d
device_init_wakeup	kcompat.h	1808;"	d
device_set_wakeup_enable	kcompat.h	1805;"	d
device_set_wakeup_enable	kcompat.h	2417;"	d
device_set_wakeup_enable	kcompat.h	2418;"	d
device_wakeup_enable	kcompat.h	3208;"	d
disable_polarity_correction	hw.h	/^	bool disable_polarity_correction;$/;"	m	struct:e1000_phy_info
dma	e1000.h	/^	dma_addr_t dma;			\/* phys address of ring    *\/$/;"	m	struct:e1000_ring
dma	e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_buffer
dma	e1000.h	/^	u64 dma; \/* must be u64 - written to hw *\/$/;"	m	struct:e1000_ps_page
dma_alloc_coherent	kcompat.h	1193;"	d
dma_data_direction	kcompat.h	/^enum dma_data_direction {$/;"	g
dma_free_coherent	kcompat.h	1195;"	d
dma_map_page	kcompat.h	1198;"	d
dma_map_sg	kcompat.h	1208;"	d
dma_map_single	kcompat.h	1203;"	d
dma_mapping_error	kcompat.h	2441;"	d
dma_mapping_error	kcompat.h	2443;"	d
dma_pool	kcompat.h	1404;"	d
dma_pool_alloc	kcompat.h	1406;"	d
dma_pool_create	kcompat.h	1409;"	d
dma_pool_destroy	kcompat.h	1405;"	d
dma_pool_free	kcompat.h	1407;"	d
dma_set_coherent_mask	kcompat.h	1317;"	d
dma_set_coherent_mask	kcompat.h	2856;"	d
dma_set_mask	kcompat.h	1220;"	d
dma_sync_single	kcompat.h	1213;"	d
dma_sync_single_for_cpu	kcompat.h	1422;"	d
dma_sync_single_for_device	kcompat.h	1423;"	d
dma_sync_single_range	kcompat.h	1217;"	d
dma_sync_single_range_for_cpu	kcompat.h	1424;"	d
dma_sync_single_range_for_cpu	kcompat.h	1781;"	d
dma_sync_single_range_for_device	kcompat.h	1425;"	d
dma_sync_single_range_for_device	kcompat.h	1783;"	d
dma_unmap_addr	kcompat.h	2771;"	d
dma_unmap_addr	kcompat.h	2772;"	d
dma_unmap_addr	kcompat.h	2979;"	d
dma_unmap_addr_set	kcompat.h	2773;"	d
dma_unmap_addr_set	kcompat.h	2774;"	d
dma_unmap_addr_set	kcompat.h	2980;"	d
dma_unmap_len	kcompat.h	2775;"	d
dma_unmap_len	kcompat.h	2776;"	d
dma_unmap_len	kcompat.h	2981;"	d
dma_unmap_len_set	kcompat.h	2777;"	d
dma_unmap_len_set	kcompat.h	2778;"	d
dma_unmap_len_set	kcompat.h	2982;"	d
dma_unmap_page	kcompat.h	1200;"	d
dma_unmap_sg	kcompat.h	1210;"	d
dma_unmap_single	kcompat.h	1205;"	d
do_div	kcompat.h	1370;"	d
do_div	kcompat.h	1379;"	d
downshift_task	e1000.h	/^	struct work_struct downshift_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
driver	kcompat.h	/^	char driver[32];$/;"	m	struct:k_ethtool_drvinfo
driver	kcompat_ethtool.c	/^	struct pci_driver *driver;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_driver	file:
e1000_1000t_rx_status	hw.h	/^enum e1000_1000t_rx_status {$/;"	g
e1000_1000t_rx_status_not_ok	hw.h	/^	e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_ok	hw.h	/^	e1000_1000t_rx_status_ok,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_undefined	hw.h	/^	e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:e1000_1000t_rx_status
e1000_80003es2lan	hw.h	/^	e1000_80003es2lan,$/;"	e	enum:e1000_mac_type
e1000_82571	hw.h	/^	e1000_82571,$/;"	e	enum:e1000_mac_type
e1000_82571_info	82571.c	/^const struct e1000_info e1000_82571_info = {$/;"	v	typeref:struct:e1000_info
e1000_82572	hw.h	/^	e1000_82572,$/;"	e	enum:e1000_mac_type
e1000_82572_info	82571.c	/^const struct e1000_info e1000_82572_info = {$/;"	v	typeref:struct:e1000_info
e1000_82573	hw.h	/^	e1000_82573,$/;"	e	enum:e1000_mac_type
e1000_82573_info	82571.c	/^const struct e1000_info e1000_82573_info = {$/;"	v	typeref:struct:e1000_info
e1000_82574	hw.h	/^	e1000_82574,$/;"	e	enum:e1000_mac_type
e1000_82574_info	82571.c	/^const struct e1000_info e1000_82574_info = {$/;"	v	typeref:struct:e1000_info
e1000_82583	hw.h	/^	e1000_82583,$/;"	e	enum:e1000_mac_type
e1000_82583_info	82571.c	/^const struct e1000_info e1000_82583_info = {$/;"	v	typeref:struct:e1000_info
e1000_access_phy_debug_regs_hv	phy.c	/^static s32 e1000_access_phy_debug_regs_hv(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_access_phy_wakeup_reg_bm	phy.c	/^static s32 e1000_access_phy_wakeup_reg_bm(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_acquire_mac_csr_80003es2lan	80003es2lan.c	/^static s32 e1000_acquire_mac_csr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_80003es2lan	80003es2lan.c	/^static s32 e1000_acquire_nvm_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_82571	82571.c	/^static s32 e1000_acquire_nvm_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_ich8lan	ich8lan.c	/^static s32 e1000_acquire_nvm_ich8lan(struct e1000_hw __always_unused *hw)$/;"	f	file:
e1000_acquire_phy_80003es2lan	80003es2lan.c	/^static s32 e1000_acquire_phy_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swflag_ich8lan	ich8lan.c	/^static s32 e1000_acquire_swflag_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swfw_sync_80003es2lan	80003es2lan.c	/^static s32 e1000_acquire_swfw_sync_80003es2lan(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_adapter	e1000.h	/^struct e1000_adapter {$/;"	s
e1000_alloc_jumbo_rx_buffers	netdev.c	/^static void e1000_alloc_jumbo_rx_buffers(struct e1000_ring *rx_ring,$/;"	f	file:
e1000_alloc_queues	netdev.c	/^static int __devinit e1000_alloc_queues(struct e1000_adapter *adapter)$/;"	f	file:
e1000_alloc_ring_dma	netdev.c	/^static int e1000_alloc_ring_dma(struct e1000_adapter *adapter,$/;"	f	file:
e1000_alloc_rx_buffers	netdev.c	/^static void e1000_alloc_rx_buffers(struct e1000_ring *rx_ring,$/;"	f	file:
e1000_alloc_rx_buffers_ps	netdev.c	/^static void e1000_alloc_rx_buffers_ps(struct e1000_ring *rx_ring,$/;"	f	file:
e1000_boards	e1000.h	/^enum e1000_boards {$/;"	g
e1000_buffer	e1000.h	/^struct e1000_buffer {$/;"	s
e1000_bus_info	hw.h	/^struct e1000_bus_info {$/;"	s
e1000_bus_width	hw.h	/^enum e1000_bus_width {$/;"	g
e1000_bus_width_32	hw.h	/^	e1000_bus_width_32,$/;"	e	enum:e1000_bus_width
e1000_bus_width_64	hw.h	/^	e1000_bus_width_64,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x1	hw.h	/^	e1000_bus_width_pcie_x1,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x2	hw.h	/^	e1000_bus_width_pcie_x2,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x4	hw.h	/^	e1000_bus_width_pcie_x4 = 4,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x8	hw.h	/^	e1000_bus_width_pcie_x8 = 8,$/;"	e	enum:e1000_bus_width
e1000_bus_width_reserved	hw.h	/^	e1000_bus_width_reserved$/;"	e	enum:e1000_bus_width
e1000_bus_width_unknown	hw.h	/^	e1000_bus_width_unknown = 0,$/;"	e	enum:e1000_bus_width
e1000_calculate_checksum	manage.c	/^static u8 e1000_calculate_checksum(u8 *buffer, u32 length)$/;"	f	file:
e1000_cfg_kmrn_1000_80003es2lan	80003es2lan.c	/^static s32 e1000_cfg_kmrn_1000_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cfg_kmrn_10_100_80003es2lan	80003es2lan.c	/^static s32 e1000_cfg_kmrn_10_100_80003es2lan(struct e1000_hw *hw, u16 duplex)$/;"	f	file:
e1000_cfg_on_link_up_80003es2lan	80003es2lan.c	/^static s32 e1000_cfg_on_link_up_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_change_mtu	netdev.c	/^static int e1000_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
e1000_check_alt_mac_addr_generic	mac.c	/^s32 e1000_check_alt_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_copper_link_ich8lan	ich8lan.c	/^static s32 e1000_check_for_copper_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_serdes_link_82571	82571.c	/^static s32 e1000_check_for_serdes_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_check_lbtest_frame	ethtool.c	/^static int e1000_check_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
e1000_check_mng_mode_82574	82571.c	/^static bool e1000_check_mng_mode_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_check_mng_mode_ich8lan	ich8lan.c	/^static bool e1000_check_mng_mode_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_mng_mode_pchlan	ich8lan.c	/^static bool e1000_check_mng_mode_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_phy_82574	82571.c	/^bool e1000_check_phy_82574(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_82577	phy.c	/^s32 e1000_check_polarity_82577(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_ife	phy.c	/^s32 e1000_check_polarity_ife(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_igp	phy.c	/^s32 e1000_check_polarity_igp(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_m88	phy.c	/^s32 e1000_check_polarity_m88(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block_ich8lan	ich8lan.c	/^static s32 e1000_check_reset_block_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clean_jumbo_rx_irq	netdev.c	/^static bool e1000_clean_jumbo_rx_irq(struct e1000_ring *rx_ring, int *work_done,$/;"	f	file:
e1000_clean_rx_irq	netdev.c	/^static bool e1000_clean_rx_irq(struct e1000_ring *rx_ring, int *work_done,$/;"	f	file:
e1000_clean_rx_irq_ps	netdev.c	/^static bool e1000_clean_rx_irq_ps(struct e1000_ring *rx_ring, int *work_done,$/;"	f	file:
e1000_clean_rx_ring	netdev.c	/^static void e1000_clean_rx_ring(struct e1000_ring *rx_ring)$/;"	f	file:
e1000_clean_tx_irq	netdev.c	/^static bool e1000_clean_tx_irq(struct e1000_ring *tx_ring)$/;"	f	file:
e1000_clean_tx_ring	netdev.c	/^static void e1000_clean_tx_ring(struct e1000_ring *tx_ring)$/;"	f	file:
e1000_cleanup_led_ich8lan	ich8lan.c	/^static s32 e1000_cleanup_led_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cleanup_led_pchlan	ich8lan.c	/^static s32 e1000_cleanup_led_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_80003es2lan	80003es2lan.c	/^static void e1000_clear_hw_cntrs_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82571	82571.c	/^static void e1000_clear_hw_cntrs_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_ich8lan	ich8lan.c	/^static void e1000_clear_hw_cntrs_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_vfta_82571	82571.c	/^static void e1000_clear_vfta_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_vfta_generic	mac.c	/^void e1000_clear_vfta_generic(struct e1000_hw *hw)$/;"	f
e1000_close	netdev.c	/^static int e1000_close(struct net_device *netdev)$/;"	f	file:
e1000_commit_fc_settings_generic	mac.c	/^static s32 e1000_commit_fc_settings_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_configure	netdev.c	/^static void e1000_configure(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_k1_ich8lan	ich8lan.c	/^s32 e1000_configure_k1_ich8lan(struct e1000_hw *hw, bool k1_enable)$/;"	f
e1000_configure_msix	netdev.c	/^static void e1000_configure_msix(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_rx	netdev.c	/^static void e1000_configure_rx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_tx	netdev.c	/^static void e1000_configure_tx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_consume_page	netdev.c	/^static void e1000_consume_page(struct e1000_buffer *bi, struct sk_buff *skb,$/;"	f	file:
e1000_context_desc	hw.h	/^struct e1000_context_desc {$/;"	s
e1000_copper_link_autoneg	phy.c	/^static s32 e1000_copper_link_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_setup_82577	phy.c	/^s32 e1000_copper_link_setup_82577(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_gg82563_80003es2lan	80003es2lan.c	/^static s32 e1000_copper_link_setup_gg82563_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_copy_rx_addrs_to_phy_ich8lan	ich8lan.c	/^void e1000_copy_rx_addrs_to_phy_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_create_lbtest_frame	ethtool.c	/^static void e1000_create_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
e1000_data_desc	hw.h	/^struct e1000_data_desc {$/;"	s
e1000_desc_unused	netdev.c	/^static int e1000_desc_unused(struct e1000_ring *ring)$/;"	f	file:
e1000_dev_spec_80003es2lan	hw.h	/^struct e1000_dev_spec_80003es2lan {$/;"	s
e1000_dev_spec_82571	hw.h	/^struct e1000_dev_spec_82571 {$/;"	s
e1000_dev_spec_ich8lan	hw.h	/^struct e1000_dev_spec_ich8lan {$/;"	s
e1000_diag_test	ethtool.c	/^static void e1000_diag_test(struct net_device *netdev,$/;"	f	file:
e1000_disable_phy_wakeup_reg_access_bm	phy.c	/^s32 e1000_disable_phy_wakeup_reg_access_bm(struct e1000_hw *hw, u16 *phy_reg)$/;"	f
e1000_disable_ulp_lpt_lp	ich8lan.c	/^s32 e1000_disable_ulp_lpt_lp(struct e1000_hw *hw, bool force)$/;"	f
e1000_driver	netdev.c	/^static struct pci_driver e1000_driver = {$/;"	v	typeref:struct:pci_driver	file:
e1000_driver	netdev.c	/^static struct pci_driver e1000_driver;$/;"	v	typeref:struct:pci_driver	file:
e1000_eeprom_checks	netdev.c	/^static void e1000_eeprom_checks(struct e1000_adapter *adapter)$/;"	f	file:
e1000_eeprom_test	ethtool.c	/^static int e1000_eeprom_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_enable_phy_wakeup_reg_access_bm	phy.c	/^s32 e1000_enable_phy_wakeup_reg_access_bm(struct e1000_hw *hw, u16 *phy_reg)$/;"	f
e1000_enable_ulp_lpt_lp	ich8lan.c	/^s32 e1000_enable_ulp_lpt_lp(struct e1000_hw *hw, bool to_sx)$/;"	f
e1000_erase_flash_bank_ich8lan	ich8lan.c	/^static s32 e1000_erase_flash_bank_ich8lan(struct e1000_hw *hw, u32 bank)$/;"	f	file:
e1000_err_handler	netdev.c	/^static const struct pci_error_handlers e1000_err_handler = {$/;"	v	typeref:struct:pci_error_handlers	file:
e1000_es2_info	80003es2lan.c	/^const struct e1000_info e1000_es2_info = {$/;"	v	typeref:struct:e1000_info
e1000_ethtool_ops	ethtool.c	/^static const struct ethtool_ops e1000_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
e1000_exit_module	netdev.c	/^module_exit(e1000_exit_module);$/;"	v
e1000_exit_module	netdev.c	/^static void __exit e1000_exit_module(void)$/;"	f	file:
e1000_fc_default	hw.h	/^	e1000_fc_default = 0xFF$/;"	e	enum:e1000_fc_mode
e1000_fc_full	hw.h	/^	e1000_fc_full,$/;"	e	enum:e1000_fc_mode
e1000_fc_info	hw.h	/^struct e1000_fc_info {$/;"	s
e1000_fc_mode	hw.h	/^enum e1000_fc_mode {$/;"	g
e1000_fc_none	hw.h	/^	e1000_fc_none = 0,$/;"	e	enum:e1000_fc_mode
e1000_fc_rx_pause	hw.h	/^	e1000_fc_rx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fc_tx_pause	hw.h	/^	e1000_fc_tx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fix_nvm_checksum_82571	82571.c	/^static s32 e1000_fix_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_flash_cycle_ich8lan	ich8lan.c	/^static s32 e1000_flash_cycle_ich8lan(struct e1000_hw *hw, u32 timeout)$/;"	f	file:
e1000_flash_cycle_init_ich8lan	ich8lan.c	/^static s32 e1000_flash_cycle_init_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_free_desc_rings	ethtool.c	/^static void e1000_free_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_irq	netdev.c	/^static void e1000_free_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_gate_hw_phy_config_ich8lan	ich8lan.c	/^static void e1000_gate_hw_phy_config_ich8lan(struct e1000_hw *hw, bool gate)$/;"	f	file:
e1000_get_bus_info_ich8lan	ich8lan.c	/^static s32 e1000_get_bus_info_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length_80003es2lan	80003es2lan.c	/^static s32 e1000_get_cable_length_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length_82577	phy.c	/^s32 e1000_get_cable_length_82577(struct e1000_hw *hw)$/;"	f
e1000_get_cfg_done_80003es2lan	80003es2lan.c	/^static s32 e1000_get_cfg_done_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_82571	82571.c	/^static s32 e1000_get_cfg_done_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_ich8lan	ich8lan.c	/^static s32 e1000_get_cfg_done_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_coalesce	ethtool.c	/^static int e1000_get_coalesce(struct net_device *netdev,$/;"	f	file:
e1000_get_drvinfo	ethtool.c	/^static void e1000_get_drvinfo(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom	ethtool.c	/^static int e1000_get_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom_len	ethtool.c	/^static int e1000_get_eeprom_len(struct net_device *netdev)$/;"	f	file:
e1000_get_ethtool_stats	ethtool.c	/^static void e1000_get_ethtool_stats(struct net_device *netdev,$/;"	f	file:
e1000_get_hw_semaphore_82571	82571.c	/^static s32 e1000_get_hw_semaphore_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82573	82571.c	/^static s32 e1000_get_hw_semaphore_82573(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82574	82571.c	/^static s32 e1000_get_hw_semaphore_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_get_link_up_info_80003es2lan	80003es2lan.c	/^static s32 e1000_get_link_up_info_80003es2lan(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_link_up_info_ich8lan	ich8lan.c	/^static s32 e1000_get_link_up_info_ich8lan(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_msglevel	ethtool.c	/^static u32 e1000_get_msglevel(struct net_device *netdev)$/;"	f	file:
e1000_get_pauseparam	ethtool.c	/^static void e1000_get_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_get_phy_addr_for_bm_page	phy.c	/^static u32 e1000_get_phy_addr_for_bm_page(u32 page, u32 reg)$/;"	f	file:
e1000_get_phy_addr_for_hv_page	phy.c	/^static u32 e1000_get_phy_addr_for_hv_page(u32 page)$/;"	f	file:
e1000_get_phy_id_82571	82571.c	/^static s32 e1000_get_phy_id_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_phy_info	e1000.h	/^static inline s32 e1000_get_phy_info(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_82577	phy.c	/^s32 e1000_get_phy_info_82577(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_ife	phy.c	/^s32 e1000_get_phy_info_ife(struct e1000_hw *hw)$/;"	f
e1000_get_regs	ethtool.c	/^static void e1000_get_regs(struct net_device *netdev,$/;"	f	file:
e1000_get_regs_len	ethtool.c	/^static int e1000_get_regs_len(struct net_device __always_unused *netdev)$/;"	f	file:
e1000_get_ringparam	ethtool.c	/^static void e1000_get_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_get_rx_csum	ethtool.c	/^static u32 e1000_get_rx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_rxnfc	ethtool.c	/^static int e1000_get_rxnfc(struct net_device *netdev,$/;"	f	file:
e1000_get_self_test_count	ethtool.c	/^static int e1000_get_self_test_count(struct net_device __always_unused *netdev)$/;"	f	file:
e1000_get_settings	ethtool.c	/^static int e1000_get_settings(struct net_device *netdev,$/;"	f	file:
e1000_get_stats	netdev.c	/^static struct net_device_stats *e1000_get_stats(struct net_device *netdev)$/;"	f	file:
e1000_get_stats_count	ethtool.c	/^static int e1000_get_stats_count(struct net_device __always_unused *netdev)$/;"	f	file:
e1000_get_strings	ethtool.c	/^static void e1000_get_strings(struct net_device __always_unused *netdev,$/;"	f	file:
e1000_get_tx_csum	ethtool.c	/^static u32 e1000_get_tx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_variants_80003es2lan	80003es2lan.c	/^static s32 e1000_get_variants_80003es2lan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_variants_82571	82571.c	/^static s32 e1000_get_variants_82571(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_variants_ich8lan	ich8lan.c	/^static s32 e1000_get_variants_ich8lan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_wol	ethtool.c	/^static void e1000_get_wol(struct net_device *netdev,$/;"	f	file:
e1000_gg82563_cable_length_table	80003es2lan.c	/^static const u16 e1000_gg82563_cable_length_table[] = {$/;"	v	file:
e1000_gstrings_stats	ethtool.c	/^static const struct e1000_stats e1000_gstrings_stats[] = {$/;"	v	typeref:struct:e1000_stats	file:
e1000_gstrings_test	ethtool.c	/^static const char e1000_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
e1000_hash_mc_addr	mac.c	/^static u32 e1000_hash_mc_addr(struct e1000_hw *hw, u8 *mc_addr)$/;"	f	file:
e1000_host_command_header	hw.h	/^struct e1000_host_command_header {$/;"	s
e1000_host_command_info	hw.h	/^struct e1000_host_command_info {$/;"	s
e1000_host_mng_command_header	hw.h	/^struct e1000_host_mng_command_header {$/;"	s
e1000_host_mng_command_info	hw.h	/^struct e1000_host_mng_command_info {$/;"	s
e1000_host_mng_dhcp_cookie	hw.h	/^struct e1000_host_mng_dhcp_cookie {$/;"	s
e1000_hv_phy_workarounds_ich8lan	ich8lan.c	/^static s32 e1000_hv_phy_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_hw	hw.h	/^struct e1000_hw {$/;"	s
e1000_hw_stats	hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_ich10_info	ich8lan.c	/^const struct e1000_info e1000_ich10_info = {$/;"	v	typeref:struct:e1000_info
e1000_ich10lan	hw.h	/^	e1000_ich10lan,$/;"	e	enum:e1000_mac_type
e1000_ich8_info	ich8lan.c	/^const struct e1000_info e1000_ich8_info = {$/;"	v	typeref:struct:e1000_info
e1000_ich8lan	hw.h	/^	e1000_ich8lan,$/;"	e	enum:e1000_mac_type
e1000_ich9_info	ich8lan.c	/^const struct e1000_info e1000_ich9_info = {$/;"	v	typeref:struct:e1000_info
e1000_ich9lan	hw.h	/^	e1000_ich9lan,$/;"	e	enum:e1000_mac_type
e1000_id_led_init_pchlan	ich8lan.c	/^static s32 e1000_id_led_init_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_igp_2_cable_length_table	phy.c	/^static const u16 e1000_igp_2_cable_length_table[] = {$/;"	v	file:
e1000_info	e1000.h	/^struct e1000_info {$/;"	s
e1000_info_tbl	netdev.c	/^static const struct e1000_info *e1000_info_tbl[] = {$/;"	v	typeref:struct:e1000_info	file:
e1000_init_hw_80003es2lan	80003es2lan.c	/^static s32 e1000_init_hw_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82571	82571.c	/^static s32 e1000_init_hw_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_ich8lan	ich8lan.c	/^static s32 e1000_init_hw_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_80003es2lan	80003es2lan.c	/^static s32 e1000_init_mac_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82571	82571.c	/^static s32 e1000_init_mac_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_ich8lan	ich8lan.c	/^static s32 e1000_init_mac_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_manageability_pt	netdev.c	/^static void e1000_init_manageability_pt(struct e1000_adapter *adapter)$/;"	f	file:
e1000_init_module	netdev.c	/^module_init(e1000_init_module);$/;"	v
e1000_init_module	netdev.c	/^static int __init e1000_init_module(void)$/;"	f	file:
e1000_init_nvm_params_80003es2lan	80003es2lan.c	/^static s32 e1000_init_nvm_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82571	82571.c	/^static s32 e1000_init_nvm_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_ich8lan	ich8lan.c	/^static s32 e1000_init_nvm_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_80003es2lan	80003es2lan.c	/^static s32 e1000_init_phy_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82571	82571.c	/^static s32 e1000_init_phy_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_ich8lan	ich8lan.c	/^static s32 e1000_init_phy_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_pchlan	ich8lan.c	/^static s32 e1000_init_phy_params_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_wakeup	netdev.c	/^static int e1000_init_phy_wakeup(struct e1000_adapter *adapter, u32 wufc)$/;"	f	file:
e1000_init_phy_workarounds_pchlan	ich8lan.c	/^static s32 e1000_init_phy_workarounds_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_80003es2lan	80003es2lan.c	/^static void e1000_initialize_hw_bits_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_82571	82571.c	/^static void e1000_initialize_hw_bits_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_ich8lan	ich8lan.c	/^static void e1000_initialize_hw_bits_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_integrated_phy_loopback	ethtool.c	/^static int e1000_integrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_intr	netdev.c	/^static irqreturn_t e1000_intr(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msi	netdev.c	/^static irqreturn_t e1000_intr_msi(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msi_test	netdev.c	/^static irqreturn_t e1000_intr_msi_test(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msix	netdev.c	/^static irqreturn_t e1000_intr_msix(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msix_rx	netdev.c	/^static irqreturn_t e1000_intr_msix_rx(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_msix_tx	netdev.c	/^static irqreturn_t e1000_intr_msix_tx(int __always_unused irq, void *data)$/;"	f	file:
e1000_intr_test	ethtool.c	/^static int e1000_intr_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_io_error_detected	netdev.c	/^static pci_ers_result_t e1000_io_error_detected(struct pci_dev *pdev,$/;"	f	file:
e1000_io_resume	netdev.c	/^static void e1000_io_resume(struct pci_dev *pdev)$/;"	f	file:
e1000_io_slot_reset	netdev.c	/^static pci_ers_result_t e1000_io_slot_reset(struct pci_dev *pdev)$/;"	f	file:
e1000_ioctl	netdev.c	/^static int e1000_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_irq_disable	netdev.c	/^static void e1000_irq_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_enable	netdev.c	/^static void e1000_irq_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_k1_gig_workaround_hv	ich8lan.c	/^static s32 e1000_k1_gig_workaround_hv(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_k1_workaround_lpt_lp	ich8lan.c	/^static s32 e1000_k1_workaround_lpt_lp(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_k1_workaround_lv	ich8lan.c	/^static s32 e1000_k1_workaround_lv(struct e1000_hw *hw)$/;"	f	file:
e1000_kmrn_lock_loss_workaround_ich8lan	ich8lan.c	/^static s32 e1000_kmrn_lock_loss_workaround_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_lan_init_done_ich8lan	ich8lan.c	/^static void e1000_lan_init_done_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_blink_callback	ethtool.c	/^static void e1000_led_blink_callback(unsigned long data)$/;"	f	file:
e1000_led_off_ich8lan	ich8lan.c	/^static s32 e1000_led_off_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_off_pchlan	ich8lan.c	/^static s32 e1000_led_off_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_82574	82571.c	/^static s32 e1000_led_on_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_ich8lan	ich8lan.c	/^static s32 e1000_led_on_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_pchlan	ich8lan.c	/^static s32 e1000_led_on_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_link_stall_workaround_hv	phy.c	/^s32 e1000_link_stall_workaround_hv(struct e1000_hw *hw)$/;"	f
e1000_link_test	ethtool.c	/^static int e1000_link_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_loopback_cleanup	ethtool.c	/^static void e1000_loopback_cleanup(struct e1000_adapter *adapter)$/;"	f	file:
e1000_loopback_test	ethtool.c	/^static int e1000_loopback_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_lower_eec_clk	nvm.c	/^static void e1000_lower_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_lv_jumbo_workaround_ich8lan	ich8lan.c	/^s32 e1000_lv_jumbo_workaround_ich8lan(struct e1000_hw *hw, bool enable)$/;"	f
e1000_lv_phy_workarounds_ich8lan	ich8lan.c	/^static s32 e1000_lv_phy_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_m88_cable_length_table	phy.c	/^static const u16 e1000_m88_cable_length_table[] = {$/;"	v	file:
e1000_mac_info	hw.h	/^struct e1000_mac_info {$/;"	s
e1000_mac_operations	hw.h	/^struct e1000_mac_operations {$/;"	s
e1000_mac_type	hw.h	/^enum e1000_mac_type {$/;"	g
e1000_maybe_stop_tx	netdev.c	/^static int e1000_maybe_stop_tx(struct e1000_ring *tx_ring, int size)$/;"	f	file:
e1000_media_type	hw.h	/^enum e1000_media_type {$/;"	g
e1000_media_type_copper	hw.h	/^	e1000_media_type_copper = 1,$/;"	e	enum:e1000_media_type
e1000_media_type_fiber	hw.h	/^	e1000_media_type_fiber = 2,$/;"	e	enum:e1000_media_type
e1000_media_type_internal_serdes	hw.h	/^	e1000_media_type_internal_serdes = 3,$/;"	e	enum:e1000_media_type
e1000_media_type_unknown	hw.h	/^	e1000_media_type_unknown = 0,$/;"	e	enum:e1000_media_type
e1000_mii_ioctl	netdev.c	/^static int e1000_mii_ioctl(struct net_device *netdev, struct ifreq *ifr,$/;"	f	file:
e1000_mng_enable_host_if	manage.c	/^static s32 e1000_mng_enable_host_if(struct e1000_hw *hw)$/;"	f	file:
e1000_mng_host_if_write	manage.c	/^static s32 e1000_mng_host_if_write(struct e1000_hw *hw, u8 *buffer,$/;"	f	file:
e1000_mng_mode	manage.h	/^enum e1000_mng_mode {$/;"	g
e1000_mng_mode_asf	manage.h	/^	e1000_mng_mode_asf,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_host_if_only	manage.h	/^	e1000_mng_mode_host_if_only$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_ipmi	manage.h	/^	e1000_mng_mode_ipmi,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_none	manage.h	/^	e1000_mng_mode_none = 0,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_pt	manage.h	/^	e1000_mng_mode_pt,$/;"	e	enum:e1000_mng_mode
e1000_mng_write_cmd_header	manage.c	/^static s32 e1000_mng_write_cmd_header(struct e1000_hw *hw,$/;"	f	file:
e1000_ms_auto	hw.h	/^	e1000_ms_auto$/;"	e	enum:e1000_ms_type
e1000_ms_force_master	hw.h	/^	e1000_ms_force_master,$/;"	e	enum:e1000_ms_type
e1000_ms_force_slave	hw.h	/^	e1000_ms_force_slave,$/;"	e	enum:e1000_ms_type
e1000_ms_hw_default	hw.h	/^	e1000_ms_hw_default = 0,$/;"	e	enum:e1000_ms_type
e1000_ms_type	hw.h	/^enum e1000_ms_type {$/;"	g
e1000_msix_other	netdev.c	/^static irqreturn_t e1000_msix_other(int __always_unused irq, void *data)$/;"	f	file:
e1000_netpoll	netdev.c	/^static void e1000_netpoll(struct net_device *netdev)$/;"	f	file:
e1000_notifier_reboot	netdev.c	/^static struct notifier_block e1000_notifier_reboot = {$/;"	v	typeref:struct:notifier_block	file:
e1000_notify_reboot	netdev.c	/^static int e1000_notify_reboot(struct notifier_block *nb, unsigned long event,$/;"	f	file:
e1000_num_media_types	hw.h	/^	e1000_num_media_types$/;"	e	enum:e1000_media_type
e1000_nvm_eeprom_spi	hw.h	/^	e1000_nvm_eeprom_spi,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_hw	hw.h	/^	e1000_nvm_flash_hw,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_sw	hw.h	/^	e1000_nvm_flash_sw$/;"	e	enum:e1000_nvm_type
e1000_nvm_info	hw.h	/^struct e1000_nvm_info {$/;"	s
e1000_nvm_none	hw.h	/^	e1000_nvm_none,$/;"	e	enum:e1000_nvm_type
e1000_nvm_operations	hw.h	/^struct e1000_nvm_operations {$/;"	s
e1000_nvm_override	hw.h	/^enum e1000_nvm_override {$/;"	g
e1000_nvm_override_none	hw.h	/^	e1000_nvm_override_none = 0,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_large	hw.h	/^	e1000_nvm_override_spi_large$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_small	hw.h	/^	e1000_nvm_override_spi_small,$/;"	e	enum:e1000_nvm_override
e1000_nvm_type	hw.h	/^enum e1000_nvm_type {$/;"	g
e1000_nvm_unknown	hw.h	/^	e1000_nvm_unknown = 0,$/;"	e	enum:e1000_nvm_type
e1000_nway_reset	ethtool.c	/^static int e1000_nway_reset(struct net_device *netdev)$/;"	f	file:
e1000_oem_bits_config_ich8lan	ich8lan.c	/^static s32 e1000_oem_bits_config_ich8lan(struct e1000_hw *hw, bool d0_state)$/;"	f	file:
e1000_open	netdev.c	/^static int e1000_open(struct net_device *netdev)$/;"	f	file:
e1000_opt_list	param.c	/^			struct e1000_opt_list {$/;"	s	struct:e1000_option::__anon36::__anon38	file:
e1000_option	param.c	/^struct e1000_option {$/;"	s	file:
e1000_pch2_info	ich8lan.c	/^const struct e1000_info e1000_pch2_info = {$/;"	v	typeref:struct:e1000_info
e1000_pch2lan	hw.h	/^	e1000_pch2lan,$/;"	e	enum:e1000_mac_type
e1000_pch_info	ich8lan.c	/^const struct e1000_info e1000_pch_info = {$/;"	v	typeref:struct:e1000_info
e1000_pch_lpt	hw.h	/^	e1000_pch_lpt,$/;"	e	enum:e1000_mac_type
e1000_pch_lpt_info	ich8lan.c	/^const struct e1000_info e1000_pch_lpt_info = {$/;"	v	typeref:struct:e1000_info
e1000_pchlan	hw.h	/^	e1000_pchlan,$/;"	e	enum:e1000_mac_type
e1000_pci_tbl	netdev.c	/^static DEFINE_PCI_DEVICE_TABLE(e1000_pci_tbl) = {$/;"	v	file:
e1000_phy_82577	hw.h	/^	e1000_phy_82577,$/;"	e	enum:e1000_phy_type
e1000_phy_82578	hw.h	/^	e1000_phy_82578,$/;"	e	enum:e1000_phy_type
e1000_phy_82579	hw.h	/^	e1000_phy_82579,$/;"	e	enum:e1000_phy_type
e1000_phy_bm	hw.h	/^	e1000_phy_bm,$/;"	e	enum:e1000_phy_type
e1000_phy_disable_receiver	ethtool.c	/^static void e1000_phy_disable_receiver(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_force_speed_duplex_80003es2lan	80003es2lan.c	/^static s32 e1000_phy_force_speed_duplex_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_force_speed_duplex_82577	phy.c	/^s32 e1000_phy_force_speed_duplex_82577(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_ife	phy.c	/^s32 e1000_phy_force_speed_duplex_ife(struct e1000_hw *hw)$/;"	f
e1000_phy_gg82563	hw.h	/^	e1000_phy_gg82563,$/;"	e	enum:e1000_phy_type
e1000_phy_hw_reset	e1000.h	/^static inline s32 e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset_ich8lan	ich8lan.c	/^static s32 e1000_phy_hw_reset_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_i217	hw.h	/^	e1000_phy_i217,$/;"	e	enum:e1000_phy_type
e1000_phy_ife	hw.h	/^	e1000_phy_ife,$/;"	e	enum:e1000_phy_type
e1000_phy_igp	hw.h	/^	e1000_phy_igp,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_2	hw.h	/^	e1000_phy_igp_2,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_3	hw.h	/^	e1000_phy_igp_3,$/;"	e	enum:e1000_phy_type
e1000_phy_info	hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_is_accessible_pchlan	ich8lan.c	/^static bool e1000_phy_is_accessible_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_m88	hw.h	/^	e1000_phy_m88,$/;"	e	enum:e1000_phy_type
e1000_phy_none	hw.h	/^	e1000_phy_none,$/;"	e	enum:e1000_phy_type
e1000_phy_operations	hw.h	/^struct e1000_phy_operations {$/;"	s
e1000_phy_read_status	netdev.c	/^static void e1000_phy_read_status(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_regs	e1000.h	/^struct e1000_phy_regs {$/;"	s
e1000_phy_setup_autoneg	phy.c	/^static s32 e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_stats	hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_type	hw.h	/^enum e1000_phy_type {$/;"	g
e1000_phy_unknown	hw.h	/^	e1000_phy_unknown = 0,$/;"	e	enum:e1000_phy_type
e1000_phys_id	ethtool.c	/^static int e1000_phys_id(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_platform_pm_pch_lpt	ich8lan.c	/^static s32 e1000_platform_pm_pch_lpt(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_pm_ops	netdev.c	/^static const struct dev_pm_ops e1000_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
e1000_poll_fiber_serdes_link_generic	mac.c	/^static s32 e1000_poll_fiber_serdes_link_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_post_phy_reset_ich8lan	ich8lan.c	/^static s32 e1000_post_phy_reset_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy	netdev.c	/^static void e1000_power_down_phy(struct e1000_adapter *adapter)$/;"	f	file:
e1000_power_down_phy_copper	phy.c	/^void e1000_power_down_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy_copper_80003es2lan	80003es2lan.c	/^static void e1000_power_down_phy_copper_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_82571	82571.c	/^static void e1000_power_down_phy_copper_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_ich8lan	ich8lan.c	/^static void e1000_power_down_phy_copper_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_up_phy_copper	phy.c	/^void e1000_power_up_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_print_device_info	netdev.c	/^static void e1000_print_device_info(struct e1000_adapter *adapter)$/;"	f	file:
e1000_print_hw_hang	netdev.c	/^static void e1000_print_hw_hang(struct work_struct *work)$/;"	f	file:
e1000_print_link_info	netdev.c	/^static void e1000_print_link_info(struct e1000_adapter *adapter)$/;"	f	file:
e1000_probe	netdev.c	/^static int __devinit e1000_probe(struct pci_dev *pdev,$/;"	f	file:
e1000_ps_page	e1000.h	/^struct e1000_ps_page {$/;"	s
e1000_put_hw_semaphore_82571	82571.c	/^static void e1000_put_hw_semaphore_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_82573	82571.c	/^static void e1000_put_hw_semaphore_82573(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_82574	82571.c	/^static void e1000_put_hw_semaphore_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_put_txbuf	netdev.c	/^static void e1000_put_txbuf(struct e1000_ring *tx_ring,$/;"	f	file:
e1000_raise_eec_clk	nvm.c	/^static void e1000_raise_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_rar_set_pch2lan	ich8lan.c	/^static void e1000_rar_set_pch2lan(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_rar_set_pch_lpt	ich8lan.c	/^static void e1000_rar_set_pch_lpt(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_read_emi_reg_locked	ich8lan.c	/^s32 e1000_read_emi_reg_locked(struct e1000_hw *hw, u16 addr, u16 *data)$/;"	f
e1000_read_flash_byte_ich8lan	ich8lan.c	/^static s32 e1000_read_flash_byte_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_flash_data_ich8lan	ich8lan.c	/^static s32 e1000_read_flash_data_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_flash_word_ich8lan	ich8lan.c	/^static s32 e1000_read_flash_word_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_kmrn_reg_80003es2lan	80003es2lan.c	/^static s32 e1000_read_kmrn_reg_80003es2lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_mac_addr_80003es2lan	80003es2lan.c	/^static s32 e1000_read_mac_addr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_82571	82571.c	/^static s32 e1000_read_mac_addr_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_generic	nvm.c	/^s32 e1000_read_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_read_nvm	e1000.h	/^static inline s32 e1000_read_nvm(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_read_nvm_ich8lan	ich8lan.c	/^static s32 e1000_read_nvm_ich8lan(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_read_pba_string_generic	nvm.c	/^s32 e1000_read_pba_string_generic(struct e1000_hw *hw, u8 *pba_num,$/;"	f
e1000_read_phy_reg_gg82563_80003es2lan	80003es2lan.c	/^static s32 e1000_read_phy_reg_gg82563_80003es2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_read_phy_reg_hv	phy.c	/^s32 e1000_read_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_hv_locked	phy.c	/^s32 e1000_read_phy_reg_hv_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_page_hv	phy.c	/^s32 e1000_read_phy_reg_page_hv(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_ready_nvm_eeprom	nvm.c	/^static s32 e1000_ready_nvm_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_receive_skb	netdev.c	/^static void e1000_receive_skb(struct e1000_adapter *adapter,$/;"	f	file:
e1000_reg_info	netdev.c	/^struct e1000_reg_info {$/;"	s	file:
e1000_reg_info_tbl	netdev.c	/^static const struct e1000_reg_info e1000_reg_info_tbl[] = {$/;"	v	typeref:struct:e1000_reg_info	file:
e1000_reg_test	ethtool.c	/^static int e1000_reg_test(struct e1000_adapter *adapter, u64 *data)$/;"	f	file:
e1000_regdump	netdev.c	/^static void e1000_regdump(struct e1000_hw *hw, struct e1000_reg_info *reginfo)$/;"	f	file:
e1000_release_mac_csr_80003es2lan	80003es2lan.c	/^static void e1000_release_mac_csr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_80003es2lan	80003es2lan.c	/^static void e1000_release_nvm_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_82571	82571.c	/^static void e1000_release_nvm_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_ich8lan	ich8lan.c	/^static void e1000_release_nvm_ich8lan(struct e1000_hw __always_unused *hw)$/;"	f	file:
e1000_release_phy_80003es2lan	80003es2lan.c	/^static void e1000_release_phy_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swflag_ich8lan	ich8lan.c	/^static void e1000_release_swflag_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swfw_sync_80003es2lan	80003es2lan.c	/^static void e1000_release_swfw_sync_80003es2lan(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_remove	netdev.c	/^static void __devexit e1000_remove(struct pci_dev *pdev)$/;"	f	file:
e1000_request_irq	netdev.c	/^static int e1000_request_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_request_msix	netdev.c	/^static int e1000_request_msix(struct e1000_adapter *adapter)$/;"	f	file:
e1000_reset_hw_80003es2lan	80003es2lan.c	/^static s32 e1000_reset_hw_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82571	82571.c	/^static s32 e1000_reset_hw_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_ich8lan	ich8lan.c	/^static s32 e1000_reset_hw_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_task	netdev.c	/^static void e1000_reset_task(struct work_struct *work)$/;"	f	file:
e1000_restore_vlan	netdev.c	/^static void e1000_restore_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_resume_workarounds_pchlan	ich8lan.c	/^void e1000_resume_workarounds_pchlan(struct e1000_hw *hw)$/;"	f
e1000_retry_write_flash_byte_ich8lan	ich8lan.c	/^static s32 e1000_retry_write_flash_byte_ich8lan(struct e1000_hw *hw,$/;"	f	file:
e1000_rev_polarity	hw.h	/^enum e1000_rev_polarity {$/;"	g
e1000_rev_polarity_normal	hw.h	/^	e1000_rev_polarity_normal = 0,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_reversed	hw.h	/^	e1000_rev_polarity_reversed,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_undefined	hw.h	/^	e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:e1000_rev_polarity
e1000_ring	e1000.h	/^struct e1000_ring {$/;"	s
e1000_run_loopback_test	ethtool.c	/^static int e1000_run_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_rx_checksum	netdev.c	/^static void e1000_rx_checksum(struct e1000_adapter *adapter, u32 status_err,$/;"	f	file:
e1000_rx_desc_extended	hw.h	/^union e1000_rx_desc_extended {$/;"	u
e1000_rx_desc_packet_split	hw.h	/^union e1000_rx_desc_packet_split {$/;"	u
e1000_rx_hash	netdev.c	/^static inline void e1000_rx_hash(struct net_device *netdev, __le32 rss,$/;"	f	file:
e1000_serdes_link_autoneg_complete	hw.h	/^	e1000_serdes_link_autoneg_complete,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_autoneg_progress	hw.h	/^	e1000_serdes_link_autoneg_progress,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_down	hw.h	/^	e1000_serdes_link_down = 0,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_forced_up	hw.h	/^	e1000_serdes_link_forced_up$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_state	hw.h	/^enum e1000_serdes_link_state {$/;"	g
e1000_set_82571_fiber_loopback	ethtool.c	/^static int e1000_set_82571_fiber_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_coalesce	ethtool.c	/^static int e1000_set_coalesce(struct net_device *netdev,$/;"	f	file:
e1000_set_d0_lplu_state_82571	82571.c	/^static s32 e1000_set_d0_lplu_state_82571(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_82574	82571.c	/^static s32 e1000_set_d0_lplu_state_82574(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_ich8lan	ich8lan.c	/^static s32 e1000_set_d0_lplu_state_ich8lan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state_82574	82571.c	/^static s32 e1000_set_d3_lplu_state_82574(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state_ich8lan	ich8lan.c	/^static s32 e1000_set_d3_lplu_state_ich8lan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_default_fc_generic	mac.c	/^static s32 e1000_set_default_fc_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_set_eee_pchlan	ich8lan.c	/^s32 e1000_set_eee_pchlan(struct e1000_hw *hw)$/;"	f
e1000_set_eeprom	ethtool.c	/^static int e1000_set_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_set_es2lan_mac_loopback	ethtool.c	/^static int e1000_set_es2lan_mac_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_features	netdev.c	/^static int e1000_set_features(struct net_device *netdev,$/;"	f	file:
e1000_set_itr	netdev.c	/^static void e1000_set_itr(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_lan_id_multi_port_pcie	mac.c	/^void e1000_set_lan_id_multi_port_pcie(struct e1000_hw *hw)$/;"	f
e1000_set_lan_id_single_port	mac.c	/^void e1000_set_lan_id_single_port(struct e1000_hw *hw)$/;"	f
e1000_set_lplu_state_pchlan	ich8lan.c	/^static s32 e1000_set_lplu_state_pchlan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_mac	netdev.c	/^static int e1000_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
e1000_set_master_slave_mode	phy.c	/^static s32 e1000_set_master_slave_mode(struct e1000_hw *hw)$/;"	f	file:
e1000_set_mdio_slow_mode_hv	ich8lan.c	/^static s32 e1000_set_mdio_slow_mode_hv(struct e1000_hw *hw)$/;"	f	file:
e1000_set_msglevel	ethtool.c	/^static void e1000_set_msglevel(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_page_igp	phy.c	/^s32 e1000_set_page_igp(struct e1000_hw *hw, u16 page)$/;"	f
e1000_set_pauseparam	ethtool.c	/^static int e1000_set_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_set_phys_id	ethtool.c	/^static int e1000_set_phys_id(struct net_device *netdev,$/;"	f	file:
e1000_set_ringparam	ethtool.c	/^static int e1000_set_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_set_rx_csum	ethtool.c	/^static int e1000_set_rx_csum(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_settings	ethtool.c	/^static int e1000_set_settings(struct net_device *netdev,$/;"	f	file:
e1000_set_spd_dplx	ethtool.c	/^static int e1000_set_spd_dplx(struct e1000_adapter *adapter, u32 spd, u8 dplx)$/;"	f	file:
e1000_set_tso	ethtool.c	/^static int e1000_set_tso(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_tx_csum	ethtool.c	/^static int e1000_set_tx_csum(struct net_device *netdev, u32 data)$/;"	f	file:
e1000_set_wol	ethtool.c	/^static int e1000_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_setup_copper_link_80003es2lan	80003es2lan.c	/^static s32 e1000_setup_copper_link_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82571	82571.c	/^static s32 e1000_setup_copper_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_ich8lan	ich8lan.c	/^static s32 e1000_setup_copper_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_pch_lpt	ich8lan.c	/^static s32 e1000_setup_copper_link_pch_lpt(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_desc_rings	ethtool.c	/^static int e1000_setup_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_fiber_serdes_link_82571	82571.c	/^static s32 e1000_setup_fiber_serdes_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_led_pchlan	ich8lan.c	/^static s32 e1000_setup_led_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_82571	82571.c	/^static s32 e1000_setup_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_ich8lan	ich8lan.c	/^static s32 e1000_setup_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_loopback_test	ethtool.c	/^static int e1000_setup_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rctl	netdev.c	/^static void e1000_setup_rctl(struct e1000_adapter *adapter)$/;"	f	file:
e1000_shadow_ram	hw.h	/^struct e1000_shadow_ram {$/;"	s
e1000_shift_in_eec_bits	nvm.c	/^static u16 e1000_shift_in_eec_bits(struct e1000_hw *hw, u16 count)$/;"	f	file:
e1000_shift_out_eec_bits	nvm.c	/^static void e1000_shift_out_eec_bits(struct e1000_hw *hw, u16 data, u16 count)$/;"	f	file:
e1000_shutdown	netdev.c	/^static void e1000_shutdown(struct pci_dev *pdev)$/;"	f	file:
e1000_smart_speed	hw.h	/^enum e1000_smart_speed {$/;"	g
e1000_smart_speed_default	hw.h	/^	e1000_smart_speed_default = 0,$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_off	hw.h	/^	e1000_smart_speed_off$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_on	hw.h	/^	e1000_smart_speed_on,$/;"	e	enum:e1000_smart_speed
e1000_standby_nvm	nvm.c	/^static void e1000_standby_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_state_t	e1000.h	/^enum e1000_state_t {$/;"	g
e1000_stats	ethtool.c	/^struct e1000_stats {$/;"	s	file:
e1000_stop_nvm	nvm.c	/^static void e1000_stop_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_suspend_workarounds_ich8lan	ich8lan.c	/^void e1000_suspend_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_sw_init	netdev.c	/^static int __devinit e1000_sw_init(struct e1000_adapter *adapter)$/;"	f	file:
e1000_sw_lcd_config_ich8lan	ich8lan.c	/^static s32 e1000_sw_lcd_config_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_test_intr	ethtool.c	/^static irqreturn_t e1000_test_intr(int __always_unused irq, void *data)$/;"	f	file:
e1000_test_msi	netdev.c	/^static int e1000_test_msi(struct e1000_adapter *adapter)$/;"	f	file:
e1000_test_msi_interrupt	netdev.c	/^static int e1000_test_msi_interrupt(struct e1000_adapter *adapter)$/;"	f	file:
e1000_toggle_lanphypc_pch_lpt	ich8lan.c	/^static void e1000_toggle_lanphypc_pch_lpt(struct e1000_hw *hw)$/;"	f	file:
e1000_transfer_dhcp_info	netdev.c	/^static int e1000_transfer_dhcp_info(struct e1000_adapter *adapter,$/;"	f	file:
e1000_tso	netdev.c	/^static int e1000_tso(struct e1000_ring *tx_ring, struct sk_buff *skb)$/;"	f	file:
e1000_tx_csum	netdev.c	/^static bool e1000_tx_csum(struct e1000_ring *tx_ring, struct sk_buff *skb)$/;"	f	file:
e1000_tx_desc	hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_map	netdev.c	/^static int e1000_tx_map(struct e1000_ring *tx_ring, struct sk_buff *skb,$/;"	f	file:
e1000_tx_queue	netdev.c	/^static void e1000_tx_queue(struct e1000_ring *tx_ring, int tx_flags, int count)$/;"	f	file:
e1000_tx_timeout	netdev.c	/^static void e1000_tx_timeout(struct net_device *netdev)$/;"	f	file:
e1000_ulp_state	hw.h	/^enum e1000_ulp_state {$/;"	g
e1000_ulp_state_off	hw.h	/^	e1000_ulp_state_off,$/;"	e	enum:e1000_ulp_state
e1000_ulp_state_on	hw.h	/^	e1000_ulp_state_on,$/;"	e	enum:e1000_ulp_state
e1000_ulp_state_unknown	hw.h	/^	e1000_ulp_state_unknown,$/;"	e	enum:e1000_ulp_state
e1000_update_itr	netdev.c	/^static unsigned int e1000_update_itr(u16 itr_setting, int packets, int bytes)$/;"	f	file:
e1000_update_mng_vlan	netdev.c	/^static void e1000_update_mng_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_update_nvm_checksum_82571	82571.c	/^static s32 e1000_update_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_ich8lan	ich8lan.c	/^static s32 e1000_update_nvm_checksum_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_update_phy_info	netdev.c	/^static void e1000_update_phy_info(unsigned long data)$/;"	f	file:
e1000_valid_led_default_82571	82571.c	/^static s32 e1000_valid_led_default_82571(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_led_default_ich8lan	ich8lan.c	/^static s32 e1000_valid_led_default_ich8lan(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_nvm_bank_detect_ich8lan	ich8lan.c	/^static s32 e1000_valid_nvm_bank_detect_ich8lan(struct e1000_hw *hw, u32 *bank)$/;"	f	file:
e1000_validate_nvm_checksum	e1000.h	/^static inline s32 e1000_validate_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_82571	82571.c	/^static s32 e1000_validate_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_ich8lan	ich8lan.c	/^static s32 e1000_validate_nvm_checksum_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_option	param.c	/^static int __devinit e1000_validate_option(unsigned int *value,$/;"	f	file:
e1000_vlan_rx_add_vid	netdev.c	/^static int e1000_vlan_rx_add_vid(struct net_device *netdev,$/;"	f	file:
e1000_vlan_rx_kill_vid	netdev.c	/^static int e1000_vlan_rx_kill_vid(struct net_device *netdev,$/;"	f	file:
e1000_vlan_rx_register	netdev.c	/^static void e1000_vlan_rx_register(struct net_device *netdev,$/;"	f	file:
e1000_wait_autoneg	phy.c	/^static s32 e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_watchdog	netdev.c	/^static void e1000_watchdog(unsigned long data)$/;"	f	file:
e1000_watchdog_task	netdev.c	/^static void e1000_watchdog_task(struct work_struct *work)$/;"	f	file:
e1000_write_emi_reg_locked	ich8lan.c	/^s32 e1000_write_emi_reg_locked(struct e1000_hw *hw, u16 addr, u16 data)$/;"	f
e1000_write_flash_byte_ich8lan	ich8lan.c	/^static s32 e1000_write_flash_byte_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_flash_data_ich8lan	ich8lan.c	/^static s32 e1000_write_flash_data_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_kmrn_reg_80003es2lan	80003es2lan.c	/^static s32 e1000_write_kmrn_reg_80003es2lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_nvm	e1000.h	/^static inline s32 e1000_write_nvm(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_write_nvm_80003es2lan	80003es2lan.c	/^static s32 e1000_write_nvm_80003es2lan(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_write_nvm_82571	82571.c	/^static s32 e1000_write_nvm_82571(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_nvm_eewr_82571	82571.c	/^static s32 e1000_write_nvm_eewr_82571(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_write_nvm_ich8lan	ich8lan.c	/^static s32 e1000_write_nvm_ich8lan(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_phy_reg_gg82563_80003es2lan	80003es2lan.c	/^static s32 e1000_write_phy_reg_gg82563_80003es2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_write_phy_reg_hv	phy.c	/^s32 e1000_write_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_hv_locked	phy.c	/^s32 e1000_write_phy_reg_hv_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_page_hv	phy.c	/^s32 e1000_write_phy_reg_page_hv(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_smbus_addr	ich8lan.c	/^static s32 e1000_write_smbus_addr(struct e1000_hw *hw)$/;"	f	file:
e1000_write_vfta_generic	mac.c	/^void e1000_write_vfta_generic(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_xmit_frame	netdev.c	/^static netdev_tx_t e1000_xmit_frame(struct sk_buff *skb,$/;"	f	file:
e1000e_acquire_nvm	nvm.c	/^s32 e1000e_acquire_nvm(struct e1000_hw *hw)$/;"	f
e1000e_blink_led_generic	mac.c	/^s32 e1000e_blink_led_generic(struct e1000_hw *hw)$/;"	f
e1000e_check_82574_phy_workaround	netdev.c	/^static void e1000e_check_82574_phy_workaround(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_check_downshift	phy.c	/^s32 e1000e_check_downshift(struct e1000_hw *hw)$/;"	f
e1000e_check_for_copper_link	mac.c	/^s32 e1000e_check_for_copper_link(struct e1000_hw *hw)$/;"	f
e1000e_check_for_fiber_link	mac.c	/^s32 e1000e_check_for_fiber_link(struct e1000_hw *hw)$/;"	f
e1000e_check_for_serdes_link	mac.c	/^s32 e1000e_check_for_serdes_link(struct e1000_hw *hw)$/;"	f
e1000e_check_mng_mode_generic	manage.c	/^bool e1000e_check_mng_mode_generic(struct e1000_hw *hw)$/;"	f
e1000e_check_options	param.c	/^void __devinit e1000e_check_options(struct e1000_adapter *adapter)$/;"	f
e1000e_check_reset_block_generic	phy.c	/^s32 e1000e_check_reset_block_generic(struct e1000_hw *hw)$/;"	f
e1000e_cleanup_led_generic	mac.c	/^s32 e1000e_cleanup_led_generic(struct e1000_hw *hw)$/;"	f
e1000e_clear_hw_cntrs_base	mac.c	/^void e1000e_clear_hw_cntrs_base(struct e1000_hw *hw)$/;"	f
e1000e_config_collision_dist_generic	mac.c	/^void e1000e_config_collision_dist_generic(struct e1000_hw *hw)$/;"	f
e1000e_config_fc_after_link_up	mac.c	/^s32 e1000e_config_fc_after_link_up(struct e1000_hw *hw)$/;"	f
e1000e_config_hwtstamp	netdev.c	/^static int e1000e_config_hwtstamp(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_copper_link_setup_igp	phy.c	/^s32 e1000e_copper_link_setup_igp(struct e1000_hw *hw)$/;"	f
e1000e_copper_link_setup_m88	phy.c	/^s32 e1000e_copper_link_setup_m88(struct e1000_hw *hw)$/;"	f
e1000e_cyclecounter_read	netdev.c	/^static cycle_t e1000e_cyclecounter_read(const struct cyclecounter *cc)$/;"	f	file:
e1000e_determine_phy_address	phy.c	/^s32 e1000e_determine_phy_address(struct e1000_hw *hw)$/;"	f
e1000e_disable_aspm	netdev.c	/^static void e1000e_disable_aspm(struct pci_dev *pdev, u16 state)$/;"	f	file:
e1000e_disable_pcie_master	mac.c	/^s32 e1000e_disable_pcie_master(struct e1000_hw *hw)$/;"	f
e1000e_down	netdev.c	/^void e1000e_down(struct e1000_adapter *adapter, bool reset)$/;"	f
e1000e_downshift_workaround	netdev.c	/^static void e1000e_downshift_workaround(struct work_struct *work)$/;"	f	file:
e1000e_driver_name	netdev.c	/^char e1000e_driver_name[] = "e1000e";$/;"	v
e1000e_driver_version	netdev.c	/^const char e1000e_driver_version[] = DRV_VERSION;$/;"	v
e1000e_dump	netdev.c	/^static void e1000e_dump(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_dump_ps_pages	netdev.c	/^static void e1000e_dump_ps_pages(struct e1000_adapter *adapter,$/;"	f	file:
e1000e_enable_mng_pass_thru	manage.c	/^bool e1000e_enable_mng_pass_thru(struct e1000_hw *hw)$/;"	f
e1000e_enable_receives	netdev.c	/^static void e1000e_enable_receives(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_enable_tx_pkt_filtering	manage.c	/^bool e1000e_enable_tx_pkt_filtering(struct e1000_hw *hw)$/;"	f
e1000e_ethtool_ops_ext	ethtool.c	/^static const struct ethtool_ops_ext e1000e_ethtool_ops_ext = {$/;"	v	typeref:struct:ethtool_ops_ext	file:
e1000e_flush_descriptors	netdev.c	/^static void e1000e_flush_descriptors(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_force_mac_fc	mac.c	/^s32 e1000e_force_mac_fc(struct e1000_hw *hw)$/;"	f
e1000e_free_rx_resources	netdev.c	/^void e1000e_free_rx_resources(struct e1000_ring *rx_ring)$/;"	f
e1000e_free_tx_resources	netdev.c	/^void e1000e_free_tx_resources(struct e1000_ring *tx_ring)$/;"	f
e1000e_get_auto_rd_done	mac.c	/^s32 e1000e_get_auto_rd_done(struct e1000_hw *hw)$/;"	f
e1000e_get_base_timinca	netdev.c	/^s32 e1000e_get_base_timinca(struct e1000_adapter *adapter, u32 *timinca)$/;"	f	file:
e1000e_get_bus_info_pcie	mac.c	/^s32 e1000e_get_bus_info_pcie(struct e1000_hw *hw)$/;"	f
e1000e_get_cable_length_igp_2	phy.c	/^s32 e1000e_get_cable_length_igp_2(struct e1000_hw *hw)$/;"	f
e1000e_get_cable_length_m88	phy.c	/^s32 e1000e_get_cable_length_m88(struct e1000_hw *hw)$/;"	f
e1000e_get_cfg_done_generic	phy.c	/^s32 e1000e_get_cfg_done_generic(struct e1000_hw __always_unused *hw)$/;"	f
e1000e_get_eee	ethtool.c	/^static int e1000e_get_eee(struct net_device *netdev, struct ethtool_eee *edata)$/;"	f	file:
e1000e_get_hw_control	netdev.c	/^void e1000e_get_hw_control(struct e1000_adapter *adapter)$/;"	f
e1000e_get_hw_semaphore	mac.c	/^s32 e1000e_get_hw_semaphore(struct e1000_hw *hw)$/;"	f
e1000e_get_laa_state_82571	82571.c	/^bool e1000e_get_laa_state_82571(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_id	phy.c	/^s32 e1000e_get_phy_id(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_info_igp	phy.c	/^s32 e1000e_get_phy_info_igp(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_info_m88	phy.c	/^s32 e1000e_get_phy_info_m88(struct e1000_hw *hw)$/;"	f
e1000e_get_phy_type_from_id	phy.c	/^enum e1000_phy_type e1000e_get_phy_type_from_id(u32 phy_id)$/;"	f
e1000e_get_speed_and_duplex_copper	mac.c	/^s32 e1000e_get_speed_and_duplex_copper(struct e1000_hw *hw, u16 *speed,$/;"	f
e1000e_get_speed_and_duplex_fiber_serdes	mac.c	/^s32 e1000e_get_speed_and_duplex_fiber_serdes(struct e1000_hw __always_unused$/;"	f
e1000e_get_sset_count	ethtool.c	/^static int e1000e_get_sset_count(struct net_device __always_unused *netdev,$/;"	f	file:
e1000e_get_stats64	netdev.c	/^struct rtnl_link_stats64 *e1000e_get_stats64(struct net_device *netdev,$/;"	f
e1000e_get_ts_info	ethtool.c	/^static int e1000e_get_ts_info(struct net_device *netdev,$/;"	f	file:
e1000e_gig_downshift_workaround_ich8lan	ich8lan.c	/^void e1000e_gig_downshift_workaround_ich8lan(struct e1000_hw *hw)$/;"	f
e1000e_has_link	netdev.c	/^static bool e1000e_has_link(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_hwtstamp_ioctl	netdev.c	/^static int e1000e_hwtstamp_ioctl(struct net_device *netdev, struct ifreq *ifr)$/;"	f	file:
e1000e_id_led_init_generic	mac.c	/^s32 e1000e_id_led_init_generic(struct e1000_hw *hw)$/;"	f
e1000e_igp3_phy_powerdown_workaround_ich8lan	ich8lan.c	/^void e1000e_igp3_phy_powerdown_workaround_ich8lan(struct e1000_hw *hw)$/;"	f
e1000e_init_rx_addrs	mac.c	/^void e1000e_init_rx_addrs(struct e1000_hw *hw, u16 rar_count)$/;"	f
e1000e_led_blink_task	ethtool.c	/^void e1000e_led_blink_task(struct work_struct *work)$/;"	f
e1000e_led_off_generic	mac.c	/^s32 e1000e_led_off_generic(struct e1000_hw *hw)$/;"	f
e1000e_led_on_generic	mac.c	/^s32 e1000e_led_on_generic(struct e1000_hw *hw)$/;"	f
e1000e_mng_write_dhcp_info	manage.c	/^s32 e1000e_mng_write_dhcp_info(struct e1000_hw *hw, u8 *buffer, u16 length)$/;"	f
e1000e_netdev_ops	netdev.c	/^static const struct net_device_ops e1000e_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
e1000e_phc_adjfreq	ptp.c	/^static int e1000e_phc_adjfreq(struct ptp_clock_info *ptp, s32 delta)$/;"	f	file:
e1000e_phc_adjtime	ptp.c	/^static int e1000e_phc_adjtime(struct ptp_clock_info *ptp, s64 delta)$/;"	f	file:
e1000e_phc_enable	ptp.c	/^static int e1000e_phc_enable(struct ptp_clock_info __always_unused *ptp,$/;"	f	file:
e1000e_phc_gettime	ptp.c	/^static int e1000e_phc_gettime(struct ptp_clock_info *ptp, struct timespec *ts)$/;"	f	file:
e1000e_phc_settime	ptp.c	/^static int e1000e_phc_settime(struct ptp_clock_info *ptp,$/;"	f	file:
e1000e_phy_force_speed_duplex_igp	phy.c	/^s32 e1000e_phy_force_speed_duplex_igp(struct e1000_hw *hw)$/;"	f
e1000e_phy_force_speed_duplex_m88	phy.c	/^s32 e1000e_phy_force_speed_duplex_m88(struct e1000_hw *hw)$/;"	f
e1000e_phy_force_speed_duplex_setup	phy.c	/^void e1000e_phy_force_speed_duplex_setup(struct e1000_hw *hw, u16 *phy_ctrl)$/;"	f
e1000e_phy_has_link_generic	phy.c	/^s32 e1000e_phy_has_link_generic(struct e1000_hw *hw, u32 iterations,$/;"	f
e1000e_phy_hw_reset_generic	phy.c	/^s32 e1000e_phy_hw_reset_generic(struct e1000_hw *hw)$/;"	f
e1000e_phy_init_script_igp3	phy.c	/^s32 e1000e_phy_init_script_igp3(struct e1000_hw *hw)$/;"	f
e1000e_phy_reset_dsp	phy.c	/^s32 e1000e_phy_reset_dsp(struct e1000_hw *hw)$/;"	f
e1000e_phy_sw_reset	phy.c	/^s32 e1000e_phy_sw_reset(struct e1000_hw *hw)$/;"	f
e1000e_pm_freeze	netdev.c	/^static int e1000e_pm_freeze(struct device *dev)$/;"	f	file:
e1000e_pm_resume	netdev.c	/^static int e1000e_pm_resume(struct device *dev)$/;"	f	file:
e1000e_pm_runtime_idle	netdev.c	/^static int e1000e_pm_runtime_idle(struct device *dev)$/;"	f	file:
e1000e_pm_runtime_resume	netdev.c	/^static int e1000e_pm_runtime_resume(struct device *dev)$/;"	f	file:
e1000e_pm_runtime_suspend	netdev.c	/^static int e1000e_pm_runtime_suspend(struct device *dev)$/;"	f	file:
e1000e_pm_suspend	netdev.c	/^static int e1000e_pm_suspend(struct device *dev)$/;"	f	file:
e1000e_pm_thaw	netdev.c	/^static int e1000e_pm_thaw(struct device *dev)$/;"	f	file:
e1000e_poll	netdev.c	/^static int e1000e_poll(struct napi_struct *napi, int weight)$/;"	f	file:
e1000e_poll_eerd_eewr_done	nvm.c	/^s32 e1000e_poll_eerd_eewr_done(struct e1000_hw *hw, int ee_reg)$/;"	f
e1000e_power_up_phy	netdev.c	/^void e1000e_power_up_phy(struct e1000_adapter *adapter)$/;"	f
e1000e_ptp_clock_info	ptp.c	/^static const struct ptp_clock_info e1000e_ptp_clock_info = {$/;"	v	typeref:struct:ptp_clock_info	file:
e1000e_ptp_init	e1000.h	581;"	d
e1000e_ptp_init	ptp.c	/^void e1000e_ptp_init(struct e1000_adapter *adapter)$/;"	f
e1000e_ptp_remove	e1000.h	582;"	d
e1000e_ptp_remove	ptp.c	/^void e1000e_ptp_remove(struct e1000_adapter *adapter)$/;"	f
e1000e_put_hw_semaphore	mac.c	/^void e1000e_put_hw_semaphore(struct e1000_hw *hw)$/;"	f
e1000e_rar_set_generic	mac.c	/^void e1000e_rar_set_generic(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f
e1000e_read_kmrn_reg	phy.c	/^s32 e1000e_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_kmrn_reg_locked	phy.c	/^s32 e1000e_read_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_mac_addr	e1000.h	/^static inline s32 e1000e_read_mac_addr(struct e1000_hw *hw)$/;"	f
e1000e_read_nvm_eerd	nvm.c	/^s32 e1000e_read_nvm_eerd(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000e_read_phy_reg_bm	phy.c	/^s32 e1000e_read_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_bm2	phy.c	/^s32 e1000e_read_phy_reg_bm2(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_igp	phy.c	/^s32 e1000e_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_igp_locked	phy.c	/^s32 e1000e_read_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_m88	phy.c	/^s32 e1000e_read_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_read_phy_reg_mdic	phy.c	/^s32 e1000e_read_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000e_reinit_locked	netdev.c	/^void e1000e_reinit_locked(struct e1000_adapter *adapter)$/;"	f
e1000e_release_hw_control	netdev.c	/^void e1000e_release_hw_control(struct e1000_adapter *adapter)$/;"	f
e1000e_release_nvm	nvm.c	/^void e1000e_release_nvm(struct e1000_hw *hw)$/;"	f
e1000e_reload_nvm_generic	nvm.c	/^void e1000e_reload_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000e_reset	netdev.c	/^void e1000e_reset(struct e1000_adapter *adapter)$/;"	f
e1000e_reset_adaptive	mac.c	/^void e1000e_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000e_reset_interrupt_capability	netdev.c	/^void e1000e_reset_interrupt_capability(struct e1000_adapter *adapter)$/;"	f
e1000e_rx_hwtstamp	netdev.c	/^static void e1000e_rx_hwtstamp(struct e1000_adapter *adapter, u32 status,$/;"	f	file:
e1000e_set_d3_lplu_state	phy.c	/^s32 e1000e_set_d3_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000e_set_eee	ethtool.c	/^static int e1000e_set_eee(struct net_device *netdev, struct ethtool_eee *edata)$/;"	f	file:
e1000e_set_ethtool_ops	ethtool.c	/^void e1000e_set_ethtool_ops(struct net_device *netdev)$/;"	f
e1000e_set_fc_watermarks	mac.c	/^s32 e1000e_set_fc_watermarks(struct e1000_hw *hw)$/;"	f
e1000e_set_flags	ethtool.c	/^static int e1000e_set_flags(struct net_device *netdev, u32 data)$/;"	f	file:
e1000e_set_interrupt_capability	netdev.c	/^void e1000e_set_interrupt_capability(struct e1000_adapter *adapter)$/;"	f
e1000e_set_kmrn_lock_loss_workaround_ich8lan	ich8lan.c	/^void e1000e_set_kmrn_lock_loss_workaround_ich8lan(struct e1000_hw *hw,$/;"	f
e1000e_set_laa_state_82571	82571.c	/^void e1000e_set_laa_state_82571(struct e1000_hw *hw, bool state)$/;"	f
e1000e_set_pcie_no_snoop	mac.c	/^void e1000e_set_pcie_no_snoop(struct e1000_hw *hw, u32 no_snoop)$/;"	f
e1000e_set_rx_mode	netdev.c	/^static void e1000e_set_rx_mode(struct net_device *netdev)$/;"	f	file:
e1000e_setup_copper_link	phy.c	/^s32 e1000e_setup_copper_link(struct e1000_hw *hw)$/;"	f
e1000e_setup_fiber_serdes_link	mac.c	/^s32 e1000e_setup_fiber_serdes_link(struct e1000_hw *hw)$/;"	f
e1000e_setup_led_generic	mac.c	/^s32 e1000e_setup_led_generic(struct e1000_hw *hw)$/;"	f
e1000e_setup_link_generic	mac.c	/^s32 e1000e_setup_link_generic(struct e1000_hw *hw)$/;"	f
e1000e_setup_rss_hash	netdev.c	/^static void e1000e_setup_rss_hash(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_setup_rx_resources	netdev.c	/^int e1000e_setup_rx_resources(struct e1000_ring *rx_ring)$/;"	f
e1000e_setup_tx_resources	netdev.c	/^int e1000e_setup_tx_resources(struct e1000_ring *tx_ring)$/;"	f
e1000e_systim_overflow_work	ptp.c	/^static void e1000e_systim_overflow_work(struct work_struct *work)$/;"	f	file:
e1000e_systim_to_hwtstamp	netdev.c	/^static void e1000e_systim_to_hwtstamp(struct e1000_adapter *adapter,$/;"	f	file:
e1000e_tx_hwtstamp_work	netdev.c	/^static void e1000e_tx_hwtstamp_work(struct work_struct *work)$/;"	f	file:
e1000e_up	netdev.c	/^int e1000e_up(struct e1000_adapter *adapter)$/;"	f
e1000e_update_adaptive	mac.c	/^void e1000e_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000e_update_mc_addr_list_generic	mac.c	/^void e1000e_update_mc_addr_list_generic(struct e1000_hw *hw,$/;"	f
e1000e_update_nvm_checksum	e1000.h	/^static inline s32 e1000e_update_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000e_update_nvm_checksum_generic	nvm.c	/^s32 e1000e_update_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000e_update_phy_stats	netdev.c	/^static void e1000e_update_phy_stats(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_update_phy_task	netdev.c	/^static void e1000e_update_phy_task(struct work_struct *work)$/;"	f	file:
e1000e_update_rdt_wa	netdev.c	/^static void e1000e_update_rdt_wa(struct e1000_ring *rx_ring, unsigned int i)$/;"	f	file:
e1000e_update_stats	netdev.c	/^static void e1000e_update_stats(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_update_tdt_wa	netdev.c	/^static void e1000e_update_tdt_wa(struct e1000_ring *tx_ring, unsigned int i)$/;"	f	file:
e1000e_valid_led_default	mac.c	/^s32 e1000e_valid_led_default(struct e1000_hw *hw, u16 *data)$/;"	f
e1000e_validate_mdi_setting_crossover_generic	mac.c	/^s32 e1000e_validate_mdi_setting_crossover_generic(struct e1000_hw$/;"	f
e1000e_validate_mdi_setting_generic	mac.c	/^s32 e1000e_validate_mdi_setting_generic(struct e1000_hw *hw)$/;"	f
e1000e_validate_nvm_checksum_generic	nvm.c	/^s32 e1000e_validate_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000e_vlan_filter_disable	netdev.c	/^static void e1000e_vlan_filter_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_vlan_filter_enable	netdev.c	/^static void e1000e_vlan_filter_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_vlan_strip_disable	netdev.c	/^static void e1000e_vlan_strip_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_vlan_strip_enable	netdev.c	/^static void e1000e_vlan_strip_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000e_write_itr	netdev.c	/^void e1000e_write_itr(struct e1000_adapter *adapter, u32 itr)$/;"	f
e1000e_write_kmrn_reg	phy.c	/^s32 e1000e_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_kmrn_reg_locked	phy.c	/^s32 e1000e_write_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_mc_addr_list	netdev.c	/^static int e1000e_write_mc_addr_list(struct net_device *netdev)$/;"	f	file:
e1000e_write_nvm_spi	nvm.c	/^s32 e1000e_write_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000e_write_phy_reg_bm	phy.c	/^s32 e1000e_write_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_bm2	phy.c	/^s32 e1000e_write_phy_reg_bm2(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_igp	phy.c	/^s32 e1000e_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_igp_locked	phy.c	/^s32 e1000e_write_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_m88	phy.c	/^s32 e1000e_write_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_phy_reg_mdic	phy.c	/^s32 e1000e_write_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000e_write_uc_addr_list	netdev.c	/^static int e1000e_write_uc_addr_list(struct net_device *netdev)$/;"	f	file:
e1e_flush	e1000.h	686;"	d
e1e_rphy	e1000.h	/^static inline s32 e1e_rphy(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1e_rphy_locked	e1000.h	/^static inline s32 e1e_rphy_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1e_wphy	e1000.h	/^static inline s32 e1e_wphy(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1e_wphy_locked	e1000.h	/^static inline s32 e1e_wphy_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e80003es2lan	hw.h	/^		struct e1000_dev_spec_80003es2lan e80003es2lan;$/;"	m	union:e1000_hw::__anon32	typeref:struct:e1000_hw::__anon32::e1000_dev_spec_80003es2lan
e82571	hw.h	/^		struct e1000_dev_spec_82571 e82571;$/;"	m	union:e1000_hw::__anon32	typeref:struct:e1000_hw::__anon32::e1000_dev_spec_82571
e82571_mac_ops	82571.c	/^static const struct e1000_mac_operations e82571_mac_ops = {$/;"	v	typeref:struct:e1000_mac_operations	file:
e82571_nvm_ops	82571.c	/^static const struct e1000_nvm_operations e82571_nvm_ops = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
e82_phy_ops_bm	82571.c	/^static const struct e1000_phy_operations e82_phy_ops_bm = {$/;"	v	typeref:struct:e1000_phy_operations	file:
e82_phy_ops_igp	82571.c	/^static const struct e1000_phy_operations e82_phy_ops_igp = {$/;"	v	typeref:struct:e1000_phy_operations	file:
e82_phy_ops_m88	82571.c	/^static const struct e1000_phy_operations e82_phy_ops_m88 = {$/;"	v	typeref:struct:e1000_phy_operations	file:
e_dbg	e1000.h	56;"	d
e_err	e1000.h	58;"	d
e_info	e1000.h	60;"	d
e_notice	e1000.h	64;"	d
e_warn	e1000.h	62;"	d
ecol	hw.h	/^	u64 ecol;$/;"	m	struct:e1000_hw_stats
eedump_len	kcompat.h	/^	u32 eedump_len;$/;"	m	struct:k_ethtool_drvinfo
eee_advert	e1000.h	/^	u16 eee_advert;$/;"	m	struct:e1000_adapter
eee_disable	hw.h	/^	bool eee_disable;$/;"	m	struct:e1000_dev_spec_ich8lan
eee_lp_ability	hw.h	/^	u16 eee_lp_ability;$/;"	m	struct:e1000_dev_spec_ich8lan
eeprom_vers	e1000.h	/^	u16 eeprom_vers;$/;"	m	struct:e1000_adapter
eeprom_wol	e1000.h	/^	u32 eeprom_wol;$/;"	m	struct:e1000_adapter
ei	e1000.h	/^	const struct e1000_info *ei;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_info
eiac_mask	e1000.h	/^	u32 eiac_mask;$/;"	m	struct:e1000_adapter
enable_option	param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon35	file:
entry	kcompat.h	/^	u16 entry;		\/* driver uses to specify entry, OS writes *\/$/;"	m	struct:msix_entry
er16flash	ich8lan.c	163;"	d	file:
er32	e1000.h	652;"	d
er32flash	ich8lan.c	164;"	d	file:
err	param.c	/^	const char *err;$/;"	m	struct:e1000_option	file:
es2_mac_ops	80003es2lan.c	/^static const struct e1000_mac_operations es2_mac_ops = {$/;"	v	typeref:struct:e1000_mac_operations	file:
es2_nvm_ops	80003es2lan.c	/^static const struct e1000_nvm_operations es2_nvm_ops = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
es2_phy_ops	80003es2lan.c	/^static const struct e1000_phy_operations es2_phy_ops = {$/;"	v	typeref:struct:e1000_phy_operations	file:
estatus	e1000.h	/^	u16 estatus;		\/* extended status register       *\/$/;"	m	struct:e1000_phy_regs
eth_hw_addr_random	kcompat.h	3503;"	d
eth_hw_addr_random	kcompat.h	3508;"	d
ether_crc_le	kcompat.h	1011;"	d
ether_crc_le	kcompat.h	1012;"	d
ethtool_adv_to_mmd_eee_adv_t	kcompat.h	/^static inline u16 ethtool_adv_to_mmd_eee_adv_t(u32 adv)$/;"	f
ethtool_cmd_speed	kcompat.h	2406;"	d
ethtool_cmd_speed_set	kcompat.h	2398;"	d
ethtool_coalesce	kcompat.h	474;"	d
ethtool_drvinfo	kcompat.h	352;"	d
ethtool_drvinfo	kcompat.h	353;"	d
ethtool_eeprom	kcompat.h	/^struct ethtool_eeprom {$/;"	s
ethtool_get_coalesce	kcompat_ethtool.c	/^static int ethtool_get_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_drvinfo	kcompat_ethtool.c	/^static int ethtool_get_drvinfo(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_eeprom	kcompat_ethtool.c	/^static int ethtool_get_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_link	kcompat_ethtool.c	/^static int ethtool_get_link(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_msglevel	kcompat_ethtool.c	/^static int ethtool_get_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_pauseparam	kcompat_ethtool.c	/^static int ethtool_get_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_regs	kcompat_ethtool.c	/^static int ethtool_get_regs(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_ringparam	kcompat_ethtool.c	/^static int ethtool_get_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_rx_csum	kcompat_ethtool.c	/^static int ethtool_get_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_settings	kcompat_ethtool.c	/^static int ethtool_get_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_sg	kcompat_ethtool.c	/^static int ethtool_get_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_stats	kcompat_ethtool.c	/^static int ethtool_get_stats(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_strings	kcompat_ethtool.c	/^static int ethtool_get_strings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_tso	kcompat_ethtool.c	/^static int ethtool_get_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_tx_csum	kcompat_ethtool.c	/^static int ethtool_get_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_wol	kcompat_ethtool.c	/^static int ethtool_get_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_gstrings	kcompat.h	/^struct ethtool_gstrings {$/;"	s
ethtool_ioctl	kcompat_ethtool.c	/^int ethtool_ioctl(struct ifreq *ifr)$/;"	f
ethtool_nway_reset	kcompat_ethtool.c	/^static int ethtool_nway_reset(struct net_device *dev)$/;"	f	file:
ethtool_op_get_flags	kcompat.h	3067;"	d
ethtool_op_get_link	kcompat_ethtool.c	118;"	d	file:
ethtool_op_get_link	kcompat_ethtool.c	119;"	d	file:
ethtool_op_get_sg	kcompat_ethtool.c	156;"	d	file:
ethtool_op_get_sg	kcompat_ethtool.c	157;"	d	file:
ethtool_op_get_tso	kcompat_ethtool.c	181;"	d	file:
ethtool_op_get_tso	kcompat_ethtool.c	182;"	d	file:
ethtool_op_get_tx_csum	kcompat_ethtool.c	125;"	d	file:
ethtool_op_get_tx_csum	kcompat_ethtool.c	126;"	d	file:
ethtool_op_set_flags	kcompat.h	3065;"	d
ethtool_op_set_sg	kcompat_ethtool.c	167;"	d	file:
ethtool_op_set_sg	kcompat_ethtool.c	168;"	d	file:
ethtool_op_set_tso	kcompat_ethtool.c	192;"	d	file:
ethtool_op_set_tso	kcompat_ethtool.c	193;"	d	file:
ethtool_op_set_tx_csum	kcompat_ethtool.c	136;"	d	file:
ethtool_op_set_tx_csum	kcompat_ethtool.c	137;"	d	file:
ethtool_ops	kcompat_ethtool.c	/^} *ethtool_ops = NULL;$/;"	v	typeref:struct:_kc_ethtool_ops
ethtool_ops	kcompat_ethtool.c	66;"	d	file:
ethtool_ops	kcompat_ethtool.c	67;"	d	file:
ethtool_pauseparam	kcompat.h	606;"	d
ethtool_phys_id	kcompat_ethtool.c	/^static int ethtool_phys_id(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_regs	kcompat.h	443;"	d
ethtool_ringparam	kcompat.h	577;"	d
ethtool_rx_flow_spec	kcompat.h	3316;"	d
ethtool_self_test	kcompat_ethtool.c	/^static int ethtool_self_test(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_coalesce	kcompat_ethtool.c	/^static int ethtool_set_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_eeprom	kcompat_ethtool.c	/^static int ethtool_set_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_msglevel	kcompat_ethtool.c	/^static int ethtool_set_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_pauseparam	kcompat_ethtool.c	/^static int ethtool_set_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_ringparam	kcompat_ethtool.c	/^static int ethtool_set_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_rx_csum	kcompat_ethtool.c	/^static int ethtool_set_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_settings	kcompat_ethtool.c	/^static int ethtool_set_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_sg	kcompat_ethtool.c	/^static int ethtool_set_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tso	kcompat_ethtool.c	/^static int ethtool_set_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tx_csum	kcompat_ethtool.c	/^static int ethtool_set_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_wol	kcompat_ethtool.c	/^static int ethtool_set_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_stats	kcompat.h	/^struct ethtool_stats {$/;"	s
ethtool_stringset	kcompat.h	/^enum ethtool_stringset {$/;"	g
ethtool_test	kcompat.h	/^struct ethtool_test {$/;"	s
ethtool_test_flags	kcompat.h	/^enum ethtool_test_flags {$/;"	g
ethtool_value	kcompat.h	/^struct ethtool_value {$/;"	s
ethtool_wolinfo	kcompat.h	/^struct ethtool_wolinfo {$/;"	s
ew16flash	ich8lan.c	165;"	d	file:
ew32	e1000.h	684;"	d
ew32flash	ich8lan.c	166;"	d	file:
expansion	e1000.h	/^	u16 expansion;		\/* auto-negotiation expansion reg *\/$/;"	m	struct:e1000_phy_regs
false	kcompat.h	2025;"	d
fc	hw.h	/^	struct e1000_fc_info fc;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_fc_info
fc_autoneg	e1000.h	/^	bool fc_autoneg;$/;"	m	struct:e1000_adapter
fcruc	hw.h	/^	u64 fcruc;$/;"	m	struct:e1000_hw_stats
fields	hw.h	/^		} fields;$/;"	m	union:e1000_context_desc::__anon26	typeref:struct:e1000_context_desc::__anon26::__anon27
fields	hw.h	/^		} fields;$/;"	m	union:e1000_data_desc::__anon30	typeref:struct:e1000_data_desc::__anon30::__anon31
fields	hw.h	/^		} fields;$/;"	m	union:e1000_tx_desc::__anon20	typeref:struct:e1000_tx_desc::__anon20::__anon21
find_first_bit	kcompat.h	1350;"	d
find_next_bit	kcompat.c	/^unsigned long find_next_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_next_bit	kcompat.h	1345;"	d
find_next_bit	kcompat.h	1346;"	d
first	kcompat.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
first_online_node	kcompat.h	1856;"	d
flags	e1000.h	/^	unsigned int		flags;$/;"	m	struct:e1000_info
flags	e1000.h	/^	unsigned int flags;$/;"	m	struct:e1000_adapter
flags	hw.h	/^		} flags;$/;"	m	union:e1000_data_desc::__anon28	typeref:struct:e1000_data_desc::__anon28::__anon29
flags	hw.h	/^		} flags;$/;"	m	union:e1000_tx_desc::__anon18	typeref:struct:e1000_tx_desc::__anon18::__anon19
flags	kcompat.h	/^	u32 flags;$/;"	m	struct:ethtool_test
flags2	e1000.h	/^	unsigned int		flags2;$/;"	m	struct:e1000_info
flags2	e1000.h	/^	unsigned int flags2;$/;"	m	struct:e1000_adapter
flash_address	hw.h	/^	void __iomem *flash_address;$/;"	m	struct:e1000_hw
flash_bank_size	hw.h	/^	u32 flash_bank_size;$/;"	m	struct:e1000_nvm_info
flash_base_addr	hw.h	/^	u32 flash_base_addr;$/;"	m	struct:e1000_nvm_info
flcdone	ich8lan.c	/^		u16 flcdone:1;	\/* bit 0 Flash Cycle Done *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcerr	ich8lan.c	/^		u16 flcerr:1;	\/* bit 1 Flash Cycle Error *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcgo	ich8lan.c	/^		u16 flcgo:1;	\/* 0 Flash Cycle Go *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
flcinprog	ich8lan.c	/^		u16 flcinprog:1;	\/* bit 5 flash cycle in Progress *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcycle	ich8lan.c	/^		u16 flcycle:2;	\/* 2:1 Flash Cycle *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fldbcount	ich8lan.c	/^		u16 fldbcount:2;	\/* 9:8 Flash Data Byte Count *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fldesvalid	ich8lan.c	/^		u16 fldesvalid:1;	\/* bit 14 Flash Descriptor Valid *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flockdn	ich8lan.c	/^		u16 flockdn:1;	\/* bit 15 Flash Config Lock-Down *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flockdn	ich8lan.c	/^		u16 flockdn:6;	\/* 15:10 Reserved *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
flow_type	kcompat.h	/^	__u32 flow_type;$/;"	m	struct:_kc_ethtool_rx_flow_spec
flush_scheduled_work	kcompat.h	1293;"	d
for_each_set_bit	kcompat.h	2970;"	d
force_media	kcompat_ethtool.c	/^	unsigned int force_media:1;	\/* is autoneg. disabled? *\/$/;"	m	struct:_kc_mii_if_info	file:
force_speed_duplex	hw.h	/^	s32(*force_speed_duplex) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
forced_speed_duplex	hw.h	/^	u8 forced_speed_duplex;$/;"	m	struct:e1000_mac_info
free_netdev	kcompat.h	168;"	d
free_netdev	kcompat.h	2008;"	d
free_netdev	kcompat.h	2010;"	d
full_duplex	kcompat_ethtool.c	/^	unsigned int full_duplex:1;	\/* is full duplex? *\/$/;"	m	struct:_kc_mii_if_info	file:
func	hw.h	/^	u16 func;$/;"	m	struct:e1000_bus_info
fw_version	kcompat.h	/^	char fw_version[32];$/;"	m	struct:k_ethtool_drvinfo
generic_mii_ioctl	kcompat_ethtool.c	906;"	d	file:
generic_mii_ioctl	kcompat_ethtool.c	907;"	d	file:
get_bus_info	hw.h	/^	 s32(*get_bus_info) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
get_cable_length	hw.h	/^	s32(*get_cable_length) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_cfg_done	hw.h	/^	s32(*get_cfg_done) (struct e1000_hw *hw);$/;"	m	struct:e1000_phy_operations
get_coalesce	kcompat_ethtool.c	/^	int (*get_coalesce) (struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
get_cpu	kcompat.h	1305;"	d
get_cpu	kcompat.h	1306;"	d
get_drvinfo	kcompat_ethtool.c	/^	void (*get_drvinfo) (struct net_device *, struct ethtool_drvinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom	kcompat_ethtool.c	/^	int (*get_eeprom) (struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom_len	kcompat_ethtool.c	/^	int (*get_eeprom_len) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ethtool_stats	kcompat_ethtool.c	/^	void (*get_ethtool_stats) (struct net_device *, struct ethtool_stats *,$/;"	m	struct:_kc_ethtool_ops	file:
get_info	hw.h	/^	s32(*get_info) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_link	kcompat_ethtool.c	/^	u32 (*get_link) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_link_status	hw.h	/^	bool get_link_status;$/;"	m	struct:e1000_mac_info
get_link_up_info	hw.h	/^	 s32(*get_link_up_info) (struct e1000_hw *, u16 *, u16 *);$/;"	m	struct:e1000_mac_operations
get_msglevel	kcompat_ethtool.c	/^	u32 (*get_msglevel) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_pauseparam	kcompat_ethtool.c	/^	void (*get_pauseparam) (struct net_device *,$/;"	m	struct:_kc_ethtool_ops	file:
get_regs	kcompat_ethtool.c	/^	void (*get_regs) (struct net_device *, struct ethtool_regs *, void *);$/;"	m	struct:_kc_ethtool_ops	file:
get_regs_len	kcompat_ethtool.c	/^	int (*get_regs_len) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ringparam	kcompat_ethtool.c	/^	void (*get_ringparam) (struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
get_rx_csum	kcompat_ethtool.c	/^	u32 (*get_rx_csum) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_settings	kcompat_ethtool.c	/^	int (*get_settings) (struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
get_sg	kcompat_ethtool.c	/^	u32 (*get_sg) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_stats_count	kcompat_ethtool.c	/^	int (*get_stats_count) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_strings	kcompat_ethtool.c	/^	void (*get_strings) (struct net_device *, u32 stringset, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tso	kcompat_ethtool.c	/^	u32 (*get_tso) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tx_csum	kcompat_ethtool.c	/^	u32 (*get_tx_csum) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_variants	e1000.h	/^	s32			(*get_variants)(struct e1000_adapter *);$/;"	m	struct:e1000_info
get_wol	kcompat_ethtool.c	/^	void (*get_wol) (struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
gfp_t	kcompat.h	/^typedef unsigned gfp_t;$/;"	t
gfp_t	kcompat.h	1773;"	d
gmrag	ich8lan.c	/^		u32 gmrag:8;	\/* 23:16 GbE Master Read Access Grant *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gmwag	ich8lan.c	/^		u32 gmwag:8;	\/* 31:24 GbE Master Write Access Grant *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gorc	e1000.h	/^	u32 gorc;$/;"	m	struct:e1000_adapter
gorc	hw.h	/^	u64 gorc;$/;"	m	struct:e1000_hw_stats
gorc_old	e1000.h	/^	u64 gorc_old;$/;"	m	struct:e1000_adapter
gotc	e1000.h	/^	u32 gotc;$/;"	m	struct:e1000_adapter
gotc	hw.h	/^	u64 gotc;$/;"	m	struct:e1000_hw_stats
gotc_old	e1000.h	/^	u64 gotc_old;$/;"	m	struct:e1000_adapter
gprc	hw.h	/^	u64 gprc;$/;"	m	struct:e1000_hw_stats
gptc	hw.h	/^	u64 gptc;$/;"	m	struct:e1000_hw_stats
grra	ich8lan.c	/^		u32 grra:8;	\/* 0:7 GbE region Read Access *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
grwa	ich8lan.c	/^		u32 grwa:8;	\/* 8:15 GbE region Write Access *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gso_segs	kcompat.h	183;"	d
gso_size	kcompat.h	182;"	d
h_dest	kcompat.h	/^	unsigned char h_dest[ETH_ALEN];$/;"	m	struct:_kc_vlan_ethhdr
h_dest	kcompat.h	/^	unsigned char h_dest[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_ext	kcompat.h	/^	struct _kc_ethtool_flow_ext h_ext;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:struct:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_ext
h_source	kcompat.h	/^	unsigned char h_source[ETH_ALEN];$/;"	m	struct:_kc_vlan_ethhdr
h_source	kcompat.h	/^	unsigned char h_source[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_u	kcompat.h	/^	union _kc_ethtool_flow_union h_u;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:union:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_union
h_vlan_TCI	kcompat.h	/^	__be16 h_vlan_TCI;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_TCI	kcompat.h	/^	__be16 h_vlan_TCI;$/;"	m	struct:_kc_vlan_hdr
h_vlan_TCI	kcompat.h	/^	unsigned short h_vlan_TCI;$/;"	m	struct:vlan_ethhdr
h_vlan_encapsulated_proto	kcompat.h	/^	__be16 h_vlan_encapsulated_proto;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_encapsulated_proto	kcompat.h	/^	__be16 h_vlan_encapsulated_proto;$/;"	m	struct:_kc_vlan_hdr
h_vlan_encapsulated_proto	kcompat.h	/^	unsigned short h_vlan_encapsulated_proto;$/;"	m	struct:vlan_ethhdr
h_vlan_proto	kcompat.h	/^	__be16 h_vlan_proto;$/;"	m	struct:_kc_vlan_ethhdr
h_vlan_proto	kcompat.h	/^	unsigned short h_vlan_proto;$/;"	m	struct:vlan_ethhdr
has_fwsm	hw.h	/^	bool has_fwsm;$/;"	m	struct:e1000_mac_info
hdata	kcompat.h	/^	__u8 hdata[60];$/;"	m	union:_kc_ethtool_flow_union
hdr_len	hw.h	/^			u8 hdr_len;	\/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon26::__anon27
head	e1000.h	/^	void __iomem *head;$/;"	m	struct:e1000_ring
header_status	hw.h	/^			__le16 header_status;$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon17
hex_asc	kcompat.h	2182;"	d
hi_dword	hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon7	typeref:union:e1000_rx_desc_extended::__anon6::__anon7::__anon8
hi_dword	hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon13	typeref:union:e1000_rx_desc_packet_split::__anon12::__anon13::__anon14
high_water	hw.h	/^	u32 high_water;		\/* Flow control high-water mark *\/$/;"	m	struct:e1000_fc_info
hlist_add_head	kcompat.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	kcompat.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_empty	kcompat.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	kcompat.h	3760;"	d
hlist_entry	kcompat.h	3761;"	d
hlist_entry_safe	kcompat.h	3763;"	d
hlist_entry_safe	kcompat.h	3764;"	d
hlist_for_each_entry	kcompat.h	3767;"	d
hlist_for_each_entry	kcompat.h	3768;"	d
hlist_for_each_entry_safe	kcompat.h	3773;"	d
hlist_for_each_entry_safe	kcompat.h	3774;"	d
hlist_head	kcompat.h	/^struct hlist_head {$/;"	s
hlist_node	kcompat.h	/^struct hlist_node {$/;"	s
hsf_ctrl	ich8lan.c	/^	} hsf_ctrl;$/;"	m	union:ich8_hws_flash_ctrl	typeref:struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
hsf_flregacc	ich8lan.c	/^	} hsf_flregacc;$/;"	m	union:ich8_hws_flash_regacc	typeref:struct:ich8_hws_flash_regacc::ich8_flracc	file:
hsf_status	ich8lan.c	/^	} hsf_status;$/;"	m	union:ich8_hws_flash_status	typeref:struct:ich8_hws_flash_status::ich8_hsfsts	file:
hw	e1000.h	/^	struct e1000_hw hw;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw
hw_addr	hw.h	/^	void __iomem *hw_addr;$/;"	m	struct:e1000_hw
hw_csum_err	e1000.h	/^	u64 hw_csum_err;$/;"	m	struct:e1000_adapter
hw_csum_good	e1000.h	/^	u64 hw_csum_good;$/;"	m	struct:e1000_adapter
hwtstamp_config	e1000.h	/^	struct hwtstamp_config hwtstamp_config;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::hwtstamp_config
i	param.c	/^				int i;$/;"	m	struct:e1000_option::__anon36::__anon38::e1000_opt_list	file:
i_private	kcompat.h	1945;"	d
iac	hw.h	/^	u64 iac;$/;"	m	struct:e1000_hw_stats
ich8_flracc	ich8lan.c	/^	struct ich8_flracc {$/;"	s	union:ich8_hws_flash_regacc	file:
ich8_hsflctl	ich8lan.c	/^	struct ich8_hsflctl {$/;"	s	union:ich8_hws_flash_ctrl	file:
ich8_hsfsts	ich8lan.c	/^	struct ich8_hsfsts {$/;"	s	union:ich8_hws_flash_status	file:
ich8_hws_flash_ctrl	ich8lan.c	/^union ich8_hws_flash_ctrl {$/;"	u	file:
ich8_hws_flash_regacc	ich8lan.c	/^union ich8_hws_flash_regacc {$/;"	u	file:
ich8_hws_flash_status	ich8lan.c	/^union ich8_hws_flash_status {$/;"	u	file:
ich8_mac_ops	ich8lan.c	/^static const struct e1000_mac_operations ich8_mac_ops = {$/;"	v	typeref:struct:e1000_mac_operations	file:
ich8_nvm_ops	ich8lan.c	/^static const struct e1000_nvm_operations ich8_nvm_ops = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
ich8_phy_ops	ich8lan.c	/^static const struct e1000_phy_operations ich8_phy_ops = {$/;"	v	typeref:struct:e1000_phy_operations	file:
ich8lan	hw.h	/^		struct e1000_dev_spec_ich8lan ich8lan;$/;"	m	union:e1000_hw::__anon32	typeref:struct:e1000_hw::__anon32::e1000_dev_spec_ich8lan
icrxatc	hw.h	/^	u64 icrxatc;$/;"	m	struct:e1000_hw_stats
icrxdmtc	hw.h	/^	u64 icrxdmtc;$/;"	m	struct:e1000_hw_stats
icrxoc	hw.h	/^	u64 icrxoc;$/;"	m	struct:e1000_hw_stats
icrxptc	hw.h	/^	u64 icrxptc;$/;"	m	struct:e1000_hw_stats
ictxatc	hw.h	/^	u64 ictxatc;$/;"	m	struct:e1000_hw_stats
ictxptc	hw.h	/^	u64 ictxptc;$/;"	m	struct:e1000_hw_stats
ictxqec	hw.h	/^	u64 ictxqec;$/;"	m	struct:e1000_hw_stats
ictxqmtc	hw.h	/^	u64 ictxqmtc;$/;"	m	struct:e1000_hw_stats
id	hw.h	/^	u32 id;$/;"	m	struct:e1000_phy_info
id_led_init	hw.h	/^	s32(*id_led_init) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
idle_errors	hw.h	/^	u32 idle_errors;$/;"	m	struct:e1000_phy_stats
if_mii	kcompat.h	1470;"	d
if_mii	kcompat.h	1471;"	d
ifs_max_val	hw.h	/^	u16 ifs_max_val;$/;"	m	struct:e1000_mac_info
ifs_min_val	hw.h	/^	u16 ifs_min_val;$/;"	m	struct:e1000_mac_info
ifs_ratio	hw.h	/^	u16 ifs_ratio;$/;"	m	struct:e1000_mac_info
ifs_step_size	hw.h	/^	u16 ifs_step_size;$/;"	m	struct:e1000_mac_info
ims_val	e1000.h	/^	u32 ims_val;$/;"	m	struct:e1000_ring
in_ifs_mode	hw.h	/^	bool in_ifs_mode;$/;"	m	struct:e1000_mac_info
init_hw	hw.h	/^	 s32(*init_hw) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
int_mode	e1000.h	/^	int int_mode;$/;"	m	struct:e1000_adapter
ip_config	hw.h	/^		__le32 ip_config;$/;"	m	union:e1000_context_desc::__anon22
ip_fields	hw.h	/^		} ip_fields;$/;"	m	union:e1000_context_desc::__anon22	typeref:struct:e1000_context_desc::__anon22::__anon23
ip_hdr	kcompat.h	2131;"	d
ip_id	hw.h	/^					__le16 ip_id;	\/* IP id *\/$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon7::__anon8::__anon9
ip_id	hw.h	/^					__le16 ip_id;	\/* IP id *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon13::__anon14::__anon15
ipcse	hw.h	/^			__le16 ipcse;	\/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon22::__anon23
ipcso	hw.h	/^			u8 ipcso;	\/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon22::__anon23
ipcss	hw.h	/^			u8 ipcss;	\/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon22::__anon23
ipv6_hdr	kcompat.h	2130;"	d
irq_handler_t	kcompat.h	/^typedef irqreturn_t(*irq_handler_t) (int, void *, struct pt_regs *);$/;"	t
irq_handler_t	kcompat.h	1989;"	d
irqreturn_t	kcompat.h	1867;"	d
is_link_local_ether_addr	kcompat.h	/^static inline bool is_link_local_ether_addr(const u8 *addr)$/;"	f
is_mdix	hw.h	/^	bool is_mdix;$/;"	m	struct:e1000_phy_info
is_multicast_ether_addr	kcompat.h	1732;"	d
is_valid_ether_addr	kcompat.h	755;"	d
is_zero_ether_addr	kcompat.h	1725;"	d
itr	e1000.h	/^	u32 itr;$/;"	m	struct:e1000_adapter
itr_register	e1000.h	/^	void __iomem *itr_register;$/;"	m	struct:e1000_ring
itr_setting	e1000.h	/^	u32 itr_setting;$/;"	m	struct:e1000_adapter
itr_val	e1000.h	/^	u32 itr_val;$/;"	m	struct:e1000_ring
ixgbe_get_netdev_tc_txq	kcompat.h	3441;"	d
ixgbe_get_netdev_tc_txq	kcompat.h	3442;"	d
k_ethtool_drvinfo	kcompat.h	/^struct k_ethtool_drvinfo {$/;"	s
kcalloc	kcompat.h	1512;"	d
kmap_atomic	kcompat.h	3486;"	d
kmap_atomic	kcompat.h	3487;"	d
kmemdup	kcompat.h	2021;"	d
kmrn_lock_loss_workaround_enabled	hw.h	/^	bool kmrn_lock_loss_workaround_enabled;$/;"	m	struct:e1000_dev_spec_ich8lan
kstrdup	kcompat.h	1743;"	d
kunmap_atomic	kcompat.h	3494;"	d
kunmap_atomic	kcompat.h	3495;"	d
kzalloc	kcompat.h	1752;"	d
kzalloc_node	kcompat.h	2377;"	d
kzalloc_node	kcompat.h	2378;"	d
l	param.c	/^		} l;$/;"	m	union:e1000_option::__anon36	typeref:struct:e1000_option::__anon36::__anon38	file:
laa_is_present	hw.h	/^	bool laa_is_present;$/;"	m	struct:e1000_dev_spec_82571
latecol	hw.h	/^	u64 latecol;$/;"	m	struct:e1000_hw_stats
latency_invalid	e1000.h	/^	latency_invalid = 255$/;"	e	enum:latency_range
latency_range	e1000.h	/^enum latency_range {$/;"	g
led_blink_task	e1000.h	/^	struct work_struct led_blink_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
led_off	hw.h	/^	 s32(*led_off) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
led_on	hw.h	/^	 s32(*led_on) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
led_status	e1000.h	/^	unsigned long led_status;$/;"	m	struct:e1000_adapter
ledctl_default	hw.h	/^	u32 ledctl_default;$/;"	m	struct:e1000_mac_info
ledctl_mode1	hw.h	/^	u32 ledctl_mode1;$/;"	m	struct:e1000_mac_info
ledctl_mode2	hw.h	/^	u32 ledctl_mode2;$/;"	m	struct:e1000_mac_info
len	kcompat.h	/^	u32 len;		\/* bytes *\/$/;"	m	struct:_kc_ethtool_regs
len	kcompat.h	/^	u32 len;		\/* number of strings in the string set *\/$/;"	m	struct:ethtool_gstrings
len	kcompat.h	/^	u32 len;$/;"	m	struct:ethtool_eeprom
len	kcompat.h	/^	u32 len;$/;"	m	struct:ethtool_test
length	e1000.h	/^			u16 length;$/;"	m	struct:e1000_buffer::__anon1::__anon2
length	hw.h	/^			__le16 length;	\/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon28::__anon29
length	hw.h	/^			__le16 length;	\/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon18::__anon19
length	hw.h	/^			__le16 length;$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon10
length	hw.h	/^			__le16 length[PS_PAGE_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon17
length0	hw.h	/^			__le16 length0;	\/* length of buffer 0 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon16
likely	kcompat.h	223;"	d
link_duplex	e1000.h	/^	u16 link_duplex;$/;"	m	struct:e1000_adapter
link_speed	e1000.h	/^	u16 link_speed;$/;"	m	struct:e1000_adapter
list_for_each_safe	kcompat.h	876;"	d
list_option	param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon35	file:
local_rx	hw.h	/^	enum e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
location	kcompat.h	/^	__u32 location;$/;"	m	struct:_kc_ethtool_rx_flow_spec
low_latency	e1000.h	/^	low_latency = 1,$/;"	e	enum:latency_range
low_water	hw.h	/^	u32 low_water;		\/* Flow control low-water mark *\/$/;"	m	struct:e1000_fc_info
lower	hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_extended::__anon6	typeref:struct:e1000_rx_desc_extended::__anon6::__anon7
lower	hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_packet_split::__anon12	typeref:struct:e1000_rx_desc_packet_split::__anon12::__anon13
lower	hw.h	/^	} lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon28
lower	hw.h	/^	} lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon18
lower_setup	hw.h	/^	} lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon22
lowest_latency	e1000.h	/^	lowest_latency = 0,$/;"	e	enum:latency_range
lpa	e1000.h	/^	u16 lpa;		\/* link partner ability register  *\/$/;"	m	struct:e1000_phy_regs
m_ext	kcompat.h	/^	struct _kc_ethtool_flow_ext m_ext;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:struct:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_ext
m_u	kcompat.h	/^	union _kc_ethtool_flow_union m_u;$/;"	m	struct:_kc_ethtool_rx_flow_spec	typeref:union:_kc_ethtool_rx_flow_spec::_kc_ethtool_flow_union
mac	e1000.h	/^	enum e1000_mac_type	mac;$/;"	m	struct:e1000_info	typeref:enum:e1000_info::e1000_mac_type
mac	hw.h	/^	struct e1000_mac_info mac;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mac_info
mac_ops	e1000.h	/^	const struct e1000_mac_operations *mac_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_info::e1000_mac_operations
magic	kcompat.h	/^	u32 magic;$/;"	m	struct:ethtool_eeprom
mapped_as_page	e1000.h	/^			u16 mapped_as_page;$/;"	m	struct:e1000_buffer::__anon1::__anon2
max	kcompat.h	858;"	d
max	kcompat.h	859;"	d
max	param.c	/^			int max;$/;"	m	struct:e1000_option::__anon36::__anon37	file:
max_cable_length	hw.h	/^	u16 max_cable_length;$/;"	m	struct:e1000_phy_info
max_frame_size	e1000.h	/^	u32 max_frame_size;$/;"	m	struct:e1000_adapter
max_hw_frame_size	e1000.h	/^	u32			max_hw_frame_size;$/;"	m	struct:e1000_info
max_hw_frame_size	e1000.h	/^	u32 max_hw_frame_size;$/;"	m	struct:e1000_adapter
max_t	kcompat.h	870;"	d
mc_filter_type	hw.h	/^	u32 mc_filter_type;$/;"	m	struct:e1000_mac_info
mcc	hw.h	/^	u64 mcc;$/;"	m	struct:e1000_hw_stats
mdic_wa_enable	hw.h	/^	bool mdic_wa_enable;$/;"	m	struct:e1000_dev_spec_80003es2lan
mdio_read	kcompat_ethtool.c	/^	int (*mdio_read) (struct net_device * dev, int phy_id, int location);$/;"	m	struct:_kc_mii_if_info	file:
mdio_write	kcompat_ethtool.c	/^	void (*mdio_write) (struct net_device * dev, int phy_id, int location,$/;"	m	struct:_kc_mii_if_info	file:
mdix	hw.h	/^	u8 mdix;$/;"	m	struct:e1000_phy_info
media_type	hw.h	/^	enum e1000_media_type media_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_media_type
mgpdc	hw.h	/^	u64 mgpdc;$/;"	m	struct:e1000_hw_stats
mgprc	hw.h	/^	u64 mgprc;$/;"	m	struct:e1000_hw_stats
mgptc	hw.h	/^	u64 mgptc;$/;"	m	struct:e1000_hw_stats
middle	hw.h	/^		} middle;$/;"	m	struct:e1000_rx_desc_packet_split::__anon12	typeref:struct:e1000_rx_desc_packet_split::__anon12::__anon16
might_sleep	kcompat.h	1273;"	d
mii_check_link	kcompat_ethtool.c	896;"	d	file:
mii_check_link	kcompat_ethtool.c	897;"	d	file:
mii_ethtool_gset	kcompat_ethtool.c	892;"	d	file:
mii_ethtool_gset	kcompat_ethtool.c	893;"	d	file:
mii_ethtool_sset	kcompat_ethtool.c	894;"	d	file:
mii_ethtool_sset	kcompat_ethtool.c	895;"	d	file:
mii_if_info	kcompat_ethtool.c	869;"	d	file:
mii_link_ok	kcompat_ethtool.c	888;"	d	file:
mii_link_ok	kcompat_ethtool.c	889;"	d	file:
mii_nway_restart	kcompat_ethtool.c	890;"	d	file:
mii_nway_restart	kcompat_ethtool.c	891;"	d	file:
min	kcompat.h	851;"	d
min	kcompat.h	852;"	d
min	param.c	/^			int min;$/;"	m	struct:e1000_option::__anon36::__anon37	file:
min_cable_length	hw.h	/^	u16 min_cable_length;$/;"	m	struct:e1000_phy_info
min_frame_size	e1000.h	/^	u32 min_frame_size;$/;"	m	struct:e1000_adapter
min_t	kcompat.h	865;"	d
mmd_eee_adv_to_ethtool_adv_t	kcompat.h	/^static inline u32 mmd_eee_adv_to_ethtool_adv_t(u16 eee_adv)$/;"	f
mmd_eee_cap_to_ethtool_sup_t	kcompat.h	/^static inline u32 mmd_eee_cap_to_ethtool_sup_t(u16 eee_cap)$/;"	f
mmiowb	kcompat.h	157;"	d
mmiowb	kcompat.h	159;"	d
mng_cookie	hw.h	/^	struct e1000_host_mng_dhcp_cookie mng_cookie;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_host_mng_dhcp_cookie
mng_vlan_id	e1000.h	/^	u16 mng_vlan_id;$/;"	m	struct:e1000_adapter
modified	hw.h	/^	bool modified;$/;"	m	struct:e1000_shadow_ram
module_param	kcompat.h	133;"	d
module_param_array_named	kcompat.h	1625;"	d
module_param_array_named	kcompat.h	1626;"	d
mpc	hw.h	/^	u64 mpc;$/;"	m	struct:e1000_hw_stats
mprc	hw.h	/^	u64 mprc;$/;"	m	struct:e1000_hw_stats
mptc	hw.h	/^	u64 mptc;$/;"	m	struct:e1000_hw_stats
mrq	hw.h	/^			__le32 mrq;	\/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon7
mrq	hw.h	/^			__le32 mrq;	\/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon13
ms_type	hw.h	/^	enum e1000_ms_type ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
msg_enable	e1000.h	/^	u32 msg_enable;$/;"	m	struct:e1000_adapter
msi_remove_pci_irq_vectors	kcompat.h	100;"	d
msix_entries	e1000.h	/^	struct msix_entry *msix_entries;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::msix_entry
msix_entry	kcompat.h	/^struct msix_entry {$/;"	s
msleep	kcompat.h	1500;"	d
msleep_interruptible	kcompat.h	1540;"	d
mss	hw.h	/^			__le16 mss;	\/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon26::__anon27
mta_reg_count	hw.h	/^	u16 mta_reg_count;$/;"	m	struct:e1000_mac_info
mta_shadow	hw.h	/^	u32 mta_shadow[MAX_MTA_REG];$/;"	m	struct:e1000_mac_info
mutex_lock	kcompat.h	1826;"	d
mutex_unlock	kcompat.h	1827;"	d
n_stats	kcompat.h	/^	u32 n_stats;$/;"	m	struct:ethtool_stats
n_stats	kcompat.h	/^	u32 n_stats;$/;"	m	struct:k_ethtool_drvinfo
name	e1000.h	/^	char name[IFNAMSIZ + 5];$/;"	m	struct:e1000_ring
name	netdev.c	/^	char *name;$/;"	m	struct:e1000_reg_info	file:
name	param.c	/^	const char *name;$/;"	m	struct:e1000_option	file:
napi	e1000.h	/^	struct napi_struct napi;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::napi_struct
napi_complete	kcompat.h	2274;"	d
napi_complete	kcompat.h	2276;"	d
napi_disable	kcompat.h	2258;"	d
napi_enable	kcompat.h	2257;"	d
napi_gro_receive	kcompat.h	189;"	d
napi_schedule	kcompat.h	2256;"	d
napi_schedule_prep	kcompat.h	2255;"	d
napi_struct	kcompat.h	/^struct napi_struct {$/;"	s
napi_synchronize	kcompat.h	/^static inline void napi_synchronize(const struct napi_struct *n)$/;"	f
napi_synchronize	kcompat.h	2270;"	d
napi_to_poll_dev	kcompat.h	2243;"	d
net_stats	e1000.h	/^	struct net_device_stats net_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device_stats
netdev	e1000.h	/^	struct net_device *netdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device
netdev_alert	kcompat.h	2899;"	d
netdev_alert	kcompat.h	2900;"	d
netdev_alloc_page	kcompat.h	2517;"	d
netdev_alloc_skb_ip_align	kcompat.h	3103;"	d
netdev_alloc_skb_ip_align	kcompat.h	3105;"	d
netdev_completed_queue	kcompat.h	3451;"	d
netdev_crit	kcompat.h	2902;"	d
netdev_crit	kcompat.h	2903;"	d
netdev_dbg	kcompat.h	2917;"	d
netdev_dbg	kcompat.h	2919;"	d
netdev_dbg	kcompat.h	2925;"	d
netdev_emerg	kcompat.h	2896;"	d
netdev_emerg	kcompat.h	2897;"	d
netdev_err	kcompat.h	2905;"	d
netdev_err	kcompat.h	2906;"	d
netdev_features_t	kcompat.h	/^typedef u32 netdev_features_t;$/;"	t
netdev_for_each_mc_addr	kcompat.h	2842;"	d
netdev_for_each_uc_addr	kcompat.h	2609;"	d
netdev_for_each_uc_addr	kcompat.h	2852;"	d
netdev_info	kcompat.h	2914;"	d
netdev_info	kcompat.h	2915;"	d
netdev_mc_count	kcompat.h	2836;"	d
netdev_mc_empty	kcompat.h	2839;"	d
netdev_name	kcompat.h	1360;"	d
netdev_name	kcompat.h	2872;"	d
netdev_notice	kcompat.h	2911;"	d
netdev_notice	kcompat.h	2912;"	d
netdev_printk	kcompat.h	2875;"	d
netdev_printk	kcompat.h	2877;"	d
netdev_printk	kcompat.h	2883;"	d
netdev_printk	kcompat.h	2891;"	d
netdev_priv	kcompat.h	1142;"	d
netdev_reset_queue	kcompat.h	3455;"	d
netdev_sent_queue	kcompat.h	3453;"	d
netdev_to_dev	kcompat.h	/^static inline struct device *netdev_to_dev(struct net_device *netdev)$/;"	f
netdev_to_dev	kcompat.h	2114;"	d
netdev_tx_completed_queue	kcompat.h	3450;"	d
netdev_tx_reset_queue	kcompat.h	3454;"	d
netdev_tx_sent_queue	kcompat.h	3452;"	d
netdev_tx_t	kcompat.h	2662;"	d
netdev_tx_t	kcompat.h	2663;"	d
netdev_uc_count	kcompat.h	2606;"	d
netdev_uc_count	kcompat.h	2846;"	d
netdev_uc_empty	kcompat.h	2849;"	d
netdev_warn	kcompat.h	2908;"	d
netdev_warn	kcompat.h	2909;"	d
netif_alert	kcompat.h	2943;"	d
netif_alert	kcompat.h	2944;"	d
netif_crit	kcompat.h	2946;"	d
netif_crit	kcompat.h	2947;"	d
netif_dbg	kcompat.h	2961;"	d
netif_dbg	kcompat.h	2962;"	d
netif_emerg	kcompat.h	2940;"	d
netif_emerg	kcompat.h	2941;"	d
netif_err	kcompat.h	2949;"	d
netif_err	kcompat.h	2950;"	d
netif_info	kcompat.h	2958;"	d
netif_info	kcompat.h	2959;"	d
netif_is_multiqueue	kcompat.h	2479;"	d
netif_level	kcompat.h	3107;"	d
netif_level	kcompat.h	3108;"	d
netif_msg_drv	kcompat.h	923;"	d
netif_msg_hw	kcompat.h	1001;"	d
netif_msg_ifdown	kcompat.h	927;"	d
netif_msg_ifup	kcompat.h	928;"	d
netif_msg_init	kcompat.h	1123;"	d
netif_msg_intr	kcompat.h	932;"	d
netif_msg_link	kcompat.h	925;"	d
netif_msg_pktdata	kcompat.h	935;"	d
netif_msg_probe	kcompat.h	924;"	d
netif_msg_rx_err	kcompat.h	929;"	d
netif_msg_rx_status	kcompat.h	934;"	d
netif_msg_timer	kcompat.h	926;"	d
netif_msg_tx_done	kcompat.h	933;"	d
netif_msg_tx_err	kcompat.h	930;"	d
netif_msg_tx_queued	kcompat.h	931;"	d
netif_msg_wol	kcompat.h	1004;"	d
netif_napi_add	kcompat.h	2244;"	d
netif_napi_add	kcompat.h	2283;"	d
netif_napi_del	kcompat.h	2254;"	d
netif_napi_del	kcompat.h	2292;"	d
netif_napi_del	kcompat.h	2432;"	d
netif_napi_del	kcompat.h	2435;"	d
netif_napi_del	kcompat.h	2436;"	d
netif_notice	kcompat.h	2955;"	d
netif_notice	kcompat.h	2956;"	d
netif_poll_disable	kcompat.h	1065;"	d
netif_poll_enable	kcompat.h	1076;"	d
netif_printk	kcompat.h	2933;"	d
netif_printk	kcompat.h	2934;"	d
netif_set_real_num_rx_queues	kcompat.h	3143;"	d
netif_set_real_num_tx_queues	kcompat.h	3040;"	d
netif_set_real_num_tx_queues	kcompat.h	3043;"	d
netif_set_real_num_tx_queues	kcompat.h	3049;"	d
netif_start_subqueue	kcompat.h	2459;"	d
netif_start_subqueue	kcompat.h	2460;"	d
netif_start_subqueue	kcompat.h	2475;"	d
netif_stop_subqueue	kcompat.h	2452;"	d
netif_stop_subqueue	kcompat.h	2453;"	d
netif_stop_subqueue	kcompat.h	2474;"	d
netif_subqueue_stopped	kcompat.h	2210;"	d
netif_tx_disable	kcompat.h	1084;"	d
netif_tx_start_all_queues	kcompat.h	2451;"	d
netif_tx_start_all_queues	kcompat.h	2470;"	d
netif_tx_start_all_queues	kcompat.h	2472;"	d
netif_tx_stop_all_queues	kcompat.h	2449;"	d
netif_tx_stop_all_queues	kcompat.h	2467;"	d
netif_tx_wake_all_queues	kcompat.h	2450;"	d
netif_tx_wake_all_queues	kcompat.h	2468;"	d
netif_wake_subqueue	kcompat.h	2480;"	d
netif_warn	kcompat.h	2952;"	d
netif_warn	kcompat.h	2953;"	d
new_handler_t	kcompat.h	/^typedef irqreturn_t(*new_handler_t) (int, void *);$/;"	t
next	kcompat.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next_to_clean	e1000.h	/^	u16 next_to_clean;$/;"	m	struct:e1000_ring
next_to_use	e1000.h	/^	u16 next_to_use;$/;"	m	struct:e1000_ring
next_to_watch	e1000.h	/^			u16 next_to_watch;$/;"	m	struct:e1000_buffer::__anon1::__anon2
node	e1000.h	/^	int node; \/* store the node to allocate memory on *\/$/;"	m	struct:e1000_adapter
node_online	kcompat.h	237;"	d
node_online_map	kcompat.h	1640;"	d
node_online_map	kcompat.h	1641;"	d
nr	param.c	/^			int nr;$/;"	m	struct:e1000_option::__anon36::__anon38	file:
num_online_cpus	kcompat.h	241;"	d
num_online_nodes	kcompat.h	1637;"	d
num_online_nodes	kcompat.h	1638;"	d
num_vectors	e1000.h	/^	unsigned int num_vectors;$/;"	m	struct:e1000_adapter
numa_node_id	kcompat.h	3033;"	d
number	kcompat.c	/^static char *number(char *buf, char *end, long long num, int base, int size,$/;"	f	file:
nvm	hw.h	/^	struct e1000_nvm_info nvm;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_nvm_info
nvm_k1_enabled	hw.h	/^	bool nvm_k1_enabled;$/;"	m	struct:e1000_dev_spec_ich8lan
nvm_ops	e1000.h	/^	const struct e1000_nvm_operations *nvm_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_info::e1000_nvm_operations
nway_reset	kcompat_ethtool.c	/^	int (*nway_reset) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
offset	kcompat.h	/^	u32 offset;$/;"	m	struct:ethtool_eeprom
ofs	netdev.c	/^	u32 ofs;$/;"	m	struct:e1000_reg_info	file:
opcode_bits	hw.h	/^	u16 opcode_bits;$/;"	m	struct:e1000_nvm_info
ops	hw.h	/^	struct e1000_mac_operations ops;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_info::e1000_mac_operations
ops	hw.h	/^	struct e1000_nvm_operations ops;$/;"	m	struct:e1000_nvm_info	typeref:struct:e1000_nvm_info::e1000_nvm_operations
ops	hw.h	/^	struct e1000_phy_operations ops;$/;"	m	struct:e1000_phy_info	typeref:struct:e1000_phy_info::e1000_phy_operations
original_ms_type	hw.h	/^	enum e1000_ms_type original_ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
override	hw.h	/^	enum e1000_nvm_override override;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_override
p	param.c	/^			} *p;$/;"	m	struct:e1000_option::__anon36::__anon38	typeref:struct:e1000_option::__anon36::__anon38::e1000_opt_list	file:
page	e1000.h	/^			struct page *page;$/;"	m	struct:e1000_buffer::__anon1::__anon3	typeref:struct:e1000_buffer::__anon1::__anon3::page
page	e1000.h	/^	struct page *page;$/;"	m	struct:e1000_ps_page	typeref:struct:e1000_ps_page::page
page_count	kcompat.h	1332;"	d
page_size	hw.h	/^	u16 page_size;$/;"	m	struct:e1000_nvm_info
page_to_nid	kcompat.h	1464;"	d
pause_time	hw.h	/^	u16 pause_time;		\/* Flow control pause timer *\/$/;"	m	struct:e1000_fc_info
pba	e1000.h	/^	u32			pba;$/;"	m	struct:e1000_info
pba	e1000.h	/^	u32 pba;$/;"	m	struct:e1000_adapter
pci_channel_offline	kcompat.h	2103;"	d
pci_choose_state	kcompat.h	1653;"	d
pci_cleanup_aer_uncorrect_error_status	kcompat.h	2018;"	d
pci_clear_master	kcompat.h	2552;"	d
pci_clear_mwi	kcompat.h	833;"	d
pci_config_space_ich8lan	kcompat.h	1995;"	d
pci_dev_run_wake	kcompat.h	2860;"	d
pci_dev_to_dev	kcompat.h	/^static inline struct device *pci_dev_to_dev(struct pci_dev *pdev)$/;"	f
pci_disable_device	kcompat.h	821;"	d
pci_disable_link_state	kcompat.h	2381;"	d
pci_disable_link_state_locked	kcompat.h	3320;"	d
pci_disable_msi	kcompat.h	94;"	d
pci_disable_msi	kcompat.h	95;"	d
pci_disable_msix	kcompat.h	98;"	d
pci_disable_msix	kcompat.h	99;"	d
pci_disable_pcie_error_reporting	kcompat.h	2017;"	d
pci_disable_sriov	kcompat.h	2576;"	d
pci_disable_sriov	kcompat.h	2577;"	d
pci_dma_mapping_error	kcompat.h	1427;"	d
pci_drvdata	kcompat_ethtool.c	/^	void *pci_drvdata;$/;"	m	struct:_kc_pci_dev_ext	file:
pci_enable_device_mem	kcompat.h	2357;"	d
pci_enable_msi	kcompat.h	92;"	d
pci_enable_msi	kcompat.h	93;"	d
pci_enable_msix	kcompat.h	96;"	d
pci_enable_msix	kcompat.h	97;"	d
pci_enable_pcie_error_reporting	kcompat.h	/^static inline int pci_enable_pcie_error_reporting(struct pci_dev *dev)$/;"	f
pci_enable_sriov	kcompat.h	2574;"	d
pci_enable_sriov	kcompat.h	2575;"	d
pci_enable_wake	kcompat.h	816;"	d
pci_get_class	kcompat.h	1642;"	d
pci_get_device	kcompat.h	1113;"	d
pci_ioremap_bar	kcompat.h	2511;"	d
pci_is_pcie	kcompat.h	/^static inline bool pci_is_pcie(struct pci_dev *dev)$/;"	f
pci_map_page	kcompat.h	951;"	d
pci_name	kcompat.h	1048;"	d
pci_num_vf	kcompat.h	2826;"	d
pci_pcie_cap	kcompat.h	2736;"	d
pci_pcie_type	kcompat.h	/^static inline u8 pci_pcie_type(struct pci_dev *pdev)$/;"	f
pci_pcie_type	kcompat.h	3669;"	d
pci_power_t	kcompat.h	/^typedef int pci_power_t;$/;"	t
pci_prepare_to_sleep	kcompat.h	2514;"	d
pci_register_driver	kcompat.h	1149;"	d
pci_register_driver	kcompat.h	1150;"	d
pci_register_driver	kcompat.h	2148;"	d
pci_release_regions	kcompat.h	742;"	d
pci_release_selected_regions	kcompat.h	2107;"	d
pci_request_regions	kcompat.h	737;"	d
pci_request_selected_regions	kcompat.h	2105;"	d
pci_request_selected_regions_exclusive	kcompat.h	2539;"	d
pci_restore_state	kcompat.h	2002;"	d
pci_restore_state	kcompat.h	2004;"	d
pci_save_state	kcompat.h	1999;"	d
pci_save_state	kcompat.h	2001;"	d
pci_set_dma_mask	kcompat.h	732;"	d
pci_set_mwi	kcompat.h	831;"	d
pci_set_power_state	kcompat.h	811;"	d
pci_unmap_addr	kcompat.h	1930;"	d
pci_unmap_addr_set	kcompat.h	1932;"	d
pci_unmap_len	kcompat.h	1934;"	d
pci_unmap_len_set	kcompat.h	1936;"	d
pci_unmap_page	kcompat.h	957;"	d
pci_wake_from_d3	kcompat.h	2513;"	d
pcie_aspm_enabled	kcompat.h	2545;"	d
pcie_capability_clear_and_set_word	kcompat.h	3682;"	d
pcie_capability_clear_word	kcompat.h	/^static inline int pcie_capability_clear_word(struct pci_dev *dev, int pos,$/;"	f
pcie_capability_read_word	kcompat.h	3677;"	d
pcie_capability_write_word	kcompat.h	3679;"	d
pdev	e1000.h	/^	struct pci_dev *pdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::pci_dev
pdev	kcompat.h	/^	struct pci_dev pdev;$/;"	m	struct:device	typeref:struct:device::pci_dev
pdev_printk	kcompat.h	1179;"	d
perm_addr	hw.h	/^	u8 perm_addr[ETH_ALEN];$/;"	m	struct:e1000_mac_info
phy	hw.h	/^	struct e1000_phy_info phy;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_phy_info
phy_hang_count	e1000.h	/^	int phy_hang_count;$/;"	m	struct:e1000_adapter
phy_id	kcompat_ethtool.c	/^	int phy_id;$/;"	m	struct:_kc_mii_if_info	file:
phy_id_mask	kcompat_ethtool.c	/^	int phy_id_mask;$/;"	m	struct:_kc_mii_if_info	file:
phy_info	e1000.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_info
phy_info_timer	e1000.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
phy_ops	e1000.h	/^	const struct e1000_phy_operations *phy_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_info::e1000_phy_operations
phy_regs	e1000.h	/^	struct e1000_phy_regs phy_regs;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_regs
phy_stats	e1000.h	/^	struct e1000_phy_stats phy_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_stats
phys_id	kcompat_ethtool.c	/^	int (*phys_id) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
pkt_rate_high	kcompat.h	/^	u32 pkt_rate_high;$/;"	m	struct:_kc_ethtool_coalesce
pkt_rate_low	kcompat.h	/^	u32 pkt_rate_low;$/;"	m	struct:_kc_ethtool_coalesce
pm_message_t	kcompat.h	1750;"	d
pm_qos_add_requirement	kcompat.h	2338;"	d
pm_qos_add_requirement	kcompat.h	2346;"	d
pm_qos_remove_requirement	kcompat.h	2340;"	d
pm_qos_remove_requirement	kcompat.h	2347;"	d
pm_qos_update_requirement	kcompat.h	2342;"	d
pm_qos_update_requirement	kcompat.h	2348;"	d
pm_runtime_disable	kcompat.h	2703;"	d
pm_runtime_enable	kcompat.h	2712;"	d
pm_runtime_get_noresume	kcompat.h	2715;"	d
pm_runtime_get_sync	kcompat.h	2676;"	d
pm_runtime_get_sync	kcompat.h	2684;"	d
pm_runtime_put	kcompat.h	2688;"	d
pm_runtime_put_noidle	kcompat.h	2706;"	d
pm_runtime_put_sync	kcompat.h	2691;"	d
pm_runtime_resume	kcompat.h	2694;"	d
pm_runtime_set_active	kcompat.h	2709;"	d
pm_runtime_set_suspended	kcompat.h	2700;"	d
pm_runtime_suspended	kcompat.h	3005;"	d
pm_runtime_suspended	kcompat.h	3013;"	d
pm_schedule_suspend	kcompat.h	2697;"	d
polarity_correction	hw.h	/^	bool polarity_correction;$/;"	m	struct:e1000_phy_info
poll	kcompat.h	/^	int (*poll) (struct napi_struct *, int);$/;"	m	struct:napi_struct
popts	hw.h	/^			u8 popts;	\/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon30::__anon31
power_down	hw.h	/^	void (*power_down) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
power_up	hw.h	/^	void (*power_up) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
pprev	kcompat.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
pr_cont	kcompat.h	2580;"	d
pr_err	kcompat.h	2314;"	d
pr_fmt	netdev.c	29;"	d	file:
prc1023	hw.h	/^	u64 prc1023;$/;"	m	struct:e1000_hw_stats
prc127	hw.h	/^	u64 prc127;$/;"	m	struct:e1000_hw_stats
prc1522	hw.h	/^	u64 prc1522;$/;"	m	struct:e1000_hw_stats
prc255	hw.h	/^	u64 prc255;$/;"	m	struct:e1000_hw_stats
prc511	hw.h	/^	u64 prc511;$/;"	m	struct:e1000_hw_stats
prc64	hw.h	/^	u64 prc64;$/;"	m	struct:e1000_hw_stats
prefetch	kcompat.h	1660;"	d
print_hang_task	e1000.h	/^	struct work_struct print_hang_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
print_hex_dump	kcompat.h	2188;"	d
ps_pages	e1000.h	/^			struct e1000_ps_page *ps_pages;$/;"	m	struct:e1000_buffer::__anon1::__anon3	typeref:struct:e1000_buffer::__anon1::__anon3::e1000_ps_page
ptc1023	hw.h	/^	u64 ptc1023;$/;"	m	struct:e1000_hw_stats
ptc127	hw.h	/^	u64 ptc127;$/;"	m	struct:e1000_hw_stats
ptc1522	hw.h	/^	u64 ptc1522;$/;"	m	struct:e1000_hw_stats
ptc255	hw.h	/^	u64 ptc255;$/;"	m	struct:e1000_hw_stats
ptc511	hw.h	/^	u64 ptc511;$/;"	m	struct:e1000_hw_stats
ptc64	hw.h	/^	u64 ptc64;$/;"	m	struct:e1000_hw_stats
ptp_clock	e1000.h	/^	struct ptp_clock *ptp_clock;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::ptp_clock
ptp_clock_info	e1000.h	/^	struct ptp_clock_info ptp_clock_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::ptp_clock_info
ptp_clock_register	kcompat.h	3673;"	d
put_cpu	kcompat.h	1307;"	d
put_cpu	kcompat.h	1308;"	d
r	param.c	/^		} r;$/;"	m	union:e1000_option::__anon36	typeref:struct:e1000_option::__anon36::__anon37	file:
random_ether_addr	kcompat.h	1456;"	d
range_option	param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon35	file:
rar_entry_count	hw.h	/^	u16 rar_entry_count;$/;"	m	struct:e1000_mac_info
rar_set	hw.h	/^	void (*rar_set) (struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
rate_sample_interval	kcompat.h	/^	u32 rate_sample_interval;$/;"	m	struct:_kc_ethtool_coalesce
read	hw.h	/^	s32(*read) (struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
read	hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon5
read	hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon11
read_barrier_depends	kcompat.h	1302;"	d
read_mac_addr	hw.h	/^	 s32(*read_mac_addr) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
read_reg	hw.h	/^	s32(*read_reg) (struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_locked	hw.h	/^	s32(*read_reg_locked) (struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_page	hw.h	/^	s32(*read_reg_page) (struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
receive_errors	hw.h	/^	u32 receive_errors;$/;"	m	struct:e1000_phy_stats
refresh_time	hw.h	/^	u16 refresh_time;	\/* Flow control refresh timer *\/$/;"	m	struct:e1000_fc_info
reg_num_mask	kcompat_ethtool.c	/^	int reg_num_mask;$/;"	m	struct:_kc_mii_if_info	file:
reg_pattern_test	ethtool.c	/^static bool reg_pattern_test(struct e1000_adapter *adapter, u64 *data,$/;"	f	file:
reg_set_and_check	ethtool.c	/^static bool reg_set_and_check(struct e1000_adapter *adapter, u64 *data,$/;"	f	file:
regdump_len	kcompat.h	/^	u32 regdump_len;$/;"	m	struct:k_ethtool_drvinfo
regval	ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_ctrl	file:
regval	ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_regacc	file:
regval	ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_status	file:
release	hw.h	/^	void (*release) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
release	hw.h	/^	void (*release) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
reload	hw.h	/^	void (*reload) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
remote_rx	hw.h	/^	enum e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
request_irq	kcompat.h	1986;"	d
request_irq	kcompat.h	1987;"	d
requested_mode	hw.h	/^	enum e1000_fc_mode requested_mode;	\/* FC mode requested by caller *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
reserved	hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_extended::__anon5
reserved	hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_packet_split::__anon12
reserved	ich8lan.c	/^		u16 reserved:5;	\/* 7:3 Reserved  *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
reserved	kcompat.h	/^	u32 reserved;$/;"	m	struct:ethtool_test
reserved0	hw.h	/^	u8 reserved0;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	hw.h	/^	u16 reserved1;$/;"	m	struct:e1000_host_mng_command_header
reserved1	hw.h	/^	u32 reserved1;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	ich8lan.c	/^		u16 reserved1:2;	\/* bit 13:6 Reserved *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
reserved1	kcompat.h	/^	char reserved1[32];$/;"	m	struct:k_ethtool_drvinfo
reserved2	hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_command_header
reserved2	hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved2	ich8lan.c	/^		u16 reserved2:6;	\/* bit 13:6 Reserved *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
reserved2	kcompat.h	/^	char reserved2[16];$/;"	m	struct:k_ethtool_drvinfo
reserved3	hw.h	/^	u8 reserved3;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reset	hw.h	/^	 s32(*reset) (struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
reset_delay_us	hw.h	/^	u32 reset_delay_us;	\/* in usec *\/$/;"	m	struct:e1000_phy_info
reset_hw	hw.h	/^	 s32(*reset_hw) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
reset_task	e1000.h	/^	struct work_struct reset_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
resource_size_t	kcompat.h	1905;"	d
restart_queue	e1000.h	/^	unsigned int restart_queue;$/;"	m	struct:e1000_adapter
revision	hw.h	/^	u32 revision;$/;"	m	struct:e1000_phy_info
revision_id	e1000.h	/^	u8 revision_id;$/;"	m	struct:e1000_adapter
rfc	hw.h	/^	u64 rfc;$/;"	m	struct:e1000_hw_stats
ring_cookie	kcompat.h	/^	__u64 ring_cookie;$/;"	m	struct:_kc_ethtool_rx_flow_spec
rjc	hw.h	/^	u64 rjc;$/;"	m	struct:e1000_hw_stats
rlec	hw.h	/^	u64 rlec;$/;"	m	struct:e1000_hw_stats
rnbc	hw.h	/^	u64 rnbc;$/;"	m	struct:e1000_hw_stats
roc	hw.h	/^	u64 roc;$/;"	m	struct:e1000_hw_stats
round_jiffies	kcompat.h	2057;"	d
rss	hw.h	/^				__le32 rss;	\/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_extended::__anon6::__anon7::__anon8
rss	hw.h	/^				__le32 rss;	\/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_packet_split::__anon12::__anon13::__anon14
ruc	hw.h	/^	u64 ruc;$/;"	m	struct:e1000_hw_stats
rx_abs_int_delay	e1000.h	/^	u32 rx_abs_int_delay;$/;"	m	struct:e1000_adapter
rx_buffer_len	e1000.h	/^	u32 rx_buffer_len;$/;"	m	struct:e1000_adapter
rx_coalesce_usecs	kcompat.h	/^	u32 rx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_high	kcompat.h	/^	u32 rx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_irq	kcompat.h	/^	u32 rx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_low	kcompat.h	/^	u32 rx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_dma_failed	e1000.h	/^	u32 rx_dma_failed;$/;"	m	struct:e1000_adapter
rx_dropped_backlog	e1000.h	/^	u64 rx_dropped_backlog;		\/* count drops from rx int handler *\/$/;"	m	struct:e1000_adapter
rx_hdr_split	e1000.h	/^	u64 rx_hdr_split;$/;"	m	struct:e1000_adapter
rx_hwtstamp_cleared	e1000.h	/^	u32 rx_hwtstamp_cleared;$/;"	m	struct:e1000_adapter
rx_int_delay	e1000.h	/^	u32 rx_int_delay;$/;"	m	struct:e1000_adapter
rx_itr	e1000.h	/^	u16 rx_itr;$/;"	m	struct:e1000_adapter
rx_jumbo_max_pending	kcompat.h	/^	u32 rx_jumbo_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_jumbo_pending	kcompat.h	/^	u32 rx_jumbo_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_max_coalesced_frames	kcompat.h	/^	u32 rx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_high	kcompat.h	/^	u32 rx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_irq	kcompat.h	/^	u32 rx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_low	kcompat.h	/^	u32 rx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_pending	kcompat.h	/^	u32 rx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_max_pending	kcompat.h	/^	u32 rx_mini_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_pending	kcompat.h	/^	u32 rx_mini_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_pause	kcompat.h	/^	u32 rx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
rx_pending	kcompat.h	/^	u32 rx_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_ps_bsize0	e1000.h	/^	u16 rx_ps_bsize0;$/;"	m	struct:e1000_adapter
rx_ps_pages	e1000.h	/^	unsigned int rx_ps_pages;$/;"	m	struct:e1000_adapter
rx_ring	e1000.h	/^	struct e1000_ring *rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_ring
rx_ring_count	e1000.h	/^	u16 rx_ring_count;$/;"	m	struct:e1000_adapter
rx_skb_top	e1000.h	/^	struct sk_buff *rx_skb_top;$/;"	m	struct:e1000_ring	typeref:struct:e1000_ring::sk_buff
rxerrc	hw.h	/^	u64 rxerrc;$/;"	m	struct:e1000_hw_stats
rxtop	netdev.c	1649;"	d	file:
scc	hw.h	/^	u64 scc;$/;"	m	struct:e1000_hw_stats
schedule_work	kcompat.h	1292;"	d
scnprintf	kcompat.h	1438;"	d
sec	hw.h	/^	u64 sec;$/;"	m	struct:e1000_hw_stats
segs	e1000.h	/^			unsigned int segs;$/;"	m	struct:e1000_buffer::__anon1::__anon2
self_test	kcompat_ethtool.c	/^	void (*self_test) (struct net_device *, struct ethtool_test *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
self_test_count	kcompat_ethtool.c	/^	int (*self_test_count) (struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
send_xon	hw.h	/^	bool send_xon;		\/* Flow control send XON *\/$/;"	m	struct:e1000_fc_info
serdes_has_link	hw.h	/^	bool serdes_has_link;$/;"	m	struct:e1000_mac_info
serdes_link_state	hw.h	/^	enum e1000_serdes_link_state serdes_link_state;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_serdes_link_state
set_coalesce	kcompat_ethtool.c	/^	int (*set_coalesce) (struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
set_d0_lplu_state	hw.h	/^	 s32(*set_d0_lplu_state) (struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_d3_lplu_state	hw.h	/^	 s32(*set_d3_lplu_state) (struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_dev_node	kcompat.h	2064;"	d
set_dev_node	kcompat.h	2066;"	d
set_eeprom	kcompat_ethtool.c	/^	int (*set_eeprom) (struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
set_itr	e1000.h	/^	int set_itr;$/;"	m	struct:e1000_ring
set_lan_id	hw.h	/^	void (*set_lan_id) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
set_msglevel	kcompat_ethtool.c	/^	void (*set_msglevel) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_page	hw.h	/^	s32(*set_page) (struct e1000_hw *, u16);$/;"	m	struct:e1000_phy_operations
set_pauseparam	kcompat_ethtool.c	/^	int (*set_pauseparam) (struct net_device *,$/;"	m	struct:_kc_ethtool_ops	file:
set_ringparam	kcompat_ethtool.c	/^	int (*set_ringparam) (struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
set_rx_csum	kcompat_ethtool.c	/^	int (*set_rx_csum) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_settings	kcompat_ethtool.c	/^	int (*set_settings) (struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
set_sg	kcompat_ethtool.c	/^	int (*set_sg) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tso	kcompat_ethtool.c	/^	int (*set_tso) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tx_csum	kcompat_ethtool.c	/^	int (*set_tx_csum) (struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_wol	kcompat_ethtool.c	/^	int (*set_wol) (struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
setup_led	hw.h	/^	 s32(*setup_led) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_link	hw.h	/^	 s32(*setup_link) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_physical_interface	hw.h	/^	 s32(*setup_physical_interface) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_timer	kcompat.h	1795;"	d
shadow_ram	hw.h	/^	struct e1000_shadow_ram shadow_ram[E1000_ICH8_SHADOW_RAM_WORDS];$/;"	m	struct:e1000_dev_spec_ich8lan	typeref:struct:e1000_dev_spec_ich8lan::e1000_shadow_ram
signature	hw.h	/^	u32 signature;$/;"	m	struct:e1000_host_mng_dhcp_cookie
simple_open	kcompat.h	3477;"	d
simple_write_to_buffer	kcompat.h	3030;"	d
size	e1000.h	/^	unsigned int size;		\/* length of ring in bytes *\/$/;"	m	struct:e1000_ring
sizeof_stat	ethtool.c	/^	int sizeof_stat;$/;"	m	struct:e1000_stats	file:
sk_protocol	kcompat.h	1112;"	d
sk_tx_queue_get	kcompat.h	2802;"	d
sk_tx_queue_set	kcompat.h	2803;"	d
skb	e1000.h	/^	struct sk_buff *skb;$/;"	m	struct:e1000_buffer	typeref:struct:e1000_buffer::sk_buff
skb_add_rx_frag	kcompat.h	3498;"	d
skb_checksum_none_assert	kcompat.h	3164;"	d
skb_checksum_start_offset	kcompat.h	3221;"	d
skb_checksum_start_offset	kcompat.h	3228;"	d
skb_copy_to_linear_data	kcompat.h	2143;"	d
skb_copy_to_linear_data_offset	kcompat.h	2145;"	d
skb_dst	kcompat.h	2622;"	d
skb_fill_page_desc	kcompat.h	1323;"	d
skb_frag_address	kcompat.h	3391;"	d
skb_frag_dma_map	kcompat.h	3402;"	d
skb_frag_page	kcompat.h	3383;"	d
skb_frag_size	kcompat.h	3367;"	d
skb_frag_size_sub	kcompat.h	3375;"	d
skb_get_rx_queue	kcompat.h	2570;"	d
skb_header_cloned	kcompat.h	178;"	d
skb_header_pointer	kcompat.h	1588;"	d
skb_is_gso	kcompat.h	1894;"	d
skb_is_gso	kcompat.h	1900;"	d
skb_is_gso_v6	kcompat.h	2303;"	d
skb_mac_header	kcompat.h	2149;"	d
skb_network_header	kcompat.h	2133;"	d
skb_network_header_len	kcompat.h	2147;"	d
skb_network_offset	kcompat.h	2132;"	d
skb_pad	kcompat.h	1909;"	d
skb_pad	kcompat.h	1911;"	d
skb_padto	kcompat.h	1914;"	d
skb_padto	kcompat.h	1916;"	d
skb_queue_reverse_walk_safe	kcompat.h	3261;"	d
skb_record_rx_queue	kcompat.h	2571;"	d
skb_reset_tail_pointer	kcompat.h	2135;"	d
skb_rx_queue_recorded	kcompat.h	2569;"	d
skb_set_tail_pointer	kcompat.h	2139;"	d
skb_tail_pointer	kcompat.h	2134;"	d
skb_transport_header	kcompat.h	2129;"	d
skb_transport_offset	kcompat.h	2128;"	d
skb_tx_hash	kcompat.h	2572;"	d
skb_tx_timestamp	kcompat.h	3525;"	d
skip_atoi	kcompat.c	/^static int skip_atoi(const char **s)$/;"	f	file:
smart_speed	hw.h	/^	enum e1000_smart_speed smart_speed;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_smart_speed
smb_counter	hw.h	/^	u32 smb_counter;$/;"	m	struct:e1000_dev_spec_82571
snprintf	kcompat.h	891;"	d
sopass	kcompat.h	/^	u8 sopass[SOPASS_MAX];	\/* SecureOn(tm) password *\/$/;"	m	struct:ethtool_wolinfo
special	hw.h	/^			__le16 special;$/;"	m	struct:e1000_data_desc::__anon30::__anon31
special	hw.h	/^			__le16 special;$/;"	m	struct:e1000_tx_desc::__anon20::__anon21
speed_downgraded	hw.h	/^	bool speed_downgraded;$/;"	m	struct:e1000_phy_info
stat1000	e1000.h	/^	u16 stat1000;		\/* 1000BASE-T status register     *\/$/;"	m	struct:e1000_phy_regs
stat_offset	ethtool.c	/^	int stat_offset;$/;"	m	struct:e1000_stats	file:
stat_string	ethtool.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:e1000_stats	file:
state	e1000.h	/^	unsigned long state;$/;"	m	struct:e1000_adapter
stats	e1000.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw_stats
stats64_lock	e1000.h	/^	spinlock_t stats64_lock;	\/* protects statistics counters *\/$/;"	m	struct:e1000_adapter
stats_block_coalesce_usecs	kcompat.h	/^	u32 stats_block_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
status	hw.h	/^			u8 status;	\/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon26::__anon27
status	hw.h	/^			u8 status;	\/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon30::__anon31
status	hw.h	/^			u8 status;	\/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon20::__anon21
status	hw.h	/^	u8 status;$/;"	m	struct:e1000_host_mng_dhcp_cookie
status_error	hw.h	/^			__le32 status_error;	\/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon10
status_error	hw.h	/^			__le32 status_error;	\/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon16
str	param.c	/^				char *str;$/;"	m	struct:e1000_option::__anon36::__anon38::e1000_opt_list	file:
strict_ieee	hw.h	/^	bool strict_ieee;	\/* Strict IEEE mode *\/$/;"	m	struct:e1000_fc_info
string_set	kcompat.h	/^	u32 string_set;		\/* string set id e.c. ETH_SS_TEST, etc *\/$/;"	m	struct:ethtool_gstrings
strlcpy	kcompat.h	1364;"	d
supported	kcompat.h	/^	u32 supported;$/;"	m	struct:ethtool_wolinfo
swap	kcompat.h	2536;"	d
symerrs	hw.h	/^	u64 symerrs;$/;"	m	struct:e1000_hw_stats
synchronize_irq	kcompat.h	2592;"	d
synchronize_irq	kcompat.h	2593;"	d
sysfs_attr_init	kcompat.h	2988;"	d
sysfs_attr_init	kcompat.h	2994;"	d
systim_lock	e1000.h	/^	spinlock_t systim_lock;	\/* protects SYSTIML\/H regsters *\/$/;"	m	struct:e1000_adapter
systim_overflow_work	e1000.h	/^	struct delayed_work systim_overflow_work;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::delayed_work
tail	e1000.h	/^	void __iomem *tail;$/;"	m	struct:e1000_ring
tc	e1000.h	/^	struct timecounter tc;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timecounter
tcp_config	hw.h	/^		__le32 tcp_config;$/;"	m	union:e1000_context_desc::__anon24
tcp_fields	hw.h	/^		} tcp_fields;$/;"	m	union:e1000_context_desc::__anon24	typeref:struct:e1000_context_desc::__anon24::__anon25
tcp_hdr	kcompat.h	2126;"	d
tcp_hdrlen	kcompat.h	2127;"	d
tcp_ip4_spec	kcompat.h	/^	struct ethtool_tcpip4_spec tcp_ip4_spec;$/;"	m	union:_kc_ethtool_flow_union	typeref:struct:_kc_ethtool_flow_union::ethtool_tcpip4_spec
tcp_seg_setup	hw.h	/^	} tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon26
test_cc	Makefile	/^test_cc = $(shell $(cc) --version > \/dev\/null 2>&1 && echo $(cc))$/;"	m
test_dir	Makefile	/^    test_dir = $(findstring $(dir), $(MANPATH))$/;"	m
test_dir	Makefile	/^    test_dir = $(shell [ -e $(dir) ] && echo $(dir))$/;"	m
test_dir	Makefile	/^test_dir = $(shell [ -e $(dir)\/include\/linux ] && echo $(dir))$/;"	m
test_file	Makefile	/^test_file = $(shell [ -f $(file) ] && echo $(file))$/;"	m
test_icr	e1000.h	/^	u32 test_icr;$/;"	m	struct:e1000_adapter
test_rx_ring	e1000.h	/^	struct e1000_ring test_rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_ring
test_tx_ring	e1000.h	/^	struct e1000_ring test_tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_ring
testinfo_len	kcompat.h	/^	u32 testinfo_len;$/;"	m	struct:k_ethtool_drvinfo
time_stamp	e1000.h	/^			unsigned long time_stamp;$/;"	m	struct:e1000_buffer::__anon1::__anon2
tncrs	hw.h	/^	u64 tncrs;$/;"	m	struct:e1000_hw_stats
to_net_dev	kcompat.h	2094;"	d
to_pci_dev	kcompat.h	/^static inline struct pci_dev *to_pci_dev(struct device *dev)$/;"	f
tor	hw.h	/^	u64 tor;$/;"	m	struct:e1000_hw_stats
tot	hw.h	/^	u64 tot;$/;"	m	struct:e1000_hw_stats
total_rx_bytes	e1000.h	/^	unsigned int total_rx_bytes;$/;"	m	struct:e1000_adapter
total_rx_packets	e1000.h	/^	unsigned int total_rx_packets;$/;"	m	struct:e1000_adapter
total_tx_bytes	e1000.h	/^	unsigned int total_tx_bytes;$/;"	m	struct:e1000_adapter
total_tx_packets	e1000.h	/^	unsigned int total_tx_packets;$/;"	m	struct:e1000_adapter
tpr	hw.h	/^	u64 tpr;$/;"	m	struct:e1000_hw_stats
tpt	hw.h	/^	u64 tpt;$/;"	m	struct:e1000_hw_stats
tpt_old	e1000.h	/^	u64 tpt_old;$/;"	m	struct:e1000_adapter
true	kcompat.h	2024;"	d
tsctc	hw.h	/^	u64 tsctc;$/;"	m	struct:e1000_hw_stats
tsctfc	hw.h	/^	u64 tsctfc;$/;"	m	struct:e1000_hw_stats
tucse	hw.h	/^			__le16 tucse;	\/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon24::__anon25
tucso	hw.h	/^			u8 tucso;	\/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon24::__anon25
tucss	hw.h	/^			u8 tucss;	\/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon24::__anon25
tx_abs_int_delay	e1000.h	/^	u32 tx_abs_int_delay;$/;"	m	struct:e1000_adapter
tx_coalesce_usecs	kcompat.h	/^	u32 tx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_high	kcompat.h	/^	u32 tx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_irq	kcompat.h	/^	u32 tx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_low	kcompat.h	/^	u32 tx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_dma_failed	e1000.h	/^	u32 tx_dma_failed;$/;"	m	struct:e1000_adapter
tx_fifo_head	e1000.h	/^	u32 tx_fifo_head;$/;"	m	struct:e1000_adapter
tx_fifo_limit	e1000.h	/^	u32 tx_fifo_limit;$/;"	m	struct:e1000_adapter
tx_fifo_size	e1000.h	/^	u32 tx_fifo_size;$/;"	m	struct:e1000_adapter
tx_hang_recheck	e1000.h	/^	bool tx_hang_recheck;$/;"	m	struct:e1000_adapter
tx_head_addr	e1000.h	/^	u32 tx_head_addr;$/;"	m	struct:e1000_adapter
tx_hwtstamp_skb	e1000.h	/^	struct sk_buff *tx_hwtstamp_skb;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::sk_buff
tx_hwtstamp_work	e1000.h	/^	struct work_struct tx_hwtstamp_work;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
tx_int_delay	e1000.h	/^	u32 tx_int_delay;$/;"	m	struct:e1000_adapter
tx_itr	e1000.h	/^	u16 tx_itr;$/;"	m	struct:e1000_adapter
tx_max_coalesced_frames	kcompat.h	/^	u32 tx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_high	kcompat.h	/^	u32 tx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_irq	kcompat.h	/^	u32 tx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_low	kcompat.h	/^	u32 tx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_pending	kcompat.h	/^	u32 tx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_packet_delta	hw.h	/^	u32 tx_packet_delta;$/;"	m	struct:e1000_mac_info
tx_pause	kcompat.h	/^	u32 tx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
tx_pending	kcompat.h	/^	u32 tx_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_pkt_filtering	hw.h	/^	bool tx_pkt_filtering;$/;"	m	struct:e1000_mac_info
tx_ring_count	e1000.h	/^	u16 tx_ring_count;$/;"	m	struct:e1000_adapter
tx_timeout_count	e1000.h	/^	u32 tx_timeout_count;$/;"	m	struct:e1000_adapter
tx_timeout_factor	e1000.h	/^	u8 tx_timeout_factor;$/;"	m	struct:e1000_adapter
txcw	hw.h	/^	u32 txcw;$/;"	m	struct:e1000_mac_info
txd_cmd	e1000.h	/^	u32 txd_cmd;$/;"	m	struct:e1000_adapter
typ_len_ext	hw.h	/^			u8 typ_len_ext;$/;"	m	struct:e1000_data_desc::__anon28::__anon29
type	ethtool.c	/^	int type;$/;"	m	struct:e1000_stats	file:
type	hw.h	/^	enum e1000_mac_type type;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_mac_type
type	hw.h	/^	enum e1000_nvm_type type;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_type
type	hw.h	/^	enum e1000_phy_type type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_phy_type
type	param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	m	struct:e1000_option	typeref:enum:e1000_option::__anon35	file:
u64_stats_fetch_begin	kcompat.h	3119;"	d
u64_stats_fetch_begin_bh	kcompat.h	3121;"	d
u64_stats_fetch_retry_bh	kcompat.h	3120;"	d
u64_stats_update_begin	kcompat.h	3117;"	d
u64_stats_update_end	kcompat.h	3118;"	d
udp_hdr	kcompat.h	2162;"	d
ulp_state	hw.h	/^	enum e1000_ulp_state ulp_state;$/;"	m	struct:e1000_dev_spec_ich8lan	typeref:enum:e1000_dev_spec_ich8lan::e1000_ulp_state
uncorr_errors	e1000.h	/^	unsigned int uncorr_errors;	\/* uncorrectable ECC errors *\/$/;"	m	struct:e1000_adapter
unlikely	kcompat.h	222;"	d
update	hw.h	/^	 s32(*update) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
update_mc_addr_list	hw.h	/^	void (*update_mc_addr_list) (struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
update_phy_task	e1000.h	/^	struct work_struct update_phy_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
upper	hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_extended::__anon6	typeref:struct:e1000_rx_desc_extended::__anon6::__anon10
upper	hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_packet_split::__anon12	typeref:struct:e1000_rx_desc_packet_split::__anon12::__anon17
upper	hw.h	/^	} upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon30
upper	hw.h	/^	} upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon20
upper_setup	hw.h	/^	} upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon24
use_adaptive_rx_coalesce	kcompat.h	/^	u32 use_adaptive_rx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_adaptive_tx_coalesce	kcompat.h	/^	u32 use_adaptive_tx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
usecs_to_jiffies	kcompat.h	1668;"	d
usleep_range	kcompat.h	3114;"	d
usleep_range	kcompat.h	3115;"	d
usr_ip4_spec	kcompat.h	/^	struct ethtool_usrip4_spec usr_ip4_spec;$/;"	m	union:_kc_ethtool_flow_union	typeref:struct:_kc_ethtool_flow_union::ethtool_usrip4_spec
valid_led_default	hw.h	/^	 s32(*valid_led_default) (struct e1000_hw *, u16 *);$/;"	m	struct:e1000_nvm_operations
validate	hw.h	/^	 s32(*validate) (struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
validate_mdi_setting	hw.h	/^	 s32(*validate_mdi_setting) (struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
value	hw.h	/^	u16 value;$/;"	m	struct:e1000_shadow_ram
vector	kcompat.h	/^	u16 vector;		\/* kernel uses to write allocated vector *\/$/;"	m	struct:msix_entry
version	kcompat.h	/^	char version[32];$/;"	m	struct:k_ethtool_drvinfo
version	kcompat.h	/^	u32 version;		\/* driver-specific, indicates different chips\/revs *\/$/;"	m	struct:_kc_ethtool_regs
virt_to_page	kcompat.h	947;"	d
vlan	hw.h	/^			__le16 vlan;	\/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_extended::__anon6::__anon10
vlan	hw.h	/^			__le16 vlan;	\/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon12::__anon16
vlan_eth_hdr	kcompat.h	/^static inline struct vlan_ethhdr *vlan_eth_hdr(const struct sk_buff *skb)$/;"	f
vlan_ethhdr	kcompat.h	/^struct vlan_ethhdr {$/;"	s
vlan_ethhdr	kcompat.h	320;"	d
vlan_etype	kcompat.h	/^	__be16 vlan_etype;$/;"	m	struct:_kc_ethtool_flow_ext
vlan_get_protocol	kcompat.h	3199;"	d
vlan_gro_receive	kcompat.h	187;"	d
vlan_group_get_device	kcompat.h	2097;"	d
vlan_group_set_device	kcompat.h	2098;"	d
vlan_hdr	kcompat.h	325;"	d
vlan_id	hw.h	/^	u16 vlan_id;$/;"	m	struct:e1000_host_mng_dhcp_cookie
vlan_tci	kcompat.h	/^	__be16 vlan_tci;$/;"	m	struct:_kc_ethtool_flow_ext
vlan_tx_tag_get	kcompat.h	327;"	d
vlan_tx_tag_present	kcompat.h	326;"	d
vlgrp	e1000.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::vlan_group
vmalloc_node	kcompat.h	1792;"	d
vsnprintf	kcompat.h	893;"	d
vzalloc	kcompat.h	3184;"	d
vzalloc_node	kcompat.h	3174;"	d
watchdog_task	e1000.h	/^	struct work_struct watchdog_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
watchdog_timer	e1000.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
wb	hw.h	/^	} wb;			\/* writeback *\/$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon6
wb	hw.h	/^	} wb;			\/* writeback *\/$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon12
weight	kcompat.h	/^	int weight;$/;"	m	struct:napi_struct
width	hw.h	/^	enum e1000_bus_width width;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_width
wol	e1000.h	/^	u32 wol;$/;"	m	struct:e1000_adapter
wolopts	kcompat.h	/^	u32 wolopts;$/;"	m	struct:ethtool_wolinfo
word_size	hw.h	/^	u16 word_size;$/;"	m	struct:e1000_nvm_info
work_struct	kcompat.h	1287;"	d
write	hw.h	/^	 s32(*write) (struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
write_reg	hw.h	/^	 s32(*write_reg) (struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_locked	hw.h	/^	 s32(*write_reg_locked) (struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_page	hw.h	/^	 s32(*write_reg_page) (struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_vfta	hw.h	/^	void (*write_vfta) (struct e1000_hw *, u32, u32);$/;"	m	struct:e1000_mac_operations
xoffrxc	hw.h	/^	u64 xoffrxc;$/;"	m	struct:e1000_hw_stats
xofftxc	hw.h	/^	u64 xofftxc;$/;"	m	struct:e1000_hw_stats
xonrxc	hw.h	/^	u64 xonrxc;$/;"	m	struct:e1000_hw_stats
xontxc	hw.h	/^	u64 xontxc;$/;"	m	struct:e1000_hw_stats
